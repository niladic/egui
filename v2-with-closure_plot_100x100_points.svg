<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="534" onload="init(evt)" viewBox="0 0 1200 534" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="534" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="517.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="517.00"> </text><svg id="frames" x="10" width="1180" total_samples="14797"><g><title>benchmark-022a91b58b3cfee0`core::ptr::drop_in_place&lt;(egui::data::output::Output,alloc::vec::Vec&lt;epaint::ClippedShape&gt;)&gt; (456 samples, 3.08%)</title><rect x="0.0203%" y="293" width="3.0817%" height="15" fill="rgb(227,0,7)" fg:x="3" fg:w="456"/><text x="0.2703%" y="303.50">ben..</text></g><g><title>benchmark-022a91b58b3cfee0`core::ptr::drop_in_place&lt;epaint::shape::Shape&gt; (418 samples, 2.82%)</title><rect x="0.2771%" y="277" width="2.8249%" height="15" fill="rgb(217,0,24)" fg:x="41" fg:w="418"/><text x="0.5271%" y="287.50">be..</text></g><g><title>benchmark-022a91b58b3cfee0`core::ptr::drop_in_place&lt;epaint::shape::Shape&gt; (48 samples, 0.32%)</title><rect x="3.1020%" y="293" width="0.3244%" height="15" fill="rgb(221,193,54)" fg:x="459" fg:w="48"/><text x="3.3520%" y="303.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;egui::widgets::plot::items::Line as egui::widgets::plot::items::PlotItem&gt;::get_bounds (464 samples, 3.14%)</title><rect x="6.1364%" y="245" width="3.1358%" height="15" fill="rgb(248,212,6)" fg:x="908" fg:w="464"/><text x="6.3864%" y="255.50">ben..</text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (58 samples, 0.39%)</title><rect x="14.1380%" y="213" width="0.3920%" height="15" fill="rgb(208,68,35)" fg:x="2092" fg:w="58"/><text x="14.3880%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (52 samples, 0.35%)</title><rect x="14.1785%" y="197" width="0.3514%" height="15" fill="rgb(232,128,0)" fg:x="2098" fg:w="52"/><text x="14.4285%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (50 samples, 0.34%)</title><rect x="14.1921%" y="181" width="0.3379%" height="15" fill="rgb(207,160,47)" fg:x="2100" fg:w="50"/><text x="14.4421%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc (62 samples, 0.42%)</title><rect x="14.1177%" y="229" width="0.4190%" height="15" fill="rgb(228,23,34)" fg:x="2089" fg:w="62"/><text x="14.3677%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;egui::widgets::plot::items::Points as egui::widgets::plot::items::PlotItem&gt;::closest (780 samples, 5.27%)</title><rect x="9.2721%" y="245" width="5.2713%" height="15" fill="rgb(218,30,26)" fg:x="1372" fg:w="780"/><text x="9.5221%" y="255.50">benchm..</text></g><g><title>libsystem_malloc.dylib`medium_try_realloc_in_place (2 samples, 0.01%)</title><rect x="20.5717%" y="133" width="0.0135%" height="15" fill="rgb(220,122,19)" fg:x="3044" fg:w="2"/><text x="20.8217%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (10 samples, 0.07%)</title><rect x="20.5582%" y="165" width="0.0676%" height="15" fill="rgb(250,228,42)" fg:x="3042" fg:w="10"/><text x="20.8082%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (10 samples, 0.07%)</title><rect x="20.5582%" y="149" width="0.0676%" height="15" fill="rgb(240,193,28)" fg:x="3042" fg:w="10"/><text x="20.8082%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (5 samples, 0.03%)</title><rect x="20.5920%" y="133" width="0.0338%" height="15" fill="rgb(216,20,37)" fg:x="3047" fg:w="5"/><text x="20.8420%" y="143.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::finish_grow (12 samples, 0.08%)</title><rect x="20.5515%" y="197" width="0.0811%" height="15" fill="rgb(206,188,39)" fg:x="3041" fg:w="12"/><text x="20.8015%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`realloc (12 samples, 0.08%)</title><rect x="20.5515%" y="181" width="0.0811%" height="15" fill="rgb(217,207,13)" fg:x="3041" fg:w="12"/><text x="20.8015%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (14 samples, 0.09%)</title><rect x="20.5447%" y="213" width="0.0946%" height="15" fill="rgb(231,73,38)" fg:x="3040" fg:w="14"/><text x="20.7947%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,866 samples, 12.61%)</title><rect x="14.5908%" y="229" width="12.6107%" height="15" fill="rgb(225,20,46)" fg:x="2159" fg:w="1866"/><text x="14.8408%" y="239.50">benchmark-022a91b58..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (971 samples, 6.56%)</title><rect x="20.6393%" y="213" width="6.5621%" height="15" fill="rgb(210,31,41)" fg:x="3054" fg:w="971"/><text x="20.8893%" y="223.50">libsystem..</text></g><g><title>benchmark-022a91b58b3cfee0`DYLD-STUB$$memmove (2 samples, 0.01%)</title><rect x="27.2015%" y="229" width="0.0135%" height="15" fill="rgb(221,200,47)" fg:x="4025" fg:w="2"/><text x="27.4515%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;egui::widgets::plot::items::Points as egui::widgets::plot::items::PlotItem&gt;::get_shapes (2,008 samples, 13.57%)</title><rect x="14.5435%" y="245" width="13.5703%" height="15" fill="rgb(226,26,5)" fg:x="2152" fg:w="2008"/><text x="14.7935%" y="255.50">benchmark-022a91b58b3..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (133 samples, 0.90%)</title><rect x="27.2150%" y="229" width="0.8988%" height="15" fill="rgb(249,33,26)" fg:x="4027" fg:w="133"/><text x="27.4650%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;egui::widgets::plot::items::Points as egui::widgets::plot::items::PlotItem&gt;::highlighted (3 samples, 0.02%)</title><rect x="28.1138%" y="245" width="0.0203%" height="15" fill="rgb(235,183,28)" fg:x="4160" fg:w="3"/><text x="28.3638%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;epaint::color::Color32 as core::convert::From&lt;epaint::color::Rgba&gt;&gt;::from (369 samples, 2.49%)</title><rect x="28.1341%" y="245" width="2.4937%" height="15" fill="rgb(221,5,38)" fg:x="4163" fg:w="369"/><text x="28.3841%" y="255.50">be..</text></g><g><title>libsystem_m.dylib`roundf (14 samples, 0.09%)</title><rect x="30.5332%" y="229" width="0.0946%" height="15" fill="rgb(247,18,42)" fg:x="4518" fg:w="14"/><text x="30.7832%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`DYLD-STUB$$powf (3 samples, 0.02%)</title><rect x="30.6278%" y="245" width="0.0203%" height="15" fill="rgb(241,131,45)" fg:x="4532" fg:w="3"/><text x="30.8778%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`DYLD-STUB$$roundf (19 samples, 0.13%)</title><rect x="30.6481%" y="245" width="0.1284%" height="15" fill="rgb(249,31,29)" fg:x="4535" fg:w="19"/><text x="30.8981%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`__rdl_dealloc (4 samples, 0.03%)</title><rect x="30.7833%" y="245" width="0.0270%" height="15" fill="rgb(225,111,53)" fg:x="4555" fg:w="4"/><text x="31.0333%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::fmt::format (2 samples, 0.01%)</title><rect x="30.8171%" y="245" width="0.0135%" height="15" fill="rgb(238,160,17)" fg:x="4560" fg:w="2"/><text x="31.0671%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc (2 samples, 0.01%)</title><rect x="30.8441%" y="213" width="0.0135%" height="15" fill="rgb(214,148,48)" fg:x="4564" fg:w="2"/><text x="31.0941%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`small_try_realloc_in_place (2 samples, 0.01%)</title><rect x="30.8711%" y="181" width="0.0135%" height="15" fill="rgb(232,36,49)" fg:x="4568" fg:w="2"/><text x="31.1211%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (3 samples, 0.02%)</title><rect x="30.8914%" y="165" width="0.0203%" height="15" fill="rgb(209,103,24)" fg:x="4571" fg:w="3"/><text x="31.1414%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (3 samples, 0.02%)</title><rect x="30.8914%" y="149" width="0.0203%" height="15" fill="rgb(229,88,8)" fg:x="4571" fg:w="3"/><text x="31.1414%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`medium_try_realloc_in_place (4 samples, 0.03%)</title><rect x="30.9117%" y="165" width="0.0270%" height="15" fill="rgb(213,181,19)" fg:x="4574" fg:w="4"/><text x="31.1617%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`small_try_realloc_in_place (4 samples, 0.03%)</title><rect x="30.9387%" y="165" width="0.0270%" height="15" fill="rgb(254,191,54)" fg:x="4578" fg:w="4"/><text x="31.1887%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (3 samples, 0.02%)</title><rect x="30.9455%" y="149" width="0.0203%" height="15" fill="rgb(241,83,37)" fg:x="4579" fg:w="3"/><text x="31.1955%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (4 samples, 0.03%)</title><rect x="30.9657%" y="165" width="0.0270%" height="15" fill="rgb(233,36,39)" fg:x="4582" fg:w="4"/><text x="31.2157%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (2 samples, 0.01%)</title><rect x="30.9793%" y="149" width="0.0135%" height="15" fill="rgb(226,3,54)" fg:x="4584" fg:w="2"/><text x="31.2293%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (2 samples, 0.01%)</title><rect x="30.9928%" y="165" width="0.0135%" height="15" fill="rgb(245,192,40)" fg:x="4586" fg:w="2"/><text x="31.2428%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (31 samples, 0.21%)</title><rect x="30.8644%" y="197" width="0.2095%" height="15" fill="rgb(238,167,29)" fg:x="4567" fg:w="31"/><text x="31.1144%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (28 samples, 0.19%)</title><rect x="30.8846%" y="181" width="0.1892%" height="15" fill="rgb(232,182,51)" fg:x="4570" fg:w="28"/><text x="31.1346%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (9 samples, 0.06%)</title><rect x="31.0130%" y="165" width="0.0608%" height="15" fill="rgb(231,60,39)" fg:x="4589" fg:w="9"/><text x="31.2630%" y="175.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (39 samples, 0.26%)</title><rect x="30.8306%" y="245" width="0.2636%" height="15" fill="rgb(208,69,12)" fg:x="4562" fg:w="39"/><text x="31.0806%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::finish_grow (38 samples, 0.26%)</title><rect x="30.8373%" y="229" width="0.2568%" height="15" fill="rgb(235,93,37)" fg:x="4563" fg:w="38"/><text x="31.0873%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`realloc (35 samples, 0.24%)</title><rect x="30.8576%" y="213" width="0.2365%" height="15" fill="rgb(213,116,39)" fg:x="4566" fg:w="35"/><text x="31.1076%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`small_size (3 samples, 0.02%)</title><rect x="31.0739%" y="197" width="0.0203%" height="15" fill="rgb(222,207,29)" fg:x="4598" fg:w="3"/><text x="31.3239%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;egui::widgets::plot::items::Points as egui::widgets::plot::items::PlotItem&gt;::highlighted (3 samples, 0.02%)</title><rect x="31.1077%" y="229" width="0.0203%" height="15" fill="rgb(206,96,30)" fg:x="4603" fg:w="3"/><text x="31.3577%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.01%)</title><rect x="31.1279%" y="229" width="0.0135%" height="15" fill="rgb(218,138,4)" fg:x="4606" fg:w="2"/><text x="31.3779%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::finish_grow (2 samples, 0.01%)</title><rect x="31.1279%" y="213" width="0.0135%" height="15" fill="rgb(250,191,14)" fg:x="4606" fg:w="2"/><text x="31.3779%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc (2 samples, 0.01%)</title><rect x="31.1279%" y="197" width="0.0135%" height="15" fill="rgb(239,60,40)" fg:x="4606" fg:w="2"/><text x="31.3779%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (2 samples, 0.01%)</title><rect x="31.1279%" y="181" width="0.0135%" height="15" fill="rgb(206,27,48)" fg:x="4606" fg:w="2"/><text x="31.3779%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.01%)</title><rect x="31.1279%" y="165" width="0.0135%" height="15" fill="rgb(225,35,8)" fg:x="4606" fg:w="2"/><text x="31.3779%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.01%)</title><rect x="31.1279%" y="149" width="0.0135%" height="15" fill="rgb(250,213,24)" fg:x="4606" fg:w="2"/><text x="31.3779%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (2 samples, 0.01%)</title><rect x="31.1279%" y="133" width="0.0135%" height="15" fill="rgb(247,123,22)" fg:x="4606" fg:w="2"/><text x="31.3779%" y="143.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::slice::merge_sort (11 samples, 0.07%)</title><rect x="31.0941%" y="245" width="0.0743%" height="15" fill="rgb(231,138,38)" fg:x="4601" fg:w="11"/><text x="31.3441%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc (2 samples, 0.01%)</title><rect x="31.1550%" y="229" width="0.0135%" height="15" fill="rgb(231,145,46)" fg:x="4610" fg:w="2"/><text x="31.4050%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;egui::widgets::plot::items::Line as egui::widgets::plot::items::PlotItem&gt;::name (2 samples, 0.01%)</title><rect x="31.1955%" y="229" width="0.0135%" height="15" fill="rgb(251,118,11)" fg:x="4616" fg:w="2"/><text x="31.4455%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::vec::Vec&lt;T,A&gt;::retain (37 samples, 0.25%)</title><rect x="31.1685%" y="245" width="0.2501%" height="15" fill="rgb(217,147,25)" fg:x="4612" fg:w="37"/><text x="31.4185%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (30 samples, 0.20%)</title><rect x="31.2158%" y="229" width="0.2027%" height="15" fill="rgb(247,81,37)" fg:x="4619" fg:w="30"/><text x="31.4658%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.03%)</title><rect x="31.3847%" y="213" width="0.0338%" height="15" fill="rgb(209,12,38)" fg:x="4644" fg:w="5"/><text x="31.6347%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::float::_&lt;impl core::fmt::Display for f64&gt;::fmt (2 samples, 0.01%)</title><rect x="31.4253%" y="245" width="0.0135%" height="15" fill="rgb(227,1,9)" fg:x="4650" fg:w="2"/><text x="31.6753%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (13 samples, 0.09%)</title><rect x="31.5469%" y="229" width="0.0879%" height="15" fill="rgb(248,47,43)" fg:x="4668" fg:w="13"/><text x="31.7969%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (5 samples, 0.03%)</title><rect x="31.6010%" y="213" width="0.0338%" height="15" fill="rgb(221,10,30)" fg:x="4676" fg:w="5"/><text x="31.8510%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`DYLD-STUB$$memcpy (2 samples, 0.01%)</title><rect x="31.6348%" y="229" width="0.0135%" height="15" fill="rgb(210,229,1)" fg:x="4681" fg:w="2"/><text x="31.8848%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::Formatter::pad_formatted_parts (3 samples, 0.02%)</title><rect x="31.6483%" y="229" width="0.0203%" height="15" fill="rgb(222,148,37)" fg:x="4683" fg:w="3"/><text x="31.8983%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::float::_&lt;impl core::fmt::Display for f64&gt;::fmt (2 samples, 0.01%)</title><rect x="31.6686%" y="229" width="0.0135%" height="15" fill="rgb(234,67,33)" fg:x="4686" fg:w="2"/><text x="31.9186%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (4 samples, 0.03%)</title><rect x="31.9997%" y="213" width="0.0270%" height="15" fill="rgb(247,98,35)" fg:x="4735" fg:w="4"/><text x="32.2497%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::Formatter::pad_formatted_parts (5 samples, 0.03%)</title><rect x="32.0268%" y="213" width="0.0338%" height="15" fill="rgb(247,138,52)" fg:x="4739" fg:w="5"/><text x="32.2768%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`__rdl_alloc (2 samples, 0.01%)</title><rect x="32.3309%" y="165" width="0.0135%" height="15" fill="rgb(213,79,30)" fg:x="4784" fg:w="2"/><text x="32.5809%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (4 samples, 0.03%)</title><rect x="32.4120%" y="133" width="0.0270%" height="15" fill="rgb(246,177,23)" fg:x="4796" fg:w="4"/><text x="32.6620%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (8 samples, 0.05%)</title><rect x="32.4931%" y="117" width="0.0541%" height="15" fill="rgb(230,62,27)" fg:x="4808" fg:w="8"/><text x="32.7431%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (170 samples, 1.15%)</title><rect x="32.5471%" y="117" width="1.1489%" height="15" fill="rgb(216,154,8)" fg:x="4816" fg:w="170"/><text x="32.7971%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (163 samples, 1.10%)</title><rect x="32.5944%" y="101" width="1.1016%" height="15" fill="rgb(244,35,45)" fg:x="4823" fg:w="163"/><text x="32.8444%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (188 samples, 1.27%)</title><rect x="32.4390%" y="133" width="1.2705%" height="15" fill="rgb(251,115,12)" fg:x="4800" fg:w="188"/><text x="32.6890%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.01%)</title><rect x="33.6960%" y="117" width="0.0135%" height="15" fill="rgb(240,54,50)" fg:x="4986" fg:w="2"/><text x="33.9460%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`malloc (201 samples, 1.36%)</title><rect x="32.3714%" y="149" width="1.3584%" height="15" fill="rgb(233,84,52)" fg:x="4790" fg:w="201"/><text x="32.6214%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.02%)</title><rect x="33.7095%" y="133" width="0.0203%" height="15" fill="rgb(207,117,47)" fg:x="4988" fg:w="3"/><text x="33.9595%" y="143.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::finish_grow (208 samples, 1.41%)</title><rect x="32.3444%" y="165" width="1.4057%" height="15" fill="rgb(249,43,39)" fg:x="4786" fg:w="208"/><text x="32.5944%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (3 samples, 0.02%)</title><rect x="33.7298%" y="149" width="0.0203%" height="15" fill="rgb(209,38,44)" fg:x="4991" fg:w="3"/><text x="33.9798%" y="159.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (219 samples, 1.48%)</title><rect x="32.2768%" y="181" width="1.4800%" height="15" fill="rgb(236,212,23)" fg:x="4776" fg:w="219"/><text x="32.5268%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::finish_grow (2 samples, 0.01%)</title><rect x="33.7568%" y="181" width="0.0135%" height="15" fill="rgb(242,79,21)" fg:x="4995" fg:w="2"/><text x="34.0068%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (240 samples, 1.62%)</title><rect x="32.2025%" y="197" width="1.6220%" height="15" fill="rgb(211,96,35)" fg:x="4765" fg:w="240"/><text x="32.4525%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (8 samples, 0.05%)</title><rect x="33.7704%" y="181" width="0.0541%" height="15" fill="rgb(253,215,40)" fg:x="4997" fg:w="8"/><text x="34.0204%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::Formatter::write_formatted_parts (264 samples, 1.78%)</title><rect x="32.0606%" y="213" width="1.7841%" height="15" fill="rgb(211,81,21)" fg:x="4744" fg:w="264"/><text x="32.3106%" y="223.50">b..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.01%)</title><rect x="33.8312%" y="197" width="0.0135%" height="15" fill="rgb(208,190,38)" fg:x="5006" fg:w="2"/><text x="34.0812%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::float::float_to_decimal_common_shortest (545 samples, 3.68%)</title><rect x="31.6821%" y="229" width="3.6832%" height="15" fill="rgb(235,213,38)" fg:x="4688" fg:w="545"/><text x="31.9321%" y="239.50">benc..</text></g><g><title>benchmark-022a91b58b3cfee0`core::num::flt2dec::strategy::grisu::format_shortest_opt (225 samples, 1.52%)</title><rect x="33.8447%" y="213" width="1.5206%" height="15" fill="rgb(237,122,38)" fg:x="5008" fg:w="225"/><text x="34.0947%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::num::flt2dec::strategy::grisu::format_shortest_opt (4 samples, 0.03%)</title><rect x="35.3653%" y="229" width="0.0270%" height="15" fill="rgb(244,218,35)" fg:x="5233" fg:w="4"/><text x="35.6153%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::write (586 samples, 3.96%)</title><rect x="31.4388%" y="245" width="3.9603%" height="15" fill="rgb(240,68,47)" fg:x="4652" fg:w="586"/><text x="31.6888%" y="255.50">benc..</text></g><g><title>benchmark-022a91b58b3cfee0`core::num::dec2flt::dec2flt (2 samples, 0.01%)</title><rect x="35.3991%" y="245" width="0.0135%" height="15" fill="rgb(210,16,53)" fg:x="5238" fg:w="2"/><text x="35.6491%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`small_size (10 samples, 0.07%)</title><rect x="35.5275%" y="197" width="0.0676%" height="15" fill="rgb(235,124,12)" fg:x="5257" fg:w="10"/><text x="35.7775%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free (31 samples, 0.21%)</title><rect x="35.4599%" y="213" width="0.2095%" height="15" fill="rgb(224,169,11)" fg:x="5247" fg:w="31"/><text x="35.7099%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (11 samples, 0.07%)</title><rect x="35.5951%" y="197" width="0.0743%" height="15" fill="rgb(250,166,2)" fg:x="5267" fg:w="11"/><text x="35.8451%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (9 samples, 0.06%)</title><rect x="35.6086%" y="181" width="0.0608%" height="15" fill="rgb(242,216,29)" fg:x="5269" fg:w="9"/><text x="35.8586%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (16 samples, 0.11%)</title><rect x="35.8992%" y="197" width="0.1081%" height="15" fill="rgb(230,116,27)" fg:x="5312" fg:w="16"/><text x="36.1492%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_find_by_ptr (6 samples, 0.04%)</title><rect x="36.0073%" y="197" width="0.0405%" height="15" fill="rgb(228,99,48)" fg:x="5328" fg:w="6"/><text x="36.2573%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr (4 samples, 0.03%)</title><rect x="36.0478%" y="197" width="0.0270%" height="15" fill="rgb(253,11,6)" fg:x="5334" fg:w="4"/><text x="36.2978%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_small (87 samples, 0.59%)</title><rect x="35.6694%" y="213" width="0.5880%" height="15" fill="rgb(247,143,39)" fg:x="5278" fg:w="87"/><text x="35.9194%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (27 samples, 0.18%)</title><rect x="36.0749%" y="197" width="0.1825%" height="15" fill="rgb(236,97,10)" fg:x="5338" fg:w="27"/><text x="36.3249%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::ptr::drop_in_place&lt;egui::widgets::plot::items::Line&gt; (124 samples, 0.84%)</title><rect x="35.4261%" y="229" width="0.8380%" height="15" fill="rgb(233,208,19)" fg:x="5242" fg:w="124"/><text x="35.6761%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (20 samples, 0.14%)</title><rect x="36.2709%" y="229" width="0.1352%" height="15" fill="rgb(216,164,2)" fg:x="5367" fg:w="20"/><text x="36.5209%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (14 samples, 0.09%)</title><rect x="36.3114%" y="213" width="0.0946%" height="15" fill="rgb(220,129,5)" fg:x="5373" fg:w="14"/><text x="36.5614%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (12 samples, 0.08%)</title><rect x="36.3249%" y="197" width="0.0811%" height="15" fill="rgb(242,17,10)" fg:x="5375" fg:w="12"/><text x="36.5749%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (22 samples, 0.15%)</title><rect x="36.8588%" y="197" width="0.1487%" height="15" fill="rgb(242,107,0)" fg:x="5454" fg:w="22"/><text x="37.1088%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (101 samples, 0.68%)</title><rect x="36.4060%" y="229" width="0.6826%" height="15" fill="rgb(251,28,31)" fg:x="5387" fg:w="101"/><text x="36.6560%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (68 samples, 0.46%)</title><rect x="36.6290%" y="213" width="0.4596%" height="15" fill="rgb(233,223,10)" fg:x="5420" fg:w="68"/><text x="36.8790%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (12 samples, 0.08%)</title><rect x="37.0075%" y="197" width="0.0811%" height="15" fill="rgb(215,21,27)" fg:x="5476" fg:w="12"/><text x="37.2575%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::ptr::drop_in_place&lt;egui::widgets::plot::Prepared&gt; (251 samples, 1.70%)</title><rect x="35.4126%" y="245" width="1.6963%" height="15" fill="rgb(232,23,21)" fg:x="5240" fg:w="251"/><text x="35.6626%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (3 samples, 0.02%)</title><rect x="37.0886%" y="229" width="0.0203%" height="15" fill="rgb(244,5,23)" fg:x="5488" fg:w="3"/><text x="37.3386%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.01%)</title><rect x="37.1224%" y="229" width="0.0135%" height="15" fill="rgb(226,81,46)" fg:x="5493" fg:w="2"/><text x="37.3724%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::any::serializable::any_map::AnyMap&lt;Key&gt;::insert (4 samples, 0.03%)</title><rect x="37.1224%" y="245" width="0.0270%" height="15" fill="rgb(247,70,30)" fg:x="5493" fg:w="4"/><text x="37.3724%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc (2 samples, 0.01%)</title><rect x="37.1359%" y="229" width="0.0135%" height="15" fill="rgb(212,68,19)" fg:x="5495" fg:w="2"/><text x="37.3859%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (2 samples, 0.01%)</title><rect x="37.1359%" y="213" width="0.0135%" height="15" fill="rgb(240,187,13)" fg:x="5495" fg:w="2"/><text x="37.3859%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3,125 samples, 21.12%)</title><rect x="37.1697%" y="213" width="21.1191%" height="15" fill="rgb(223,113,26)" fg:x="5500" fg:w="3125"/><text x="37.4197%" y="223.50">benchmark-022a91b58b3cfee0`&lt;alloc..</text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.01%)</title><rect x="58.2888%" y="213" width="0.0135%" height="15" fill="rgb(206,192,2)" fg:x="8625" fg:w="2"/><text x="58.5388%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (8 samples, 0.05%)</title><rect x="58.3024%" y="213" width="0.0541%" height="15" fill="rgb(241,108,4)" fg:x="8627" fg:w="8"/><text x="58.5524%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`madvise (8 samples, 0.05%)</title><rect x="58.3024%" y="197" width="0.0541%" height="15" fill="rgb(247,173,49)" fg:x="8627" fg:w="8"/><text x="58.5524%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::painter::Painter::extend (3,141 samples, 21.23%)</title><rect x="37.1494%" y="245" width="21.2273%" height="15" fill="rgb(224,114,35)" fg:x="5497" fg:w="3141"/><text x="37.3994%" y="255.50">benchmark-022a91b58b3cfee0`egui::..</text></g><g><title>benchmark-022a91b58b3cfee0`egui::layers::PaintList::extend (3,139 samples, 21.21%)</title><rect x="37.1629%" y="229" width="21.2138%" height="15" fill="rgb(245,159,27)" fg:x="5499" fg:w="3139"/><text x="37.4129%" y="239.50">benchmark-022a91b58b3cfee0`egui::..</text></g><g><title>libsystem_malloc.dylib`szone_size (3 samples, 0.02%)</title><rect x="58.3564%" y="213" width="0.0203%" height="15" fill="rgb(245,172,44)" fg:x="8635" fg:w="3"/><text x="58.6064%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::context::Context::layer_id_at (2 samples, 0.01%)</title><rect x="58.3767%" y="213" width="0.0135%" height="15" fill="rgb(236,23,11)" fg:x="8638" fg:w="2"/><text x="58.6267%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::context::CtxRef::interact (3 samples, 0.02%)</title><rect x="58.3767%" y="229" width="0.0203%" height="15" fill="rgb(205,117,38)" fg:x="8638" fg:w="3"/><text x="58.6267%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::placer::Placer::available_rect_before_wrap (3 samples, 0.02%)</title><rect x="58.4105%" y="213" width="0.0203%" height="15" fill="rgb(237,72,25)" fg:x="8643" fg:w="3"/><text x="58.6605%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::ui::Ui::allocate_exact_size (9 samples, 0.06%)</title><rect x="58.3767%" y="245" width="0.0608%" height="15" fill="rgb(244,70,9)" fg:x="8638" fg:w="9"/><text x="58.6267%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::ui::Ui::allocate_space (6 samples, 0.04%)</title><rect x="58.3970%" y="229" width="0.0405%" height="15" fill="rgb(217,125,39)" fg:x="8641" fg:w="6"/><text x="58.6470%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::widgets::plot::items::Values::generate_points (2 samples, 0.01%)</title><rect x="58.4375%" y="245" width="0.0135%" height="15" fill="rgb(235,36,10)" fg:x="8647" fg:w="2"/><text x="58.6875%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.01%)</title><rect x="58.4848%" y="197" width="0.0135%" height="15" fill="rgb(251,123,47)" fg:x="8654" fg:w="2"/><text x="58.7348%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.01%)</title><rect x="58.5254%" y="69" width="0.0135%" height="15" fill="rgb(221,13,13)" fg:x="8660" fg:w="2"/><text x="58.7754%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.01%)</title><rect x="58.5254%" y="53" width="0.0135%" height="15" fill="rgb(238,131,9)" fg:x="8660" fg:w="2"/><text x="58.7754%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.01%)</title><rect x="58.5254%" y="37" width="0.0135%" height="15" fill="rgb(211,50,8)" fg:x="8660" fg:w="2"/><text x="58.7754%" y="47.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::Formatter::write_formatted_parts (6 samples, 0.04%)</title><rect x="58.5051%" y="181" width="0.0405%" height="15" fill="rgb(245,182,24)" fg:x="8657" fg:w="6"/><text x="58.7551%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (5 samples, 0.03%)</title><rect x="58.5119%" y="165" width="0.0338%" height="15" fill="rgb(242,14,37)" fg:x="8658" fg:w="5"/><text x="58.7619%" y="175.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.03%)</title><rect x="58.5186%" y="149" width="0.0270%" height="15" fill="rgb(246,228,12)" fg:x="8659" fg:w="4"/><text x="58.7686%" y="159.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::finish_grow (4 samples, 0.03%)</title><rect x="58.5186%" y="133" width="0.0270%" height="15" fill="rgb(213,55,15)" fg:x="8659" fg:w="4"/><text x="58.7686%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`realloc (4 samples, 0.03%)</title><rect x="58.5186%" y="117" width="0.0270%" height="15" fill="rgb(209,9,3)" fg:x="8659" fg:w="4"/><text x="58.7686%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (4 samples, 0.03%)</title><rect x="58.5186%" y="101" width="0.0270%" height="15" fill="rgb(230,59,30)" fg:x="8659" fg:w="4"/><text x="58.7686%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (3 samples, 0.02%)</title><rect x="58.5254%" y="85" width="0.0203%" height="15" fill="rgb(209,121,21)" fg:x="8660" fg:w="3"/><text x="58.7754%" y="95.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::fmt::format (12 samples, 0.08%)</title><rect x="58.4713%" y="229" width="0.0811%" height="15" fill="rgb(220,109,13)" fg:x="8652" fg:w="12"/><text x="58.7213%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::write (12 samples, 0.08%)</title><rect x="58.4713%" y="213" width="0.0811%" height="15" fill="rgb(232,18,1)" fg:x="8652" fg:w="12"/><text x="58.7213%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::float::float_to_decimal_common_exact (8 samples, 0.05%)</title><rect x="58.4983%" y="197" width="0.0541%" height="15" fill="rgb(215,41,42)" fg:x="8656" fg:w="8"/><text x="58.7483%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`epaint::text::fonts::Fonts::layout_multiline (5 samples, 0.03%)</title><rect x="58.5524%" y="213" width="0.0338%" height="15" fill="rgb(224,123,36)" fg:x="8664" fg:w="5"/><text x="58.8024%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`epaint::text::fonts::Fonts::layout_multiline_with_indentation_and_max_width (5 samples, 0.03%)</title><rect x="58.5524%" y="197" width="0.0338%" height="15" fill="rgb(240,125,3)" fg:x="8664" fg:w="5"/><text x="58.8024%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`epaint::shape::Shape::text (6 samples, 0.04%)</title><rect x="58.5524%" y="229" width="0.0405%" height="15" fill="rgb(205,98,50)" fg:x="8664" fg:w="6"/><text x="58.8024%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::widgets::plot::items::rulers_at_value (23 samples, 0.16%)</title><rect x="58.4510%" y="245" width="0.1554%" height="15" fill="rgb(205,185,37)" fg:x="8649" fg:w="23"/><text x="58.7010%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.01%)</title><rect x="58.5930%" y="229" width="0.0135%" height="15" fill="rgb(238,207,15)" fg:x="8670" fg:w="2"/><text x="58.8430%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;f64 as core::num::dec2flt::rawfp::RawFloat&gt;::from_int (4 samples, 0.03%)</title><rect x="58.7687%" y="229" width="0.0270%" height="15" fill="rgb(213,199,42)" fg:x="8696" fg:w="4"/><text x="59.0187%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;f64 as core::num::dec2flt::rawfp::RawFloat&gt;::short_fast_pow10 (3 samples, 0.02%)</title><rect x="58.7957%" y="229" width="0.0203%" height="15" fill="rgb(235,201,11)" fg:x="8700" fg:w="3"/><text x="59.0457%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (19 samples, 0.13%)</title><rect x="59.1809%" y="197" width="0.1284%" height="15" fill="rgb(207,46,11)" fg:x="8757" fg:w="19"/><text x="59.4309%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (10 samples, 0.07%)</title><rect x="59.2417%" y="181" width="0.0676%" height="15" fill="rgb(241,35,35)" fg:x="8766" fg:w="10"/><text x="59.4917%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::Formatter::write_formatted_parts (3 samples, 0.02%)</title><rect x="59.3161%" y="197" width="0.0203%" height="15" fill="rgb(243,32,47)" fg:x="8777" fg:w="3"/><text x="59.5661%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (5 samples, 0.03%)</title><rect x="59.8162%" y="181" width="0.0338%" height="15" fill="rgb(247,202,23)" fg:x="8851" fg:w="5"/><text x="60.0662%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::Formatter::pad_formatted_parts (7 samples, 0.05%)</title><rect x="59.8500%" y="181" width="0.0473%" height="15" fill="rgb(219,102,11)" fg:x="8856" fg:w="7"/><text x="60.1000%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`__rdl_alloc (8 samples, 0.05%)</title><rect x="60.5258%" y="133" width="0.0541%" height="15" fill="rgb(243,110,44)" fg:x="8956" fg:w="8"/><text x="60.7758%" y="143.50"></text></g><g><title>benchmark-022a91b58b3cfee0`__rdl_realloc (3 samples, 0.02%)</title><rect x="60.6677%" y="117" width="0.0203%" height="15" fill="rgb(222,74,54)" fg:x="8977" fg:w="3"/><text x="60.9177%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.01%)</title><rect x="60.7961%" y="101" width="0.0135%" height="15" fill="rgb(216,99,12)" fg:x="8996" fg:w="2"/><text x="61.0461%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (4 samples, 0.03%)</title><rect x="60.8434%" y="85" width="0.0270%" height="15" fill="rgb(226,22,26)" fg:x="9003" fg:w="4"/><text x="61.0934%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (148 samples, 1.00%)</title><rect x="60.8704%" y="85" width="1.0002%" height="15" fill="rgb(217,163,10)" fg:x="9007" fg:w="148"/><text x="61.1204%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (133 samples, 0.90%)</title><rect x="60.9718%" y="69" width="0.8988%" height="15" fill="rgb(213,25,53)" fg:x="9022" fg:w="133"/><text x="61.2218%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (158 samples, 1.07%)</title><rect x="60.8096%" y="101" width="1.0678%" height="15" fill="rgb(252,105,26)" fg:x="8998" fg:w="158"/><text x="61.0596%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`malloc (178 samples, 1.20%)</title><rect x="60.6880%" y="117" width="1.2029%" height="15" fill="rgb(220,39,43)" fg:x="8980" fg:w="178"/><text x="60.9380%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.01%)</title><rect x="61.8774%" y="101" width="0.0135%" height="15" fill="rgb(229,68,48)" fg:x="9156" fg:w="2"/><text x="62.1274%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_realloc (3 samples, 0.02%)</title><rect x="62.0126%" y="85" width="0.0203%" height="15" fill="rgb(252,8,32)" fg:x="9176" fg:w="3"/><text x="62.2626%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (36 samples, 0.24%)</title><rect x="61.9450%" y="101" width="0.2433%" height="15" fill="rgb(223,20,43)" fg:x="9166" fg:w="36"/><text x="62.1950%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (22 samples, 0.15%)</title><rect x="62.0396%" y="85" width="0.1487%" height="15" fill="rgb(229,81,49)" fg:x="9180" fg:w="22"/><text x="62.2896%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (18 samples, 0.12%)</title><rect x="62.0666%" y="69" width="0.1216%" height="15" fill="rgb(236,28,36)" fg:x="9184" fg:w="18"/><text x="62.3166%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (16 samples, 0.11%)</title><rect x="62.0802%" y="53" width="0.1081%" height="15" fill="rgb(249,185,26)" fg:x="9186" fg:w="16"/><text x="62.3302%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (16 samples, 0.11%)</title><rect x="62.1950%" y="101" width="0.1081%" height="15" fill="rgb(249,174,33)" fg:x="9203" fg:w="16"/><text x="62.4450%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (14 samples, 0.09%)</title><rect x="62.2086%" y="85" width="0.0946%" height="15" fill="rgb(233,201,37)" fg:x="9205" fg:w="14"/><text x="62.4586%" y="95.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::finish_grow (256 samples, 1.73%)</title><rect x="60.5866%" y="133" width="1.7301%" height="15" fill="rgb(221,78,26)" fg:x="8965" fg:w="256"/><text x="60.8366%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`realloc (63 samples, 0.43%)</title><rect x="61.8909%" y="117" width="0.4258%" height="15" fill="rgb(250,127,30)" fg:x="9158" fg:w="63"/><text x="62.1409%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.01%)</title><rect x="62.3032%" y="101" width="0.0135%" height="15" fill="rgb(230,49,44)" fg:x="9219" fg:w="2"/><text x="62.5532%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`malloc (5 samples, 0.03%)</title><rect x="62.3167%" y="133" width="0.0338%" height="15" fill="rgb(229,67,23)" fg:x="9221" fg:w="5"/><text x="62.5667%" y="143.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (291 samples, 1.97%)</title><rect x="60.3906%" y="149" width="1.9666%" height="15" fill="rgb(249,83,47)" fg:x="8936" fg:w="291"/><text x="60.6406%" y="159.50">b..</text></g><g><title>benchmark-022a91b58b3cfee0`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (365 samples, 2.47%)</title><rect x="60.0933%" y="165" width="2.4667%" height="15" fill="rgb(215,43,3)" fg:x="8892" fg:w="365"/><text x="60.3433%" y="175.50">be..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (29 samples, 0.20%)</title><rect x="62.3640%" y="149" width="0.1960%" height="15" fill="rgb(238,154,13)" fg:x="9228" fg:w="29"/><text x="62.6140%" y="159.50"></text></g><g><title>benchmark-022a91b58b3cfee0`DYLD-STUB$$memcpy (6 samples, 0.04%)</title><rect x="62.5600%" y="165" width="0.0405%" height="15" fill="rgb(219,56,2)" fg:x="9257" fg:w="6"/><text x="62.8100%" y="175.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::Formatter::write_formatted_parts (405 samples, 2.74%)</title><rect x="59.8973%" y="181" width="2.7370%" height="15" fill="rgb(233,0,4)" fg:x="8863" fg:w="405"/><text x="60.1473%" y="191.50">be..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (5 samples, 0.03%)</title><rect x="62.6005%" y="165" width="0.0338%" height="15" fill="rgb(235,30,7)" fg:x="9263" fg:w="5"/><text x="62.8505%" y="175.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::num::flt2dec::strategy::grisu::format_exact_opt (319 samples, 2.16%)</title><rect x="62.6343%" y="181" width="2.1558%" height="15" fill="rgb(250,79,13)" fg:x="9268" fg:w="319"/><text x="62.8843%" y="191.50">b..</text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::float::float_to_decimal_common_exact (824 samples, 5.57%)</title><rect x="59.3431%" y="197" width="5.5687%" height="15" fill="rgb(211,146,34)" fg:x="8781" fg:w="824"/><text x="59.5931%" y="207.50">benchma..</text></g><g><title>benchmark-022a91b58b3cfee0`core::num::flt2dec::strategy::grisu::format_exact_opt (17 samples, 0.11%)</title><rect x="64.7969%" y="181" width="0.1149%" height="15" fill="rgb(228,22,38)" fg:x="9588" fg:w="17"/><text x="65.0469%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::num::flt2dec::strategy::grisu::format_exact_opt::possibly_round (17 samples, 0.11%)</title><rect x="64.7969%" y="165" width="0.1149%" height="15" fill="rgb(235,168,5)" fg:x="9588" fg:w="17"/><text x="65.0469%" y="175.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::fmt::format (905 samples, 6.12%)</title><rect x="58.8160%" y="229" width="6.1161%" height="15" fill="rgb(221,155,16)" fg:x="8703" fg:w="905"/><text x="59.0660%" y="239.50">benchmar..</text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::write (877 samples, 5.93%)</title><rect x="59.0052%" y="213" width="5.9269%" height="15" fill="rgb(215,215,53)" fg:x="8731" fg:w="877"/><text x="59.2552%" y="223.50">benchmar..</text></g><g><title>benchmark-022a91b58b3cfee0`core::num::flt2dec::strategy::grisu::format_exact_opt (3 samples, 0.02%)</title><rect x="64.9118%" y="197" width="0.0203%" height="15" fill="rgb(223,4,10)" fg:x="9605" fg:w="3"/><text x="65.1618%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::ArgumentV1::from_usize (4 samples, 0.03%)</title><rect x="64.9321%" y="229" width="0.0270%" height="15" fill="rgb(234,103,6)" fg:x="9608" fg:w="4"/><text x="65.1821%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;f64 as core::num::dec2flt::rawfp::RawFloat&gt;::from_int (16 samples, 0.11%)</title><rect x="65.6755%" y="213" width="0.1081%" height="15" fill="rgb(227,97,0)" fg:x="9718" fg:w="16"/><text x="65.9255%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::num::dec2flt::extract_sign (3 samples, 0.02%)</title><rect x="65.7836%" y="213" width="0.0203%" height="15" fill="rgb(234,150,53)" fg:x="9734" fg:w="3"/><text x="66.0336%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::num::dec2flt::dec2flt (156 samples, 1.05%)</title><rect x="64.9591%" y="229" width="1.0543%" height="15" fill="rgb(228,201,54)" fg:x="9612" fg:w="156"/><text x="65.2091%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::num::dec2flt::parse::parse_decimal (31 samples, 0.21%)</title><rect x="65.8039%" y="213" width="0.2095%" height="15" fill="rgb(222,22,37)" fg:x="9737" fg:w="31"/><text x="66.0539%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::num::dec2flt::parse::parse_decimal (2 samples, 0.01%)</title><rect x="66.0201%" y="229" width="0.0135%" height="15" fill="rgb(237,53,32)" fg:x="9769" fg:w="2"/><text x="66.2701%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (4 samples, 0.03%)</title><rect x="66.0337%" y="229" width="0.0270%" height="15" fill="rgb(233,25,53)" fg:x="9771" fg:w="4"/><text x="66.2837%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (49 samples, 0.33%)</title><rect x="66.2026%" y="213" width="0.3311%" height="15" fill="rgb(210,40,34)" fg:x="9796" fg:w="49"/><text x="66.4526%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (40 samples, 0.27%)</title><rect x="66.2634%" y="197" width="0.2703%" height="15" fill="rgb(241,220,44)" fg:x="9805" fg:w="40"/><text x="66.5134%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free (72 samples, 0.49%)</title><rect x="66.0607%" y="229" width="0.4866%" height="15" fill="rgb(235,28,35)" fg:x="9775" fg:w="72"/><text x="66.3107%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.01%)</title><rect x="66.5338%" y="213" width="0.0135%" height="15" fill="rgb(210,56,17)" fg:x="9845" fg:w="2"/><text x="66.7838%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`emath::round_to_decimals (1,259 samples, 8.51%)</title><rect x="58.6065%" y="245" width="8.5085%" height="15" fill="rgb(224,130,29)" fg:x="8672" fg:w="1259"/><text x="58.8565%" y="255.50">benchmark-02..</text></g><g><title>libsystem_malloc.dylib`free_tiny (84 samples, 0.57%)</title><rect x="66.5473%" y="229" width="0.5677%" height="15" fill="rgb(235,212,8)" fg:x="9847" fg:w="84"/><text x="66.7973%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;epaint::text::fonts::LayoutJob as core::hash::Hash&gt;::hash (3 samples, 0.02%)</title><rect x="67.5880%" y="229" width="0.0203%" height="15" fill="rgb(223,33,50)" fg:x="10001" fg:w="3"/><text x="67.8380%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`__rdl_dealloc (3 samples, 0.02%)</title><rect x="67.6083%" y="229" width="0.0203%" height="15" fill="rgb(219,149,13)" fg:x="10004" fg:w="3"/><text x="67.8583%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`__rust_dealloc (3 samples, 0.02%)</title><rect x="67.6286%" y="229" width="0.0203%" height="15" fill="rgb(250,156,29)" fg:x="10007" fg:w="3"/><text x="67.8786%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;epaint::text::fonts::LayoutJob as core::hash::Hash&gt;::hash (16 samples, 0.11%)</title><rect x="68.2503%" y="213" width="0.1081%" height="15" fill="rgb(216,193,19)" fg:x="10099" fg:w="16"/><text x="68.5003%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`DYLD-STUB$$memcmp (2 samples, 0.01%)</title><rect x="68.3585%" y="213" width="0.0135%" height="15" fill="rgb(216,135,14)" fg:x="10115" fg:w="2"/><text x="68.6085%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (81 samples, 0.55%)</title><rect x="68.3720%" y="213" width="0.5474%" height="15" fill="rgb(241,47,5)" fg:x="10117" fg:w="81"/><text x="68.6220%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (12 samples, 0.08%)</title><rect x="68.8383%" y="197" width="0.0811%" height="15" fill="rgb(233,42,35)" fg:x="10186" fg:w="12"/><text x="69.0883%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (8 samples, 0.05%)</title><rect x="68.9194%" y="213" width="0.0541%" height="15" fill="rgb(231,13,6)" fg:x="10198" fg:w="8"/><text x="69.1694%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (43 samples, 0.29%)</title><rect x="69.1154%" y="197" width="0.2906%" height="15" fill="rgb(207,181,40)" fg:x="10227" fg:w="43"/><text x="69.3654%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (38 samples, 0.26%)</title><rect x="69.1492%" y="181" width="0.2568%" height="15" fill="rgb(254,173,49)" fg:x="10232" fg:w="38"/><text x="69.3992%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free (70 samples, 0.47%)</title><rect x="68.9734%" y="213" width="0.4731%" height="15" fill="rgb(221,1,38)" fg:x="10206" fg:w="70"/><text x="69.2234%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (6 samples, 0.04%)</title><rect x="69.4060%" y="197" width="0.0405%" height="15" fill="rgb(206,124,46)" fg:x="10270" fg:w="6"/><text x="69.6560%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (82 samples, 0.55%)</title><rect x="69.4465%" y="213" width="0.5542%" height="15" fill="rgb(249,21,11)" fg:x="10276" fg:w="82"/><text x="69.6965%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`epaint::text::fonts::GalleyCache::layout (350 samples, 2.37%)</title><rect x="67.6488%" y="229" width="2.3653%" height="15" fill="rgb(222,201,40)" fg:x="10010" fg:w="350"/><text x="67.8988%" y="239.50">be..</text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.01%)</title><rect x="70.0142%" y="229" width="0.0135%" height="15" fill="rgb(235,61,29)" fg:x="10360" fg:w="2"/><text x="70.2642%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`epaint::text::fonts::Fonts::layout_single_line (440 samples, 2.97%)</title><rect x="67.1150%" y="245" width="2.9736%" height="15" fill="rgb(219,207,3)" fg:x="9931" fg:w="440"/><text x="67.3650%" y="255.50">ben..</text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (9 samples, 0.06%)</title><rect x="70.0277%" y="229" width="0.0608%" height="15" fill="rgb(222,56,46)" fg:x="10362" fg:w="9"/><text x="70.2777%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (3 samples, 0.02%)</title><rect x="70.0953%" y="245" width="0.0203%" height="15" fill="rgb(239,76,54)" fg:x="10372" fg:w="3"/><text x="70.3453%" y="255.50"></text></g><g><title>libsystem_m.dylib`0x00007fff6b1aa5f0 (3 samples, 0.02%)</title><rect x="70.1156%" y="245" width="0.0203%" height="15" fill="rgb(231,124,27)" fg:x="10375" fg:w="3"/><text x="70.3656%" y="255.50"></text></g><g><title>libsystem_m.dylib`0x00007fff6b1acc70 (414 samples, 2.80%)</title><rect x="70.1358%" y="245" width="2.7979%" height="15" fill="rgb(249,195,6)" fg:x="10378" fg:w="414"/><text x="70.3858%" y="255.50">li..</text></g><g><title>libsystem_m.dylib`roundf (199 samples, 1.34%)</title><rect x="72.9337%" y="245" width="1.3449%" height="15" fill="rgb(237,174,47)" fg:x="10792" fg:w="199"/><text x="73.1837%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (24 samples, 0.16%)</title><rect x="74.2786%" y="245" width="0.1622%" height="15" fill="rgb(206,201,31)" fg:x="10991" fg:w="24"/><text x="74.5286%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (11 samples, 0.07%)</title><rect x="74.3664%" y="229" width="0.0743%" height="15" fill="rgb(231,57,52)" fg:x="11004" fg:w="11"/><text x="74.6164%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (10 samples, 0.07%)</title><rect x="74.3732%" y="213" width="0.0676%" height="15" fill="rgb(248,177,22)" fg:x="11005" fg:w="10"/><text x="74.6232%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (22 samples, 0.15%)</title><rect x="74.4408%" y="245" width="0.1487%" height="15" fill="rgb(215,211,37)" fg:x="11015" fg:w="22"/><text x="74.6908%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (6 samples, 0.04%)</title><rect x="74.5962%" y="245" width="0.0405%" height="15" fill="rgb(241,128,51)" fg:x="11038" fg:w="6"/><text x="74.8462%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;egui::widgets::plot::Plot as egui::widgets::Widget&gt;::ui (10,702 samples, 72.33%)</title><rect x="3.4331%" y="261" width="72.3255%" height="15" fill="rgb(227,165,31)" fg:x="508" fg:w="10702"/><text x="3.6831%" y="271.50">benchmark-022a91b58b3cfee0`&lt;egui::widgets::plot::Plot as egui::widgets::Widget&gt;::ui</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (166 samples, 1.12%)</title><rect x="74.6368%" y="245" width="1.1218%" height="15" fill="rgb(228,167,24)" fg:x="11044" fg:w="166"/><text x="74.8868%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;egui::widgets::plot::items::Line as egui::widgets::plot::items::PlotItem&gt;::get_bounds (2 samples, 0.01%)</title><rect x="75.7586%" y="261" width="0.0135%" height="15" fill="rgb(228,143,12)" fg:x="11210" fg:w="2"/><text x="76.0086%" y="271.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;epaint::color::Color32 as core::convert::From&lt;epaint::color::Rgba&gt;&gt;::from (2 samples, 0.01%)</title><rect x="75.7789%" y="261" width="0.0135%" height="15" fill="rgb(249,149,8)" fg:x="11213" fg:w="2"/><text x="76.0289%" y="271.50"></text></g><g><title>benchmark-022a91b58b3cfee0`DYLD-STUB$$floor (7 samples, 0.05%)</title><rect x="75.7924%" y="261" width="0.0473%" height="15" fill="rgb(243,35,44)" fg:x="11215" fg:w="7"/><text x="76.0424%" y="271.50"></text></g><g><title>benchmark-022a91b58b3cfee0`DYLD-STUB$$memmove (6 samples, 0.04%)</title><rect x="75.8465%" y="261" width="0.0405%" height="15" fill="rgb(246,89,9)" fg:x="11223" fg:w="6"/><text x="76.0965%" y="271.50"></text></g><g><title>benchmark-022a91b58b3cfee0`DYLD-STUB$$round (6 samples, 0.04%)</title><rect x="75.8870%" y="261" width="0.0405%" height="15" fill="rgb(233,213,13)" fg:x="11229" fg:w="6"/><text x="76.1370%" y="271.50"></text></g><g><title>benchmark-022a91b58b3cfee0`__rdl_alloc (2 samples, 0.01%)</title><rect x="77.8401%" y="245" width="0.0135%" height="15" fill="rgb(233,141,41)" fg:x="11518" fg:w="2"/><text x="78.0901%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;epaint::color::Rgba as core::convert::From&lt;epaint::color::Hsva&gt;&gt;::from (33 samples, 0.22%)</title><rect x="78.0428%" y="213" width="0.2230%" height="15" fill="rgb(239,167,4)" fg:x="11548" fg:w="33"/><text x="78.2928%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`DYLD-STUB$$truncf (3 samples, 0.02%)</title><rect x="78.2659%" y="213" width="0.0203%" height="15" fill="rgb(209,217,16)" fg:x="11581" fg:w="3"/><text x="78.5159%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;epaint::color::Color32 as core::convert::From&lt;epaint::color::Hsva&gt;&gt;::from (39 samples, 0.26%)</title><rect x="78.0428%" y="229" width="0.2636%" height="15" fill="rgb(219,88,35)" fg:x="11548" fg:w="39"/><text x="78.2928%" y="239.50"></text></g><g><title>libsystem_m.dylib`truncf (2 samples, 0.01%)</title><rect x="78.2929%" y="213" width="0.0135%" height="15" fill="rgb(220,193,23)" fg:x="11585" fg:w="2"/><text x="78.5429%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;epaint::color::Color32 as core::convert::From&lt;epaint::color::Rgba&gt;&gt;::from (38 samples, 0.26%)</title><rect x="78.3064%" y="229" width="0.2568%" height="15" fill="rgb(230,90,52)" fg:x="11587" fg:w="38"/><text x="78.5564%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`DYLD-STUB$$powf (2 samples, 0.01%)</title><rect x="78.5700%" y="229" width="0.0135%" height="15" fill="rgb(252,106,19)" fg:x="11626" fg:w="2"/><text x="78.8200%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`DYLD-STUB$$roundf (3 samples, 0.02%)</title><rect x="78.5835%" y="229" width="0.0203%" height="15" fill="rgb(206,74,20)" fg:x="11628" fg:w="3"/><text x="78.8335%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (4 samples, 0.03%)</title><rect x="78.6308%" y="149" width="0.0270%" height="15" fill="rgb(230,138,44)" fg:x="11635" fg:w="4"/><text x="78.8808%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.01%)</title><rect x="78.6443%" y="133" width="0.0135%" height="15" fill="rgb(235,182,43)" fg:x="11637" fg:w="2"/><text x="78.8943%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (2 samples, 0.01%)</title><rect x="78.6578%" y="133" width="0.0135%" height="15" fill="rgb(242,16,51)" fg:x="11639" fg:w="2"/><text x="78.9078%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.05%)</title><rect x="78.6578%" y="149" width="0.0541%" height="15" fill="rgb(248,9,4)" fg:x="11639" fg:w="8"/><text x="78.9078%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.04%)</title><rect x="78.6714%" y="133" width="0.0405%" height="15" fill="rgb(210,31,22)" fg:x="11641" fg:w="6"/><text x="78.9214%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (18 samples, 0.12%)</title><rect x="78.6038%" y="181" width="0.1216%" height="15" fill="rgb(239,54,39)" fg:x="11631" fg:w="18"/><text x="78.8538%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (16 samples, 0.11%)</title><rect x="78.6173%" y="165" width="0.1081%" height="15" fill="rgb(230,99,41)" fg:x="11633" fg:w="16"/><text x="78.8673%" y="175.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (20 samples, 0.14%)</title><rect x="78.6038%" y="229" width="0.1352%" height="15" fill="rgb(253,106,12)" fg:x="11631" fg:w="20"/><text x="78.8538%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::finish_grow (20 samples, 0.14%)</title><rect x="78.6038%" y="213" width="0.1352%" height="15" fill="rgb(213,46,41)" fg:x="11631" fg:w="20"/><text x="78.8538%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`realloc (20 samples, 0.14%)</title><rect x="78.6038%" y="197" width="0.1352%" height="15" fill="rgb(215,133,35)" fg:x="11631" fg:w="20"/><text x="78.8538%" y="207.50"></text></g><g><title>libsystem_m.dylib`0x00007fff6b1acc70 (74 samples, 0.50%)</title><rect x="78.7389%" y="229" width="0.5001%" height="15" fill="rgb(213,28,5)" fg:x="11651" fg:w="74"/><text x="78.9889%" y="239.50"></text></g><g><title>libsystem_m.dylib`roundf (12 samples, 0.08%)</title><rect x="79.2390%" y="229" width="0.0811%" height="15" fill="rgb(215,77,49)" fg:x="11725" fg:w="12"/><text x="79.4890%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (3 samples, 0.02%)</title><rect x="79.3539%" y="197" width="0.0203%" height="15" fill="rgb(248,100,22)" fg:x="11742" fg:w="3"/><text x="79.6039%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (9 samples, 0.06%)</title><rect x="79.7729%" y="165" width="0.0608%" height="15" fill="rgb(208,67,9)" fg:x="11804" fg:w="9"/><text x="80.0229%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (99 samples, 0.67%)</title><rect x="79.3201%" y="213" width="0.6691%" height="15" fill="rgb(219,133,21)" fg:x="11737" fg:w="99"/><text x="79.5701%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (91 samples, 0.61%)</title><rect x="79.3742%" y="197" width="0.6150%" height="15" fill="rgb(246,46,29)" fg:x="11745" fg:w="91"/><text x="79.6242%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (86 samples, 0.58%)</title><rect x="79.4080%" y="181" width="0.5812%" height="15" fill="rgb(246,185,52)" fg:x="11750" fg:w="86"/><text x="79.6580%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (23 samples, 0.16%)</title><rect x="79.8338%" y="165" width="0.1554%" height="15" fill="rgb(252,136,11)" fg:x="11813" fg:w="23"/><text x="80.0838%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (4 samples, 0.03%)</title><rect x="79.9622%" y="149" width="0.0270%" height="15" fill="rgb(219,138,53)" fg:x="11832" fg:w="4"/><text x="80.2122%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc (101 samples, 0.68%)</title><rect x="79.3201%" y="229" width="0.6826%" height="15" fill="rgb(211,51,23)" fg:x="11737" fg:w="101"/><text x="79.5701%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.01%)</title><rect x="79.9892%" y="213" width="0.0135%" height="15" fill="rgb(247,221,28)" fg:x="11836" fg:w="2"/><text x="80.2392%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::widgets::plot::Plot::points (326 samples, 2.20%)</title><rect x="77.8536%" y="245" width="2.2031%" height="15" fill="rgb(251,222,45)" fg:x="11520" fg:w="326"/><text x="78.1036%" y="255.50">b..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (8 samples, 0.05%)</title><rect x="80.0027%" y="229" width="0.0541%" height="15" fill="rgb(217,162,53)" fg:x="11838" fg:w="8"/><text x="80.2527%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::widgets::plot::items::Points::new (17 samples, 0.11%)</title><rect x="80.0568%" y="245" width="0.1149%" height="15" fill="rgb(229,93,14)" fg:x="11846" fg:w="17"/><text x="80.3068%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (4 samples, 0.03%)</title><rect x="80.2054%" y="213" width="0.0270%" height="15" fill="rgb(209,67,49)" fg:x="11868" fg:w="4"/><text x="80.4554%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (11 samples, 0.07%)</title><rect x="80.6853%" y="165" width="0.0743%" height="15" fill="rgb(213,87,29)" fg:x="11939" fg:w="11"/><text x="80.9353%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr (4 samples, 0.03%)</title><rect x="80.7596%" y="165" width="0.0270%" height="15" fill="rgb(205,151,52)" fg:x="11950" fg:w="4"/><text x="81.0096%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (100 samples, 0.68%)</title><rect x="80.1987%" y="229" width="0.6758%" height="15" fill="rgb(253,215,39)" fg:x="11867" fg:w="100"/><text x="80.4487%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (95 samples, 0.64%)</title><rect x="80.2325%" y="213" width="0.6420%" height="15" fill="rgb(221,220,41)" fg:x="11872" fg:w="95"/><text x="80.4825%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (89 samples, 0.60%)</title><rect x="80.2730%" y="197" width="0.6015%" height="15" fill="rgb(218,133,21)" fg:x="11878" fg:w="89"/><text x="80.5230%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (38 samples, 0.26%)</title><rect x="80.6177%" y="181" width="0.2568%" height="15" fill="rgb(221,193,43)" fg:x="11929" fg:w="38"/><text x="80.8677%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (13 samples, 0.09%)</title><rect x="80.7866%" y="165" width="0.0879%" height="15" fill="rgb(240,128,52)" fg:x="11954" fg:w="13"/><text x="81.0366%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc (105 samples, 0.71%)</title><rect x="80.1784%" y="245" width="0.7096%" height="15" fill="rgb(253,114,12)" fg:x="11864" fg:w="105"/><text x="80.4284%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.01%)</title><rect x="80.8745%" y="229" width="0.0135%" height="15" fill="rgb(215,223,47)" fg:x="11967" fg:w="2"/><text x="81.1245%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`benchmark::criterion_benchmark::points_plot (744 samples, 5.03%)</title><rect x="75.9343%" y="261" width="5.0280%" height="15" fill="rgb(248,225,23)" fg:x="11236" fg:w="744"/><text x="76.1843%" y="271.50">benchm..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (11 samples, 0.07%)</title><rect x="80.8880%" y="245" width="0.0743%" height="15" fill="rgb(250,108,0)" fg:x="11969" fg:w="11"/><text x="81.1380%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::write (2 samples, 0.01%)</title><rect x="80.9624%" y="261" width="0.0135%" height="15" fill="rgb(228,208,7)" fg:x="11980" fg:w="2"/><text x="81.2124%" y="271.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::containers::frame::Frame::begin (2 samples, 0.01%)</title><rect x="80.9759%" y="261" width="0.0135%" height="15" fill="rgb(244,45,10)" fg:x="11982" fg:w="2"/><text x="81.2259%" y="271.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::ui::Ui::child_ui (2 samples, 0.01%)</title><rect x="80.9759%" y="245" width="0.0135%" height="15" fill="rgb(207,125,25)" fg:x="11982" fg:w="2"/><text x="81.2259%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::context::Context::layer_id_at (2 samples, 0.01%)</title><rect x="81.0029%" y="229" width="0.0135%" height="15" fill="rgb(210,195,18)" fg:x="11986" fg:w="2"/><text x="81.2529%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::memory::Memory::layer_id_at (2 samples, 0.01%)</title><rect x="81.0029%" y="213" width="0.0135%" height="15" fill="rgb(249,80,12)" fg:x="11986" fg:w="2"/><text x="81.2529%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::containers::frame::Prepared::end (5 samples, 0.03%)</title><rect x="80.9894%" y="261" width="0.0338%" height="15" fill="rgb(221,65,9)" fg:x="11984" fg:w="5"/><text x="81.2394%" y="271.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::context::CtxRef::interact (3 samples, 0.02%)</title><rect x="81.0029%" y="245" width="0.0203%" height="15" fill="rgb(235,49,36)" fg:x="11986" fg:w="3"/><text x="81.2529%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::widgets::plot::items::Values::generate_points (2 samples, 0.01%)</title><rect x="81.0299%" y="261" width="0.0135%" height="15" fill="rgb(225,32,20)" fg:x="11990" fg:w="2"/><text x="81.2799%" y="271.50"></text></g><g><title>benchmark-022a91b58b3cfee0`emath::round_to_decimals (2 samples, 0.01%)</title><rect x="81.0435%" y="261" width="0.0135%" height="15" fill="rgb(215,141,46)" fg:x="11992" fg:w="2"/><text x="81.2935%" y="271.50"></text></g><g><title>libsystem_m.dylib`floor (8 samples, 0.05%)</title><rect x="81.0637%" y="261" width="0.0541%" height="15" fill="rgb(250,160,47)" fg:x="11995" fg:w="8"/><text x="81.3137%" y="271.50"></text></g><g><title>libsystem_m.dylib`round (44 samples, 0.30%)</title><rect x="81.1178%" y="261" width="0.2974%" height="15" fill="rgb(216,222,40)" fg:x="12003" fg:w="44"/><text x="81.3678%" y="271.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::containers::panel::CentralPanel::show (11,569 samples, 78.18%)</title><rect x="3.4331%" y="293" width="78.1848%" height="15" fill="rgb(234,217,39)" fg:x="508" fg:w="11569"/><text x="3.6831%" y="303.50">benchmark-022a91b58b3cfee0`egui::containers::panel::CentralPanel::show</text></g><g><title>benchmark-022a91b58b3cfee0`egui::containers::frame::Frame::show (11,569 samples, 78.18%)</title><rect x="3.4331%" y="277" width="78.1848%" height="15" fill="rgb(207,178,40)" fg:x="508" fg:w="11569"/><text x="3.6831%" y="287.50">benchmark-022a91b58b3cfee0`egui::containers::frame::Frame::show</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (28 samples, 0.19%)</title><rect x="81.4287%" y="261" width="0.1892%" height="15" fill="rgb(221,136,13)" fg:x="12049" fg:w="28"/><text x="81.6787%" y="271.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="81.6179%" y="277" width="0.0135%" height="15" fill="rgb(249,199,10)" fg:x="12077" fg:w="2"/><text x="81.8679%" y="287.50"></text></g><g><title>benchmark-022a91b58b3cfee0`DYLD-STUB$$memmove (33 samples, 0.22%)</title><rect x="81.6314%" y="277" width="0.2230%" height="15" fill="rgb(249,222,13)" fg:x="12079" fg:w="33"/><text x="81.8814%" y="287.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.01%)</title><rect x="83.3345%" y="261" width="0.0135%" height="15" fill="rgb(244,185,38)" fg:x="12331" fg:w="2"/><text x="83.5845%" y="271.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::finish_grow (2 samples, 0.01%)</title><rect x="83.3345%" y="245" width="0.0135%" height="15" fill="rgb(236,202,9)" fg:x="12331" fg:w="2"/><text x="83.5845%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::layers::GraphicLayers::drain (1,024 samples, 6.92%)</title><rect x="81.8544%" y="277" width="6.9203%" height="15" fill="rgb(250,229,37)" fg:x="12112" fg:w="1024"/><text x="82.1044%" y="287.50">benchmark..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (803 samples, 5.43%)</title><rect x="83.3480%" y="261" width="5.4268%" height="15" fill="rgb(206,174,23)" fg:x="12333" fg:w="803"/><text x="83.5980%" y="271.50">libsyst..</text></g><g><title>benchmark-022a91b58b3cfee0`egui::memory::Memory::end_frame (4 samples, 0.03%)</title><rect x="88.7748%" y="277" width="0.0270%" height="15" fill="rgb(211,33,43)" fg:x="13136" fg:w="4"/><text x="89.0248%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.01%)</title><rect x="88.7883%" y="261" width="0.0135%" height="15" fill="rgb(245,58,50)" fg:x="13138" fg:w="2"/><text x="89.0383%" y="271.50"></text></g><g><title>benchmark-022a91b58b3cfee0`epaint::text::fonts::Fonts::end_frame (8 samples, 0.05%)</title><rect x="88.8018%" y="277" width="0.0541%" height="15" fill="rgb(244,68,36)" fg:x="13140" fg:w="8"/><text x="89.0518%" y="287.50"></text></g><g><title>benchmark-022a91b58b3cfee0`hashbrown::map::HashMap&lt;K,V,S,A&gt;::retain (7 samples, 0.05%)</title><rect x="88.8085%" y="261" width="0.0473%" height="15" fill="rgb(232,229,15)" fg:x="13141" fg:w="7"/><text x="89.0585%" y="271.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::context::Context::end_frame (1,232 samples, 8.33%)</title><rect x="81.6179%" y="293" width="8.3260%" height="15" fill="rgb(254,30,23)" fg:x="12077" fg:w="1232"/><text x="81.8679%" y="303.50">benchmark-02..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (161 samples, 1.09%)</title><rect x="88.8558%" y="277" width="1.0881%" height="15" fill="rgb(235,160,14)" fg:x="13148" fg:w="161"/><text x="89.1058%" y="287.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="89.9777%" y="261" width="0.0135%" height="15" fill="rgb(212,155,44)" fg:x="13314" fg:w="2"/><text x="90.2277%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`malloc (2 samples, 0.01%)</title><rect x="89.9777%" y="245" width="0.0135%" height="15" fill="rgb(226,2,50)" fg:x="13314" fg:w="2"/><text x="90.2277%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (2 samples, 0.01%)</title><rect x="89.9777%" y="229" width="0.0135%" height="15" fill="rgb(234,177,6)" fg:x="13314" fg:w="2"/><text x="90.2277%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.01%)</title><rect x="89.9777%" y="213" width="0.0135%" height="15" fill="rgb(217,24,9)" fg:x="13314" fg:w="2"/><text x="90.2277%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.01%)</title><rect x="89.9777%" y="197" width="0.0135%" height="15" fill="rgb(220,13,46)" fg:x="13314" fg:w="2"/><text x="90.2277%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;egui::context::Context as core::clone::Clone&gt;::clone (7 samples, 0.05%)</title><rect x="89.9507%" y="277" width="0.0473%" height="15" fill="rgb(239,221,27)" fg:x="13310" fg:w="7"/><text x="90.2007%" y="287.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::ptr::drop_in_place&lt;egui::input_state::InputState&gt; (3 samples, 0.02%)</title><rect x="90.0115%" y="261" width="0.0203%" height="15" fill="rgb(222,198,25)" fg:x="13319" fg:w="3"/><text x="90.2615%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.01%)</title><rect x="90.0182%" y="245" width="0.0135%" height="15" fill="rgb(211,99,13)" fg:x="13320" fg:w="2"/><text x="90.2682%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::sync::Arc&lt;T&gt;::drop_slow (5 samples, 0.03%)</title><rect x="90.0115%" y="277" width="0.0338%" height="15" fill="rgb(232,111,31)" fg:x="13319" fg:w="5"/><text x="90.2615%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.01%)</title><rect x="90.0318%" y="261" width="0.0135%" height="15" fill="rgb(245,82,37)" fg:x="13322" fg:w="2"/><text x="90.2818%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.01%)</title><rect x="90.0318%" y="245" width="0.0135%" height="15" fill="rgb(227,149,46)" fg:x="13322" fg:w="2"/><text x="90.2818%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.02%)</title><rect x="90.0453%" y="261" width="0.0203%" height="15" fill="rgb(218,36,50)" fg:x="13324" fg:w="3"/><text x="90.2953%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`malloc (3 samples, 0.02%)</title><rect x="90.0453%" y="245" width="0.0203%" height="15" fill="rgb(226,80,48)" fg:x="13324" fg:w="3"/><text x="90.2953%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (3 samples, 0.02%)</title><rect x="90.0453%" y="229" width="0.0203%" height="15" fill="rgb(238,224,15)" fg:x="13324" fg:w="3"/><text x="90.2953%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.02%)</title><rect x="90.0453%" y="213" width="0.0203%" height="15" fill="rgb(241,136,10)" fg:x="13324" fg:w="3"/><text x="90.2953%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (3 samples, 0.02%)</title><rect x="90.0453%" y="197" width="0.0203%" height="15" fill="rgb(208,32,45)" fg:x="13324" fg:w="3"/><text x="90.2953%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::input_state::InputState::begin_frame (5 samples, 0.03%)</title><rect x="90.0453%" y="277" width="0.0338%" height="15" fill="rgb(207,135,9)" fg:x="13324" fg:w="5"/><text x="90.2953%" y="287.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::memory::Areas::set_state (2 samples, 0.01%)</title><rect x="90.0791%" y="277" width="0.0135%" height="15" fill="rgb(206,86,44)" fg:x="13329" fg:w="2"/><text x="90.3291%" y="287.50"></text></g><g><title>benchmark-022a91b58b3cfee0`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.01%)</title><rect x="90.0791%" y="261" width="0.0135%" height="15" fill="rgb(245,177,15)" fg:x="13329" fg:w="2"/><text x="90.3291%" y="271.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::context::CtxRef::begin_frame (24 samples, 0.16%)</title><rect x="89.9439%" y="293" width="0.1622%" height="15" fill="rgb(206,64,50)" fg:x="13309" fg:w="24"/><text x="90.1939%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.01%)</title><rect x="90.1129%" y="293" width="0.0135%" height="15" fill="rgb(234,36,40)" fg:x="13334" fg:w="2"/><text x="90.3629%" y="303.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (13,335 samples, 90.12%)</title><rect x="0.0135%" y="325" width="90.1196%" height="15" fill="rgb(213,64,8)" fg:x="2" fg:w="13335"/><text x="0.2635%" y="335.50">benchmark-022a91b58b3cfee0`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold</text></g><g><title>benchmark-022a91b58b3cfee0`criterion::bencher::Bencher&lt;M&gt;::iter (13,335 samples, 90.12%)</title><rect x="0.0135%" y="309" width="90.1196%" height="15" fill="rgb(210,75,36)" fg:x="2" fg:w="13335"/><text x="0.2635%" y="319.50">benchmark-022a91b58b3cfee0`criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>benchmark-022a91b58b3cfee0`core::ptr::drop_in_place&lt;(egui::data::output::Output,alloc::vec::Vec&lt;epaint::ClippedShape&gt;)&gt; (63 samples, 0.43%)</title><rect x="90.1399%" y="293" width="0.4258%" height="15" fill="rgb(229,88,21)" fg:x="13338" fg:w="63"/><text x="90.3899%" y="303.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::ptr::drop_in_place&lt;epaint::shape::Shape&gt; (55 samples, 0.37%)</title><rect x="90.1940%" y="277" width="0.3717%" height="15" fill="rgb(252,204,47)" fg:x="13346" fg:w="55"/><text x="90.4440%" y="287.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::ptr::drop_in_place&lt;epaint::shape::Shape&gt; (2 samples, 0.01%)</title><rect x="90.5657%" y="293" width="0.0135%" height="15" fill="rgb(208,77,27)" fg:x="13401" fg:w="2"/><text x="90.8157%" y="303.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;egui::widgets::plot::items::Line as egui::widgets::plot::items::PlotItem&gt;::get_bounds (42 samples, 0.28%)</title><rect x="90.9036%" y="245" width="0.2838%" height="15" fill="rgb(221,76,26)" fg:x="13451" fg:w="42"/><text x="91.1536%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;egui::widgets::plot::items::Points as egui::widgets::plot::items::PlotItem&gt;::closest (68 samples, 0.46%)</title><rect x="91.1874%" y="245" width="0.4596%" height="15" fill="rgb(225,139,18)" fg:x="13493" fg:w="68"/><text x="91.4374%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc (4 samples, 0.03%)</title><rect x="91.6199%" y="229" width="0.0270%" height="15" fill="rgb(230,137,11)" fg:x="13557" fg:w="4"/><text x="91.8699%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (4 samples, 0.03%)</title><rect x="91.6199%" y="213" width="0.0270%" height="15" fill="rgb(212,28,1)" fg:x="13557" fg:w="4"/><text x="91.8699%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (4 samples, 0.03%)</title><rect x="91.6199%" y="197" width="0.0270%" height="15" fill="rgb(248,164,17)" fg:x="13557" fg:w="4"/><text x="91.8699%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (4 samples, 0.03%)</title><rect x="91.6199%" y="181" width="0.0270%" height="15" fill="rgb(222,171,42)" fg:x="13557" fg:w="4"/><text x="91.8699%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`realloc (2 samples, 0.01%)</title><rect x="92.2214%" y="181" width="0.0135%" height="15" fill="rgb(243,84,45)" fg:x="13646" fg:w="2"/><text x="92.4714%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (2 samples, 0.01%)</title><rect x="92.2214%" y="165" width="0.0135%" height="15" fill="rgb(252,49,23)" fg:x="13646" fg:w="2"/><text x="92.4714%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (2 samples, 0.01%)</title><rect x="92.2214%" y="149" width="0.0135%" height="15" fill="rgb(215,19,7)" fg:x="13646" fg:w="2"/><text x="92.4714%" y="159.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::finish_grow (3 samples, 0.02%)</title><rect x="92.2214%" y="197" width="0.0203%" height="15" fill="rgb(238,81,41)" fg:x="13646" fg:w="3"/><text x="92.4714%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.03%)</title><rect x="92.2214%" y="213" width="0.0270%" height="15" fill="rgb(210,199,37)" fg:x="13646" fg:w="4"/><text x="92.4714%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (198 samples, 1.34%)</title><rect x="91.6537%" y="229" width="1.3381%" height="15" fill="rgb(244,192,49)" fg:x="13562" fg:w="198"/><text x="91.9037%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (110 samples, 0.74%)</title><rect x="92.2484%" y="213" width="0.7434%" height="15" fill="rgb(226,211,11)" fg:x="13650" fg:w="110"/><text x="92.4984%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;egui::widgets::plot::items::Points as egui::widgets::plot::items::PlotItem&gt;::get_shapes (212 samples, 1.43%)</title><rect x="91.6470%" y="245" width="1.4327%" height="15" fill="rgb(236,162,54)" fg:x="13561" fg:w="212"/><text x="91.8970%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (13 samples, 0.09%)</title><rect x="92.9918%" y="229" width="0.0879%" height="15" fill="rgb(220,229,9)" fg:x="13760" fg:w="13"/><text x="93.2418%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;epaint::color::Color32 as core::convert::From&lt;epaint::color::Rgba&gt;&gt;::from (42 samples, 0.28%)</title><rect x="93.0797%" y="245" width="0.2838%" height="15" fill="rgb(250,87,22)" fg:x="13773" fg:w="42"/><text x="93.3297%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`DYLD-STUB$$roundf (2 samples, 0.01%)</title><rect x="93.3635%" y="245" width="0.0135%" height="15" fill="rgb(239,43,17)" fg:x="13815" fg:w="2"/><text x="93.6135%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (5 samples, 0.03%)</title><rect x="93.3973%" y="229" width="0.0338%" height="15" fill="rgb(231,177,25)" fg:x="13820" fg:w="5"/><text x="93.6473%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (5 samples, 0.03%)</title><rect x="93.3973%" y="213" width="0.0338%" height="15" fill="rgb(219,179,1)" fg:x="13820" fg:w="5"/><text x="93.6473%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.01%)</title><rect x="93.5122%" y="117" width="0.0135%" height="15" fill="rgb(238,219,53)" fg:x="13837" fg:w="2"/><text x="93.7622%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (24 samples, 0.16%)</title><rect x="93.5122%" y="133" width="0.1622%" height="15" fill="rgb(232,167,36)" fg:x="13837" fg:w="24"/><text x="93.7622%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (22 samples, 0.15%)</title><rect x="93.5257%" y="117" width="0.1487%" height="15" fill="rgb(244,19,51)" fg:x="13839" fg:w="22"/><text x="93.7757%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (22 samples, 0.15%)</title><rect x="93.5257%" y="101" width="0.1487%" height="15" fill="rgb(224,6,22)" fg:x="13839" fg:w="22"/><text x="93.7757%" y="111.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (28 samples, 0.19%)</title><rect x="93.4919%" y="197" width="0.1892%" height="15" fill="rgb(224,145,5)" fg:x="13834" fg:w="28"/><text x="93.7419%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (26 samples, 0.18%)</title><rect x="93.5054%" y="181" width="0.1757%" height="15" fill="rgb(234,130,49)" fg:x="13836" fg:w="26"/><text x="93.7554%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::finish_grow (26 samples, 0.18%)</title><rect x="93.5054%" y="165" width="0.1757%" height="15" fill="rgb(254,6,2)" fg:x="13836" fg:w="26"/><text x="93.7554%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc (25 samples, 0.17%)</title><rect x="93.5122%" y="149" width="0.1690%" height="15" fill="rgb(208,96,46)" fg:x="13837" fg:w="25"/><text x="93.7622%" y="159.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::Formatter::write_formatted_parts (32 samples, 0.22%)</title><rect x="93.4784%" y="213" width="0.2163%" height="15" fill="rgb(239,3,39)" fg:x="13832" fg:w="32"/><text x="93.7284%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.01%)</title><rect x="93.6812%" y="197" width="0.0135%" height="15" fill="rgb(233,210,1)" fg:x="13862" fg:w="2"/><text x="93.9312%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::float::float_to_decimal_common_shortest (66 samples, 0.45%)</title><rect x="93.4311%" y="229" width="0.4460%" height="15" fill="rgb(244,137,37)" fg:x="13825" fg:w="66"/><text x="93.6811%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::num::flt2dec::strategy::grisu::format_shortest_opt (27 samples, 0.18%)</title><rect x="93.6947%" y="213" width="0.1825%" height="15" fill="rgb(240,136,2)" fg:x="13864" fg:w="27"/><text x="93.9447%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::write (73 samples, 0.49%)</title><rect x="93.3906%" y="245" width="0.4933%" height="15" fill="rgb(239,18,37)" fg:x="13819" fg:w="73"/><text x="93.6406%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (4 samples, 0.03%)</title><rect x="93.8907%" y="213" width="0.0270%" height="15" fill="rgb(218,185,22)" fg:x="13893" fg:w="4"/><text x="94.1407%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.01%)</title><rect x="93.9042%" y="197" width="0.0135%" height="15" fill="rgb(225,218,4)" fg:x="13895" fg:w="2"/><text x="94.1542%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::ptr::drop_in_place&lt;egui::widgets::plot::items::Line&gt; (11 samples, 0.07%)</title><rect x="93.8907%" y="229" width="0.0743%" height="15" fill="rgb(230,182,32)" fg:x="13893" fg:w="11"/><text x="94.1407%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_small (7 samples, 0.05%)</title><rect x="93.9177%" y="213" width="0.0473%" height="15" fill="rgb(242,56,43)" fg:x="13897" fg:w="7"/><text x="94.1677%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (2 samples, 0.01%)</title><rect x="93.9515%" y="197" width="0.0135%" height="15" fill="rgb(233,99,24)" fg:x="13902" fg:w="2"/><text x="94.2015%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (15 samples, 0.10%)</title><rect x="93.9718%" y="229" width="0.1014%" height="15" fill="rgb(234,209,42)" fg:x="13905" fg:w="15"/><text x="94.2218%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (9 samples, 0.06%)</title><rect x="94.0123%" y="213" width="0.0608%" height="15" fill="rgb(227,7,12)" fg:x="13911" fg:w="9"/><text x="94.2623%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (5 samples, 0.03%)</title><rect x="94.0393%" y="197" width="0.0338%" height="15" fill="rgb(245,203,43)" fg:x="13915" fg:w="5"/><text x="94.2893%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::ptr::drop_in_place&lt;egui::widgets::plot::Prepared&gt; (30 samples, 0.20%)</title><rect x="93.8839%" y="245" width="0.2027%" height="15" fill="rgb(238,205,33)" fg:x="13892" fg:w="30"/><text x="94.1339%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (374 samples, 2.53%)</title><rect x="94.0866%" y="213" width="2.5275%" height="15" fill="rgb(231,56,7)" fg:x="13922" fg:w="374"/><text x="94.3366%" y="223.50">be..</text></g><g><title>libsystem_kernel.dylib`madvise (4 samples, 0.03%)</title><rect x="96.6142%" y="197" width="0.0270%" height="15" fill="rgb(244,186,29)" fg:x="14296" fg:w="4"/><text x="96.8642%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::layers::PaintList::extend (379 samples, 2.56%)</title><rect x="94.0866%" y="229" width="2.5613%" height="15" fill="rgb(234,111,31)" fg:x="13922" fg:w="379"/><text x="94.3366%" y="239.50">be..</text></g><g><title>libsystem_malloc.dylib`free_medium (5 samples, 0.03%)</title><rect x="96.6142%" y="213" width="0.0338%" height="15" fill="rgb(241,149,10)" fg:x="14296" fg:w="5"/><text x="96.8642%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::painter::Painter::extend (380 samples, 2.57%)</title><rect x="94.0866%" y="245" width="2.5681%" height="15" fill="rgb(249,206,44)" fg:x="13922" fg:w="380"/><text x="94.3366%" y="255.50">be..</text></g><g><title>benchmark-022a91b58b3cfee0`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (3 samples, 0.02%)</title><rect x="96.7291%" y="197" width="0.0203%" height="15" fill="rgb(251,153,30)" fg:x="14313" fg:w="3"/><text x="96.9791%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.01%)</title><rect x="96.8710%" y="101" width="0.0135%" height="15" fill="rgb(239,152,38)" fg:x="14334" fg:w="2"/><text x="97.1210%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`malloc (20 samples, 0.14%)</title><rect x="96.8710%" y="117" width="0.1352%" height="15" fill="rgb(249,139,47)" fg:x="14334" fg:w="20"/><text x="97.1210%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (18 samples, 0.12%)</title><rect x="96.8845%" y="101" width="0.1216%" height="15" fill="rgb(244,64,35)" fg:x="14336" fg:w="18"/><text x="97.1345%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (15 samples, 0.10%)</title><rect x="96.9048%" y="85" width="0.1014%" height="15" fill="rgb(216,46,15)" fg:x="14339" fg:w="15"/><text x="97.1548%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (13 samples, 0.09%)</title><rect x="96.9183%" y="69" width="0.0879%" height="15" fill="rgb(250,74,19)" fg:x="14341" fg:w="13"/><text x="97.1683%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (4 samples, 0.03%)</title><rect x="97.0061%" y="101" width="0.0270%" height="15" fill="rgb(249,42,33)" fg:x="14354" fg:w="4"/><text x="97.2561%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (3 samples, 0.02%)</title><rect x="97.0129%" y="85" width="0.0203%" height="15" fill="rgb(242,149,17)" fg:x="14355" fg:w="3"/><text x="97.2629%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (3 samples, 0.02%)</title><rect x="97.0129%" y="69" width="0.0203%" height="15" fill="rgb(244,29,21)" fg:x="14355" fg:w="3"/><text x="97.2629%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (3 samples, 0.02%)</title><rect x="97.0129%" y="53" width="0.0203%" height="15" fill="rgb(220,130,37)" fg:x="14355" fg:w="3"/><text x="97.2629%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`realloc (7 samples, 0.05%)</title><rect x="97.0061%" y="117" width="0.0473%" height="15" fill="rgb(211,67,2)" fg:x="14354" fg:w="7"/><text x="97.2561%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (2 samples, 0.01%)</title><rect x="97.0399%" y="101" width="0.0135%" height="15" fill="rgb(235,68,52)" fg:x="14359" fg:w="2"/><text x="97.2899%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.01%)</title><rect x="97.0399%" y="85" width="0.0135%" height="15" fill="rgb(246,142,3)" fg:x="14359" fg:w="2"/><text x="97.2899%" y="95.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (31 samples, 0.21%)</title><rect x="96.8507%" y="149" width="0.2095%" height="15" fill="rgb(241,25,7)" fg:x="14331" fg:w="31"/><text x="97.1007%" y="159.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::finish_grow (30 samples, 0.20%)</title><rect x="96.8575%" y="133" width="0.2027%" height="15" fill="rgb(242,119,39)" fg:x="14332" fg:w="30"/><text x="97.1075%" y="143.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::Formatter::write_formatted_parts (41 samples, 0.28%)</title><rect x="96.8034%" y="181" width="0.2771%" height="15" fill="rgb(241,98,45)" fg:x="14324" fg:w="41"/><text x="97.0534%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (38 samples, 0.26%)</title><rect x="96.8237%" y="165" width="0.2568%" height="15" fill="rgb(254,28,30)" fg:x="14327" fg:w="38"/><text x="97.0737%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.02%)</title><rect x="97.0602%" y="149" width="0.0203%" height="15" fill="rgb(241,142,54)" fg:x="14362" fg:w="3"/><text x="97.3102%" y="159.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::num::flt2dec::strategy::grisu::format_exact_opt (47 samples, 0.32%)</title><rect x="97.0805%" y="181" width="0.3176%" height="15" fill="rgb(222,85,15)" fg:x="14365" fg:w="47"/><text x="97.3305%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::float::float_to_decimal_common_exact (97 samples, 0.66%)</title><rect x="96.7561%" y="197" width="0.6555%" height="15" fill="rgb(210,85,47)" fg:x="14317" fg:w="97"/><text x="97.0061%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::fmt::format (110 samples, 0.74%)</title><rect x="96.6750%" y="229" width="0.7434%" height="15" fill="rgb(224,206,25)" fg:x="14305" fg:w="110"/><text x="96.9250%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::write (108 samples, 0.73%)</title><rect x="96.6885%" y="213" width="0.7299%" height="15" fill="rgb(243,201,19)" fg:x="14307" fg:w="108"/><text x="96.9385%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::num::dec2flt::dec2flt (6 samples, 0.04%)</title><rect x="97.4184%" y="229" width="0.0405%" height="15" fill="rgb(236,59,4)" fg:x="14415" fg:w="6"/><text x="97.6684%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.03%)</title><rect x="97.4725%" y="229" width="0.0338%" height="15" fill="rgb(254,179,45)" fg:x="14423" fg:w="5"/><text x="97.7225%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (3 samples, 0.02%)</title><rect x="97.4860%" y="213" width="0.0203%" height="15" fill="rgb(226,14,10)" fg:x="14425" fg:w="3"/><text x="97.7360%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.01%)</title><rect x="97.4927%" y="197" width="0.0135%" height="15" fill="rgb(244,27,41)" fg:x="14426" fg:w="2"/><text x="97.7427%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`emath::round_to_decimals (127 samples, 0.86%)</title><rect x="96.6615%" y="245" width="0.8583%" height="15" fill="rgb(235,35,32)" fg:x="14303" fg:w="127"/><text x="96.9115%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.01%)</title><rect x="97.5063%" y="229" width="0.0135%" height="15" fill="rgb(218,68,31)" fg:x="14428" fg:w="2"/><text x="97.7563%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;epaint::text::fonts::LayoutJob as core::hash::Hash&gt;::hash (2 samples, 0.01%)</title><rect x="97.5941%" y="213" width="0.0135%" height="15" fill="rgb(207,120,37)" fg:x="14441" fg:w="2"/><text x="97.8441%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (17 samples, 0.11%)</title><rect x="97.6076%" y="213" width="0.1149%" height="15" fill="rgb(227,98,0)" fg:x="14443" fg:w="17"/><text x="97.8576%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (9 samples, 0.06%)</title><rect x="97.6617%" y="197" width="0.0608%" height="15" fill="rgb(207,7,3)" fg:x="14451" fg:w="9"/><text x="97.9117%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (5 samples, 0.03%)</title><rect x="97.7563%" y="197" width="0.0338%" height="15" fill="rgb(206,98,19)" fg:x="14465" fg:w="5"/><text x="98.0063%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (5 samples, 0.03%)</title><rect x="97.7563%" y="181" width="0.0338%" height="15" fill="rgb(217,5,26)" fg:x="14465" fg:w="5"/><text x="98.0063%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free (12 samples, 0.08%)</title><rect x="97.7225%" y="213" width="0.0811%" height="15" fill="rgb(235,190,38)" fg:x="14460" fg:w="12"/><text x="97.9725%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.01%)</title><rect x="97.7901%" y="197" width="0.0135%" height="15" fill="rgb(247,86,24)" fg:x="14470" fg:w="2"/><text x="98.0401%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (10 samples, 0.07%)</title><rect x="97.8036%" y="213" width="0.0676%" height="15" fill="rgb(205,101,16)" fg:x="14472" fg:w="10"/><text x="98.0536%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`epaint::text::fonts::GalleyCache::layout (48 samples, 0.32%)</title><rect x="97.5536%" y="229" width="0.3244%" height="15" fill="rgb(246,168,33)" fg:x="14435" fg:w="48"/><text x="97.8036%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`epaint::text::fonts::Fonts::layout_single_line (55 samples, 0.37%)</title><rect x="97.5198%" y="245" width="0.3717%" height="15" fill="rgb(231,114,1)" fg:x="14430" fg:w="55"/><text x="97.7698%" y="255.50"></text></g><g><title>libsystem_m.dylib`0x00007fff6b1acc70 (42 samples, 0.28%)</title><rect x="97.8915%" y="245" width="0.2838%" height="15" fill="rgb(207,184,53)" fg:x="14485" fg:w="42"/><text x="98.1415%" y="255.50"></text></g><g><title>libsystem_m.dylib`roundf (31 samples, 0.21%)</title><rect x="98.1753%" y="245" width="0.2095%" height="15" fill="rgb(224,95,51)" fg:x="14527" fg:w="31"/><text x="98.4253%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;egui::widgets::plot::Plot as egui::widgets::Widget&gt;::ui (1,178 samples, 7.96%)</title><rect x="90.5859%" y="261" width="7.9611%" height="15" fill="rgb(212,188,45)" fg:x="13404" fg:w="1178"/><text x="90.8359%" y="271.50">benchmark-0..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (22 samples, 0.15%)</title><rect x="98.3983%" y="245" width="0.1487%" height="15" fill="rgb(223,154,38)" fg:x="14560" fg:w="22"/><text x="98.6483%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`DYLD-STUB$$floor (2 samples, 0.01%)</title><rect x="98.5470%" y="261" width="0.0135%" height="15" fill="rgb(251,22,52)" fg:x="14582" fg:w="2"/><text x="98.7970%" y="271.50"></text></g><g><title>benchmark-022a91b58b3cfee0`DYLD-STUB$$memmove (2 samples, 0.01%)</title><rect x="98.5605%" y="261" width="0.0135%" height="15" fill="rgb(229,209,22)" fg:x="14584" fg:w="2"/><text x="98.8105%" y="271.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;epaint::color::Rgba as core::convert::From&lt;epaint::color::Hsva&gt;&gt;::from (4 samples, 0.03%)</title><rect x="98.8173%" y="213" width="0.0270%" height="15" fill="rgb(234,138,34)" fg:x="14622" fg:w="4"/><text x="99.0673%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;epaint::color::Color32 as core::convert::From&lt;epaint::color::Hsva&gt;&gt;::from (5 samples, 0.03%)</title><rect x="98.8173%" y="229" width="0.0338%" height="15" fill="rgb(212,95,11)" fg:x="14622" fg:w="5"/><text x="99.0673%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;epaint::color::Color32 as core::convert::From&lt;epaint::color::Rgba&gt;&gt;::from (2 samples, 0.01%)</title><rect x="98.8511%" y="229" width="0.0135%" height="15" fill="rgb(240,179,47)" fg:x="14627" fg:w="2"/><text x="99.1011%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.02%)</title><rect x="98.8646%" y="229" width="0.0203%" height="15" fill="rgb(240,163,11)" fg:x="14629" fg:w="3"/><text x="99.1146%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::finish_grow (3 samples, 0.02%)</title><rect x="98.8646%" y="213" width="0.0203%" height="15" fill="rgb(236,37,12)" fg:x="14629" fg:w="3"/><text x="99.1146%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`realloc (2 samples, 0.01%)</title><rect x="98.8714%" y="197" width="0.0135%" height="15" fill="rgb(232,164,16)" fg:x="14630" fg:w="2"/><text x="99.1214%" y="207.50"></text></g><g><title>libsystem_m.dylib`0x00007fff6b1acc70 (3 samples, 0.02%)</title><rect x="98.8849%" y="229" width="0.0203%" height="15" fill="rgb(244,205,15)" fg:x="14632" fg:w="3"/><text x="99.1349%" y="239.50"></text></g><g><title>libsystem_m.dylib`roundf (4 samples, 0.03%)</title><rect x="98.9052%" y="229" width="0.0270%" height="15" fill="rgb(223,117,47)" fg:x="14635" fg:w="4"/><text x="99.1552%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc (8 samples, 0.05%)</title><rect x="98.9322%" y="229" width="0.0541%" height="15" fill="rgb(244,107,35)" fg:x="14639" fg:w="8"/><text x="99.1822%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (8 samples, 0.05%)</title><rect x="98.9322%" y="213" width="0.0541%" height="15" fill="rgb(205,140,8)" fg:x="14639" fg:w="8"/><text x="99.1822%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.05%)</title><rect x="98.9322%" y="197" width="0.0541%" height="15" fill="rgb(228,84,46)" fg:x="14639" fg:w="8"/><text x="99.1822%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (8 samples, 0.05%)</title><rect x="98.9322%" y="181" width="0.0541%" height="15" fill="rgb(254,188,9)" fg:x="14639" fg:w="8"/><text x="99.1822%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.01%)</title><rect x="98.9728%" y="165" width="0.0135%" height="15" fill="rgb(206,112,54)" fg:x="14645" fg:w="2"/><text x="99.2228%" y="175.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::widgets::plot::Plot::points (29 samples, 0.20%)</title><rect x="98.8038%" y="245" width="0.1960%" height="15" fill="rgb(216,84,49)" fg:x="14620" fg:w="29"/><text x="99.0538%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.01%)</title><rect x="98.9863%" y="229" width="0.0135%" height="15" fill="rgb(214,194,35)" fg:x="14647" fg:w="2"/><text x="99.2363%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::widgets::plot::items::Points::new (2 samples, 0.01%)</title><rect x="98.9998%" y="245" width="0.0135%" height="15" fill="rgb(249,28,3)" fg:x="14649" fg:w="2"/><text x="99.2498%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc (10 samples, 0.07%)</title><rect x="99.0133%" y="245" width="0.0676%" height="15" fill="rgb(222,56,52)" fg:x="14651" fg:w="10"/><text x="99.2633%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (9 samples, 0.06%)</title><rect x="99.0201%" y="229" width="0.0608%" height="15" fill="rgb(245,217,50)" fg:x="14652" fg:w="9"/><text x="99.2701%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.06%)</title><rect x="99.0201%" y="213" width="0.0608%" height="15" fill="rgb(213,201,24)" fg:x="14652" fg:w="9"/><text x="99.2701%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (8 samples, 0.05%)</title><rect x="99.0268%" y="197" width="0.0541%" height="15" fill="rgb(248,116,28)" fg:x="14653" fg:w="8"/><text x="99.2768%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (3 samples, 0.02%)</title><rect x="99.0606%" y="181" width="0.0203%" height="15" fill="rgb(219,72,43)" fg:x="14658" fg:w="3"/><text x="99.3106%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`benchmark::criterion_benchmark::points_plot (76 samples, 0.51%)</title><rect x="98.5808%" y="261" width="0.5136%" height="15" fill="rgb(209,138,14)" fg:x="14587" fg:w="76"/><text x="98.8308%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.01%)</title><rect x="99.0809%" y="245" width="0.0135%" height="15" fill="rgb(222,18,33)" fg:x="14661" fg:w="2"/><text x="99.3309%" y="255.50"></text></g><g><title>libsystem_m.dylib`round (3 samples, 0.02%)</title><rect x="99.1012%" y="261" width="0.0203%" height="15" fill="rgb(213,199,7)" fg:x="14664" fg:w="3"/><text x="99.3512%" y="271.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::containers::frame::Frame::show (1,264 samples, 8.54%)</title><rect x="90.5859%" y="277" width="8.5423%" height="15" fill="rgb(250,110,10)" fg:x="13404" fg:w="1264"/><text x="90.8359%" y="287.50">benchmark-02..</text></g><g><title>benchmark-022a91b58b3cfee0`egui::containers::panel::CentralPanel::show (1,266 samples, 8.56%)</title><rect x="90.5792%" y="293" width="8.5558%" height="15" fill="rgb(248,123,6)" fg:x="13403" fg:w="1266"/><text x="90.8292%" y="303.50">benchmark-02..</text></g><g><title>benchmark-022a91b58b3cfee0`DYLD-STUB$$memmove (3 samples, 0.02%)</title><rect x="99.1417%" y="277" width="0.0203%" height="15" fill="rgb(206,91,31)" fg:x="14670" fg:w="3"/><text x="99.3917%" y="287.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::layers::GraphicLayers::drain (98 samples, 0.66%)</title><rect x="99.1620%" y="277" width="0.6623%" height="15" fill="rgb(211,154,13)" fg:x="14673" fg:w="98"/><text x="99.4120%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (75 samples, 0.51%)</title><rect x="99.3174%" y="261" width="0.5069%" height="15" fill="rgb(225,148,7)" fg:x="14696" fg:w="75"/><text x="99.5674%" y="271.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::context::Context::end_frame (115 samples, 0.78%)</title><rect x="99.1350%" y="293" width="0.7772%" height="15" fill="rgb(220,160,43)" fg:x="14669" fg:w="115"/><text x="99.3850%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (13 samples, 0.09%)</title><rect x="99.8243%" y="277" width="0.0879%" height="15" fill="rgb(213,52,39)" fg:x="14771" fg:w="13"/><text x="100.0743%" y="287.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;egui::context::Context as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="99.9121%" y="277" width="0.0135%" height="15" fill="rgb(243,137,7)" fg:x="14784" fg:w="2"/><text x="100.1621%" y="287.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::input_state::InputState::begin_frame (2 samples, 0.01%)</title><rect x="99.9324%" y="277" width="0.0135%" height="15" fill="rgb(230,79,13)" fg:x="14787" fg:w="2"/><text x="100.1824%" y="287.50"></text></g><g><title>benchmark-022a91b58b3cfee0`criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (14,788 samples, 99.94%)</title><rect x="0.0135%" y="357" width="99.9392%" height="15" fill="rgb(247,105,23)" fg:x="2" fg:w="14788"/><text x="0.2635%" y="367.50">benchmark-022a91b58b3cfee0`criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>benchmark-022a91b58b3cfee0`criterion::routine::Routine::profile (14,788 samples, 99.94%)</title><rect x="0.0135%" y="341" width="99.9392%" height="15" fill="rgb(223,179,41)" fg:x="2" fg:w="14788"/><text x="0.2635%" y="351.50">benchmark-022a91b58b3cfee0`criterion::routine::Routine::profile</text></g><g><title>benchmark-022a91b58b3cfee0`&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (1,453 samples, 9.82%)</title><rect x="90.1331%" y="325" width="9.8196%" height="15" fill="rgb(218,9,34)" fg:x="13337" fg:w="1453"/><text x="90.3831%" y="335.50">benchmark-022a..</text></g><g><title>benchmark-022a91b58b3cfee0`criterion::bencher::Bencher&lt;M&gt;::iter (1,453 samples, 9.82%)</title><rect x="90.1331%" y="309" width="9.8196%" height="15" fill="rgb(222,106,8)" fg:x="13337" fg:w="1453"/><text x="90.3831%" y="319.50">benchmark-022a..</text></g><g><title>benchmark-022a91b58b3cfee0`egui::context::CtxRef::begin_frame (6 samples, 0.04%)</title><rect x="99.9121%" y="293" width="0.0405%" height="15" fill="rgb(211,220,0)" fg:x="14784" fg:w="6"/><text x="100.1621%" y="303.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::context::CtxRef::begin_frame (2 samples, 0.01%)</title><rect x="99.9595%" y="357" width="0.0135%" height="15" fill="rgb(229,52,16)" fg:x="14791" fg:w="2"/><text x="100.2095%" y="367.50"></text></g><g><title>benchmark-022a91b58b3cfee0`epaint::text::fonts::Fonts::from_definitions (2 samples, 0.01%)</title><rect x="99.9595%" y="341" width="0.0135%" height="15" fill="rgb(212,155,18)" fg:x="14791" fg:w="2"/><text x="100.2095%" y="351.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.01%)</title><rect x="99.9595%" y="325" width="0.0135%" height="15" fill="rgb(242,21,14)" fg:x="14791" fg:w="2"/><text x="100.2095%" y="335.50"></text></g><g><title>benchmark-022a91b58b3cfee0`epaint::text::font::Font::new (2 samples, 0.01%)</title><rect x="99.9595%" y="309" width="0.0135%" height="15" fill="rgb(222,19,48)" fg:x="14791" fg:w="2"/><text x="100.2095%" y="319.50"></text></g><g><title>benchmark-022a91b58b3cfee0`epaint::text::font::Font::glyph_info (2 samples, 0.01%)</title><rect x="99.9595%" y="293" width="0.0135%" height="15" fill="rgb(232,45,27)" fg:x="14791" fg:w="2"/><text x="100.2095%" y="303.50"></text></g><g><title>benchmark-022a91b58b3cfee0`epaint::text::font::Font::glyph_info_no_cache_or_fallback (2 samples, 0.01%)</title><rect x="99.9595%" y="277" width="0.0135%" height="15" fill="rgb(249,103,42)" fg:x="14791" fg:w="2"/><text x="100.2095%" y="287.50"></text></g><g><title>benchmark-022a91b58b3cfee0`epaint::text::font::FontImpl::glyph_info (2 samples, 0.01%)</title><rect x="99.9595%" y="261" width="0.0135%" height="15" fill="rgb(246,81,33)" fg:x="14791" fg:w="2"/><text x="100.2095%" y="271.50"></text></g><g><title>benchmark-022a91b58b3cfee0`main (14,796 samples, 99.99%)</title><rect x="0.0000%" y="437" width="99.9932%" height="15" fill="rgb(252,33,42)" fg:x="0" fg:w="14796"/><text x="0.2500%" y="447.50">benchmark-022a91b58b3cfee0`main</text></g><g><title>benchmark-022a91b58b3cfee0`std::rt::lang_start_internal (14,796 samples, 99.99%)</title><rect x="0.0000%" y="421" width="99.9932%" height="15" fill="rgb(209,212,41)" fg:x="0" fg:w="14796"/><text x="0.2500%" y="431.50">benchmark-022a91b58b3cfee0`std::rt::lang_start_internal</text></g><g><title>benchmark-022a91b58b3cfee0`std::rt::lang_start::_{{closure}} (14,795 samples, 99.99%)</title><rect x="0.0068%" y="405" width="99.9865%" height="15" fill="rgb(207,154,6)" fg:x="1" fg:w="14795"/><text x="0.2568%" y="415.50">benchmark-022a91b58b3cfee0`std::rt::lang_start::_{{closure}}</text></g><g><title>benchmark-022a91b58b3cfee0`std::sys_common::backtrace::__rust_begin_short_backtrace (14,795 samples, 99.99%)</title><rect x="0.0068%" y="389" width="99.9865%" height="15" fill="rgb(223,64,47)" fg:x="1" fg:w="14795"/><text x="0.2568%" y="399.50">benchmark-022a91b58b3cfee0`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>benchmark-022a91b58b3cfee0`benchmark::main (14,795 samples, 99.99%)</title><rect x="0.0068%" y="373" width="99.9865%" height="15" fill="rgb(211,161,38)" fg:x="1" fg:w="14795"/><text x="0.2568%" y="383.50">benchmark-022a91b58b3cfee0`benchmark::main</text></g><g><title>all (14,797 samples, 100%)</title><rect x="0.0000%" y="485" width="100.0000%" height="15" fill="rgb(219,138,40)" fg:x="0" fg:w="14797"/><text x="0.2500%" y="495.50"></text></g><g><title>benchmark-022a91b58b3cfee0`0x5 (14,797 samples, 100.00%)</title><rect x="0.0000%" y="469" width="100.0000%" height="15" fill="rgb(241,228,46)" fg:x="0" fg:w="14797"/><text x="0.2500%" y="479.50">benchmark-022a91b58b3cfee0`0x5</text></g><g><title>libdyld.dylib`start (14,797 samples, 100.00%)</title><rect x="0.0000%" y="453" width="100.0000%" height="15" fill="rgb(223,209,38)" fg:x="0" fg:w="14797"/><text x="0.2500%" y="463.50">libdyld.dylib`start</text></g></svg></svg>