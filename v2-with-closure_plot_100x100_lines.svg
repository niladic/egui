<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="502" onload="init(evt)" viewBox="0 0 1200 502" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="502" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="485.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="485.00"> </text><svg id="frames" x="10" width="1180" total_samples="15111"><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.03%)</title><rect x="0.0529%" y="261" width="0.0331%" height="15" fill="rgb(227,0,7)" fg:x="8" fg:w="5"/><text x="0.3029%" y="271.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::finish_grow (5 samples, 0.03%)</title><rect x="0.0529%" y="245" width="0.0331%" height="15" fill="rgb(217,0,24)" fg:x="8" fg:w="5"/><text x="0.3029%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc (4 samples, 0.03%)</title><rect x="0.0596%" y="229" width="0.0265%" height="15" fill="rgb(221,193,54)" fg:x="9" fg:w="4"/><text x="0.3096%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (4 samples, 0.03%)</title><rect x="0.0596%" y="213" width="0.0265%" height="15" fill="rgb(248,212,6)" fg:x="9" fg:w="4"/><text x="0.3096%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.02%)</title><rect x="0.0662%" y="197" width="0.0199%" height="15" fill="rgb(208,68,35)" fg:x="10" fg:w="3"/><text x="0.3162%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (3 samples, 0.02%)</title><rect x="0.0662%" y="181" width="0.0199%" height="15" fill="rgb(232,128,0)" fg:x="10" fg:w="3"/><text x="0.3162%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.01%)</title><rect x="0.0728%" y="165" width="0.0132%" height="15" fill="rgb(207,160,47)" fg:x="11" fg:w="2"/><text x="0.3228%" y="175.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::ptr::drop_in_place&lt;epaint::shape::Shape&gt; (132 samples, 0.87%)</title><rect x="0.1721%" y="245" width="0.8735%" height="15" fill="rgb(228,23,34)" fg:x="26" fg:w="132"/><text x="0.4221%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (23 samples, 0.15%)</title><rect x="1.0853%" y="229" width="0.1522%" height="15" fill="rgb(218,30,26)" fg:x="164" fg:w="23"/><text x="1.3353%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (21 samples, 0.14%)</title><rect x="1.0985%" y="213" width="0.1390%" height="15" fill="rgb(220,122,19)" fg:x="166" fg:w="21"/><text x="1.3485%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (29 samples, 0.19%)</title><rect x="1.0522%" y="245" width="0.1919%" height="15" fill="rgb(250,228,42)" fg:x="159" fg:w="29"/><text x="1.3022%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (29 samples, 0.19%)</title><rect x="1.8199%" y="213" width="0.1919%" height="15" fill="rgb(240,193,28)" fg:x="275" fg:w="29"/><text x="2.0699%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (146 samples, 0.97%)</title><rect x="1.2441%" y="245" width="0.9662%" height="15" fill="rgb(216,20,37)" fg:x="188" fg:w="146"/><text x="1.4941%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (102 samples, 0.68%)</title><rect x="1.5353%" y="229" width="0.6750%" height="15" fill="rgb(206,188,39)" fg:x="232" fg:w="102"/><text x="1.7853%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (30 samples, 0.20%)</title><rect x="2.0118%" y="213" width="0.1985%" height="15" fill="rgb(217,207,13)" fg:x="304" fg:w="30"/><text x="2.2618%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::ptr::drop_in_place&lt;(egui::data::output::Output,alloc::vec::Vec&lt;epaint::ClippedShape&gt;)&gt; (321 samples, 2.12%)</title><rect x="0.0926%" y="261" width="2.1243%" height="15" fill="rgb(231,73,38)" fg:x="14" fg:w="321"/><text x="0.3426%" y="271.50">b..</text></g><g><title>benchmark-022a91b58b3cfee0`core::ptr::drop_in_place&lt;epaint::shape::Shape&gt; (3 samples, 0.02%)</title><rect x="2.2169%" y="261" width="0.0199%" height="15" fill="rgb(225,20,46)" fg:x="335" fg:w="3"/><text x="2.4669%" y="271.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;&amp;T as core::fmt::Display&gt;::fmt (4 samples, 0.03%)</title><rect x="4.2816%" y="213" width="0.0265%" height="15" fill="rgb(210,31,41)" fg:x="647" fg:w="4"/><text x="4.5316%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (4 samples, 0.03%)</title><rect x="4.3081%" y="213" width="0.0265%" height="15" fill="rgb(221,200,47)" fg:x="651" fg:w="4"/><text x="4.5581%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (9 samples, 0.06%)</title><rect x="12.7854%" y="165" width="0.0596%" height="15" fill="rgb(226,26,5)" fg:x="1932" fg:w="9"/><text x="13.0354%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (102 samples, 0.68%)</title><rect x="12.7324%" y="181" width="0.6750%" height="15" fill="rgb(249,33,26)" fg:x="1924" fg:w="102"/><text x="12.9824%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (85 samples, 0.56%)</title><rect x="12.8449%" y="165" width="0.5625%" height="15" fill="rgb(235,183,28)" fg:x="1941" fg:w="85"/><text x="13.0949%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (79 samples, 0.52%)</title><rect x="12.8847%" y="149" width="0.5228%" height="15" fill="rgb(221,5,38)" fg:x="1947" fg:w="79"/><text x="13.1347%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (3 samples, 0.02%)</title><rect x="13.3876%" y="133" width="0.0199%" height="15" fill="rgb(247,18,42)" fg:x="2023" fg:w="3"/><text x="13.6376%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc (110 samples, 0.73%)</title><rect x="12.7060%" y="197" width="0.7279%" height="15" fill="rgb(241,131,45)" fg:x="1920" fg:w="110"/><text x="12.9560%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (4 samples, 0.03%)</title><rect x="13.4075%" y="181" width="0.0265%" height="15" fill="rgb(249,31,29)" fg:x="2026" fg:w="4"/><text x="13.6575%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;egui::widgets::plot::items::Line as egui::widgets::plot::items::PlotItem&gt;::closest (1,376 samples, 9.11%)</title><rect x="4.3346%" y="213" width="9.1059%" height="15" fill="rgb(225,111,53)" fg:x="655" fg:w="1376"/><text x="4.5846%" y="223.50">benchmark-022..</text></g><g><title>benchmark-022a91b58b3cfee0`&lt;egui::widgets::plot::items::Line as egui::widgets::plot::items::PlotItem&gt;::get_bounds (5 samples, 0.03%)</title><rect x="13.4405%" y="213" width="0.0331%" height="15" fill="rgb(238,160,17)" fg:x="2031" fg:w="5"/><text x="13.6905%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,232 samples, 8.15%)</title><rect x="13.8773%" y="197" width="8.1530%" height="15" fill="rgb(214,148,48)" fg:x="2097" fg:w="1232"/><text x="14.1273%" y="207.50">benchmark-0..</text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.01%)</title><rect x="22.0700%" y="181" width="0.0132%" height="15" fill="rgb(232,36,49)" fg:x="3335" fg:w="2"/><text x="22.3200%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (4 samples, 0.03%)</title><rect x="22.1428%" y="165" width="0.0265%" height="15" fill="rgb(209,103,24)" fg:x="3346" fg:w="4"/><text x="22.3928%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (13 samples, 0.09%)</title><rect x="22.7781%" y="133" width="0.0860%" height="15" fill="rgb(229,88,8)" fg:x="3442" fg:w="13"/><text x="23.0281%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (155 samples, 1.03%)</title><rect x="22.0833%" y="181" width="1.0257%" height="15" fill="rgb(213,181,19)" fg:x="3337" fg:w="155"/><text x="22.3333%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (142 samples, 0.94%)</title><rect x="22.1693%" y="165" width="0.9397%" height="15" fill="rgb(254,191,54)" fg:x="3350" fg:w="142"/><text x="22.4193%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (132 samples, 0.87%)</title><rect x="22.2355%" y="149" width="0.8735%" height="15" fill="rgb(241,83,37)" fg:x="3360" fg:w="132"/><text x="22.4855%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (37 samples, 0.24%)</title><rect x="22.8641%" y="133" width="0.2449%" height="15" fill="rgb(233,36,39)" fg:x="3455" fg:w="37"/><text x="23.1141%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc (166 samples, 1.10%)</title><rect x="22.0303%" y="197" width="1.0985%" height="15" fill="rgb(226,3,54)" fg:x="3329" fg:w="166"/><text x="22.2803%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.02%)</title><rect x="23.1090%" y="181" width="0.0199%" height="15" fill="rgb(245,192,40)" fg:x="3492" fg:w="3"/><text x="23.3590%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;egui::widgets::plot::items::Line as egui::widgets::plot::items::PlotItem&gt;::get_shapes (1,479 samples, 9.79%)</title><rect x="13.4736%" y="213" width="9.7876%" height="15" fill="rgb(238,167,29)" fg:x="2036" fg:w="1479"/><text x="13.7236%" y="223.50">benchmark-022a..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (19 samples, 0.13%)</title><rect x="23.1355%" y="197" width="0.1257%" height="15" fill="rgb(232,182,51)" fg:x="3496" fg:w="19"/><text x="23.3855%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;egui::widgets::plot::items::Line as egui::widgets::plot::items::PlotItem&gt;::highlighted (3 samples, 0.02%)</title><rect x="23.2612%" y="213" width="0.0199%" height="15" fill="rgb(231,60,39)" fg:x="3515" fg:w="3"/><text x="23.5112%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;epaint::color::Color32 as core::convert::From&lt;epaint::color::Rgba&gt;&gt;::from (515 samples, 3.41%)</title><rect x="23.2877%" y="213" width="3.4081%" height="15" fill="rgb(208,69,12)" fg:x="3519" fg:w="515"/><text x="23.5377%" y="223.50">ben..</text></g><g><title>benchmark-022a91b58b3cfee0`DYLD-STUB$$powf (5 samples, 0.03%)</title><rect x="26.6958%" y="213" width="0.0331%" height="15" fill="rgb(235,93,37)" fg:x="4034" fg:w="5"/><text x="26.9458%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`DYLD-STUB$$roundf (30 samples, 0.20%)</title><rect x="26.7289%" y="213" width="0.1985%" height="15" fill="rgb(213,116,39)" fg:x="4039" fg:w="30"/><text x="26.9789%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`__rdl_alloc (5 samples, 0.03%)</title><rect x="26.9274%" y="213" width="0.0331%" height="15" fill="rgb(222,207,29)" fg:x="4069" fg:w="5"/><text x="27.1774%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`__rdl_dealloc (4 samples, 0.03%)</title><rect x="26.9605%" y="213" width="0.0265%" height="15" fill="rgb(206,96,30)" fg:x="4074" fg:w="4"/><text x="27.2105%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::fmt::format (4 samples, 0.03%)</title><rect x="26.9936%" y="213" width="0.0265%" height="15" fill="rgb(218,138,4)" fg:x="4079" fg:w="4"/><text x="27.2436%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_small (2 samples, 0.01%)</title><rect x="27.0796%" y="133" width="0.0132%" height="15" fill="rgb(250,191,14)" fg:x="4092" fg:w="2"/><text x="27.3296%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.01%)</title><rect x="27.0928%" y="133" width="0.0132%" height="15" fill="rgb(239,60,40)" fg:x="4094" fg:w="2"/><text x="27.3428%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`medium_try_realloc_in_place (4 samples, 0.03%)</title><rect x="27.1127%" y="133" width="0.0265%" height="15" fill="rgb(206,27,48)" fg:x="4097" fg:w="4"/><text x="27.3627%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`small_try_realloc_in_place (4 samples, 0.03%)</title><rect x="27.1458%" y="133" width="0.0265%" height="15" fill="rgb(225,35,8)" fg:x="4102" fg:w="4"/><text x="27.3958%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`medium_malloc_should_clear (6 samples, 0.04%)</title><rect x="27.1789%" y="117" width="0.0397%" height="15" fill="rgb(250,213,24)" fg:x="4107" fg:w="6"/><text x="27.4289%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`medium_malloc_from_free_list (4 samples, 0.03%)</title><rect x="27.1921%" y="101" width="0.0265%" height="15" fill="rgb(247,123,22)" fg:x="4109" fg:w="4"/><text x="27.4421%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`medium_free_list_add_ptr (3 samples, 0.02%)</title><rect x="27.1987%" y="85" width="0.0199%" height="15" fill="rgb(231,138,38)" fg:x="4110" fg:w="3"/><text x="27.4487%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.05%)</title><rect x="27.1723%" y="133" width="0.0529%" height="15" fill="rgb(231,145,46)" fg:x="4106" fg:w="8"/><text x="27.4223%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (2 samples, 0.01%)</title><rect x="27.2318%" y="133" width="0.0132%" height="15" fill="rgb(251,118,11)" fg:x="4115" fg:w="2"/><text x="27.4818%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (42 samples, 0.28%)</title><rect x="27.0598%" y="149" width="0.2779%" height="15" fill="rgb(217,147,25)" fg:x="4089" fg:w="42"/><text x="27.3098%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (14 samples, 0.09%)</title><rect x="27.2451%" y="133" width="0.0926%" height="15" fill="rgb(247,81,37)" fg:x="4117" fg:w="14"/><text x="27.4951%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (47 samples, 0.31%)</title><rect x="27.0333%" y="165" width="0.3110%" height="15" fill="rgb(209,12,38)" fg:x="4085" fg:w="47"/><text x="27.2833%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`small_size (2 samples, 0.01%)</title><rect x="27.3443%" y="165" width="0.0132%" height="15" fill="rgb(227,1,9)" fg:x="4132" fg:w="2"/><text x="27.5943%" y="175.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::finish_grow (53 samples, 0.35%)</title><rect x="27.0267%" y="197" width="0.3507%" height="15" fill="rgb(248,47,43)" fg:x="4084" fg:w="53"/><text x="27.2767%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`realloc (52 samples, 0.34%)</title><rect x="27.0333%" y="181" width="0.3441%" height="15" fill="rgb(221,10,30)" fg:x="4085" fg:w="52"/><text x="27.2833%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (3 samples, 0.02%)</title><rect x="27.3576%" y="165" width="0.0199%" height="15" fill="rgb(210,229,1)" fg:x="4134" fg:w="3"/><text x="27.6076%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.01%)</title><rect x="27.3642%" y="149" width="0.0132%" height="15" fill="rgb(222,148,37)" fg:x="4135" fg:w="2"/><text x="27.6142%" y="159.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (55 samples, 0.36%)</title><rect x="27.0201%" y="213" width="0.3640%" height="15" fill="rgb(234,67,33)" fg:x="4083" fg:w="55"/><text x="27.2701%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;egui::widgets::plot::items::Line as egui::widgets::plot::items::PlotItem&gt;::highlighted (2 samples, 0.01%)</title><rect x="27.4105%" y="197" width="0.0132%" height="15" fill="rgb(247,98,35)" fg:x="4142" fg:w="2"/><text x="27.6605%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.01%)</title><rect x="27.4303%" y="197" width="0.0132%" height="15" fill="rgb(247,138,52)" fg:x="4145" fg:w="2"/><text x="27.6803%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.01%)</title><rect x="27.4303%" y="181" width="0.0132%" height="15" fill="rgb(213,79,30)" fg:x="4145" fg:w="2"/><text x="27.6803%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::slice::merge_sort (10 samples, 0.07%)</title><rect x="27.3840%" y="213" width="0.0662%" height="15" fill="rgb(246,177,23)" fg:x="4138" fg:w="10"/><text x="27.6340%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (4 samples, 0.03%)</title><rect x="27.4568%" y="197" width="0.0265%" height="15" fill="rgb(230,62,27)" fg:x="4149" fg:w="4"/><text x="27.7068%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::vec::Vec&lt;T,A&gt;::retain (51 samples, 0.34%)</title><rect x="27.4502%" y="213" width="0.3375%" height="15" fill="rgb(216,154,8)" fg:x="4148" fg:w="51"/><text x="27.7002%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (46 samples, 0.30%)</title><rect x="27.4833%" y="197" width="0.3044%" height="15" fill="rgb(244,35,45)" fg:x="4153" fg:w="46"/><text x="27.7333%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (13 samples, 0.09%)</title><rect x="27.7017%" y="181" width="0.0860%" height="15" fill="rgb(251,115,12)" fg:x="4186" fg:w="13"/><text x="27.9517%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;&amp;T as core::fmt::Display&gt;::fmt (6 samples, 0.04%)</title><rect x="28.0987%" y="197" width="0.0397%" height="15" fill="rgb(240,54,50)" fg:x="4246" fg:w="6"/><text x="28.3487%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (42 samples, 0.28%)</title><rect x="28.1384%" y="197" width="0.2779%" height="15" fill="rgb(233,84,52)" fg:x="4252" fg:w="42"/><text x="28.3884%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (13 samples, 0.09%)</title><rect x="28.3304%" y="181" width="0.0860%" height="15" fill="rgb(207,117,47)" fg:x="4281" fg:w="13"/><text x="28.5804%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`DYLD-STUB$$memcpy (5 samples, 0.03%)</title><rect x="28.4164%" y="197" width="0.0331%" height="15" fill="rgb(249,43,39)" fg:x="4294" fg:w="5"/><text x="28.6664%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::Formatter::pad_formatted_parts (8 samples, 0.05%)</title><rect x="28.4495%" y="197" width="0.0529%" height="15" fill="rgb(209,38,44)" fg:x="4299" fg:w="8"/><text x="28.6995%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::float::_&lt;impl core::fmt::Display for f64&gt;::fmt (4 samples, 0.03%)</title><rect x="28.5024%" y="197" width="0.0265%" height="15" fill="rgb(236,212,23)" fg:x="4307" fg:w="4"/><text x="28.7524%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (20 samples, 0.13%)</title><rect x="29.3362%" y="181" width="0.1324%" height="15" fill="rgb(242,79,21)" fg:x="4433" fg:w="20"/><text x="29.5862%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::Formatter::pad_formatted_parts (30 samples, 0.20%)</title><rect x="29.4686%" y="181" width="0.1985%" height="15" fill="rgb(211,96,35)" fg:x="4453" fg:w="30"/><text x="29.7186%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`__rdl_alloc (4 samples, 0.03%)</title><rect x="30.7723%" y="133" width="0.0265%" height="15" fill="rgb(253,215,40)" fg:x="4650" fg:w="4"/><text x="31.0223%" y="143.50"></text></g><g><title>benchmark-022a91b58b3cfee0`__rust_alloc (2 samples, 0.01%)</title><rect x="30.7988%" y="133" width="0.0132%" height="15" fill="rgb(211,81,21)" fg:x="4654" fg:w="2"/><text x="31.0488%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (4 samples, 0.03%)</title><rect x="31.0436%" y="101" width="0.0265%" height="15" fill="rgb(208,190,38)" fg:x="4691" fg:w="4"/><text x="31.2936%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (19 samples, 0.13%)</title><rect x="31.2885%" y="85" width="0.1257%" height="15" fill="rgb(235,213,38)" fg:x="4728" fg:w="19"/><text x="31.5385%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (362 samples, 2.40%)</title><rect x="31.4142%" y="85" width="2.3956%" height="15" fill="rgb(237,122,38)" fg:x="4747" fg:w="362"/><text x="31.6642%" y="95.50">li..</text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (334 samples, 2.21%)</title><rect x="31.5995%" y="69" width="2.2103%" height="15" fill="rgb(244,218,35)" fg:x="4775" fg:w="334"/><text x="31.8495%" y="79.50">l..</text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (416 samples, 2.75%)</title><rect x="31.0701%" y="101" width="2.7530%" height="15" fill="rgb(240,68,47)" fg:x="4695" fg:w="416"/><text x="31.3201%" y="111.50">li..</text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.01%)</title><rect x="33.8098%" y="85" width="0.0132%" height="15" fill="rgb(210,16,53)" fg:x="5109" fg:w="2"/><text x="34.0598%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc (2 samples, 0.01%)</title><rect x="33.8230%" y="101" width="0.0132%" height="15" fill="rgb(235,124,12)" fg:x="5111" fg:w="2"/><text x="34.0730%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`malloc (435 samples, 2.88%)</title><rect x="30.9841%" y="117" width="2.8787%" height="15" fill="rgb(224,169,11)" fg:x="4682" fg:w="435"/><text x="31.2341%" y="127.50">li..</text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (4 samples, 0.03%)</title><rect x="33.8363%" y="101" width="0.0265%" height="15" fill="rgb(250,166,2)" fg:x="5113" fg:w="4"/><text x="34.0863%" y="111.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::finish_grow (462 samples, 3.06%)</title><rect x="30.8120%" y="133" width="3.0574%" height="15" fill="rgb(242,216,29)" fg:x="4656" fg:w="462"/><text x="31.0620%" y="143.50">ben..</text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (496 samples, 3.28%)</title><rect x="30.6068%" y="149" width="3.2824%" height="15" fill="rgb(230,116,27)" fg:x="4625" fg:w="496"/><text x="30.8568%" y="159.50">ben..</text></g><g><title>libsystem_malloc.dylib`malloc (3 samples, 0.02%)</title><rect x="33.8694%" y="133" width="0.0199%" height="15" fill="rgb(228,99,48)" fg:x="5118" fg:w="3"/><text x="34.1194%" y="143.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::finish_grow (5 samples, 0.03%)</title><rect x="33.8892%" y="149" width="0.0331%" height="15" fill="rgb(253,11,6)" fg:x="5121" fg:w="5"/><text x="34.1392%" y="159.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (615 samples, 4.07%)</title><rect x="30.1568%" y="165" width="4.0699%" height="15" fill="rgb(247,143,39)" fg:x="4557" fg:w="615"/><text x="30.4068%" y="175.50">benc..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (46 samples, 0.30%)</title><rect x="33.9223%" y="149" width="0.3044%" height="15" fill="rgb(236,97,10)" fg:x="5126" fg:w="46"/><text x="34.1723%" y="159.50"></text></g><g><title>benchmark-022a91b58b3cfee0`DYLD-STUB$$memcpy (2 samples, 0.01%)</title><rect x="34.2267%" y="165" width="0.0132%" height="15" fill="rgb(233,208,19)" fg:x="5172" fg:w="2"/><text x="34.4767%" y="175.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.02%)</title><rect x="34.2400%" y="165" width="0.0199%" height="15" fill="rgb(216,164,2)" fg:x="5174" fg:w="3"/><text x="34.4900%" y="175.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::Formatter::write_formatted_parts (704 samples, 4.66%)</title><rect x="29.6671%" y="181" width="4.6589%" height="15" fill="rgb(220,129,5)" fg:x="4483" fg:w="704"/><text x="29.9171%" y="191.50">bench..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (10 samples, 0.07%)</title><rect x="34.2598%" y="165" width="0.0662%" height="15" fill="rgb(242,17,10)" fg:x="5177" fg:w="10"/><text x="34.5098%" y="175.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::float::float_to_decimal_common_shortest (1,402 samples, 9.28%)</title><rect x="28.5289%" y="197" width="9.2780%" height="15" fill="rgb(242,107,0)" fg:x="4311" fg:w="1402"/><text x="28.7789%" y="207.50">benchmark-022..</text></g><g><title>benchmark-022a91b58b3cfee0`core::num::flt2dec::strategy::grisu::format_shortest_opt (526 samples, 3.48%)</title><rect x="34.3260%" y="181" width="3.4809%" height="15" fill="rgb(251,28,31)" fg:x="5187" fg:w="526"/><text x="34.5760%" y="191.50">ben..</text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::write (1,519 samples, 10.05%)</title><rect x="27.7943%" y="213" width="10.0523%" height="15" fill="rgb(233,223,10)" fg:x="4200" fg:w="1519"/><text x="28.0443%" y="223.50">benchmark-022a9..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (5 samples, 0.03%)</title><rect x="37.8135%" y="197" width="0.0331%" height="15" fill="rgb(215,21,27)" fg:x="5714" fg:w="5"/><text x="38.0635%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`__rdl_dealloc (4 samples, 0.03%)</title><rect x="37.8863%" y="197" width="0.0265%" height="15" fill="rgb(232,23,21)" fg:x="5725" fg:w="4"/><text x="38.1363%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (7 samples, 0.05%)</title><rect x="37.9326%" y="181" width="0.0463%" height="15" fill="rgb(244,5,23)" fg:x="5732" fg:w="7"/><text x="38.1826%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`small_size (12 samples, 0.08%)</title><rect x="38.0319%" y="165" width="0.0794%" height="15" fill="rgb(226,81,46)" fg:x="5747" fg:w="12"/><text x="38.2819%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (12 samples, 0.08%)</title><rect x="38.1113%" y="165" width="0.0794%" height="15" fill="rgb(247,70,30)" fg:x="5759" fg:w="12"/><text x="38.3613%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (6 samples, 0.04%)</title><rect x="38.1510%" y="149" width="0.0397%" height="15" fill="rgb(212,68,19)" fg:x="5765" fg:w="6"/><text x="38.4010%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free (33 samples, 0.22%)</title><rect x="37.9790%" y="181" width="0.2184%" height="15" fill="rgb(240,187,13)" fg:x="5739" fg:w="33"/><text x="38.2290%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (28 samples, 0.19%)</title><rect x="38.6275%" y="165" width="0.1853%" height="15" fill="rgb(223,113,26)" fg:x="5837" fg:w="28"/><text x="38.8775%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_find_by_ptr (3 samples, 0.02%)</title><rect x="38.8128%" y="165" width="0.0199%" height="15" fill="rgb(206,192,2)" fg:x="5865" fg:w="3"/><text x="39.0628%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr (6 samples, 0.04%)</title><rect x="38.8326%" y="165" width="0.0397%" height="15" fill="rgb(241,108,4)" fg:x="5868" fg:w="6"/><text x="39.0826%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_small (129 samples, 0.85%)</title><rect x="38.1973%" y="181" width="0.8537%" height="15" fill="rgb(247,173,49)" fg:x="5772" fg:w="129"/><text x="38.4473%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (27 samples, 0.18%)</title><rect x="38.8723%" y="165" width="0.1787%" height="15" fill="rgb(224,114,35)" fg:x="5874" fg:w="27"/><text x="39.1223%" y="175.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::ptr::drop_in_place&lt;egui::widgets::plot::items::Line&gt; (174 samples, 1.15%)</title><rect x="37.9128%" y="197" width="1.1515%" height="15" fill="rgb(245,159,27)" fg:x="5729" fg:w="174"/><text x="38.1628%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (5 samples, 0.03%)</title><rect x="39.0643%" y="197" width="0.0331%" height="15" fill="rgb(245,172,44)" fg:x="5903" fg:w="5"/><text x="39.3143%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (26 samples, 0.17%)</title><rect x="39.2496%" y="181" width="0.1721%" height="15" fill="rgb(236,23,11)" fg:x="5931" fg:w="26"/><text x="39.4996%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (24 samples, 0.16%)</title><rect x="39.2628%" y="165" width="0.1588%" height="15" fill="rgb(205,117,38)" fg:x="5933" fg:w="24"/><text x="39.5128%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free (51 samples, 0.34%)</title><rect x="39.0973%" y="197" width="0.3375%" height="15" fill="rgb(237,72,25)" fg:x="5908" fg:w="51"/><text x="39.3473%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.01%)</title><rect x="39.4216%" y="181" width="0.0132%" height="15" fill="rgb(244,70,9)" fg:x="5957" fg:w="2"/><text x="39.6716%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (33 samples, 0.22%)</title><rect x="40.1297%" y="165" width="0.2184%" height="15" fill="rgb(217,125,39)" fg:x="6064" fg:w="33"/><text x="40.3797%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (174 samples, 1.15%)</title><rect x="39.4415%" y="197" width="1.1515%" height="15" fill="rgb(235,36,10)" fg:x="5960" fg:w="174"/><text x="39.6915%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (122 samples, 0.81%)</title><rect x="39.7856%" y="181" width="0.8074%" height="15" fill="rgb(251,123,47)" fg:x="6012" fg:w="122"/><text x="40.0356%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (37 samples, 0.24%)</title><rect x="40.3481%" y="165" width="0.2449%" height="15" fill="rgb(221,13,13)" fg:x="6097" fg:w="37"/><text x="40.5981%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (3 samples, 0.02%)</title><rect x="40.5929%" y="197" width="0.0199%" height="15" fill="rgb(238,131,9)" fg:x="6134" fg:w="3"/><text x="40.8429%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (2 samples, 0.01%)</title><rect x="40.6128%" y="197" width="0.0132%" height="15" fill="rgb(211,50,8)" fg:x="6137" fg:w="2"/><text x="40.8628%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::ptr::drop_in_place&lt;egui::widgets::plot::Prepared&gt; (419 samples, 2.77%)</title><rect x="37.8598%" y="213" width="2.7728%" height="15" fill="rgb(245,182,24)" fg:x="5721" fg:w="419"/><text x="38.1098%" y="223.50">be..</text></g><g><title>benchmark-022a91b58b3cfee0`egui::any::serializable::any_map::AnyMap&lt;Key&gt;::get_mut_or_insert_with (3 samples, 0.02%)</title><rect x="40.6327%" y="213" width="0.0199%" height="15" fill="rgb(242,14,37)" fg:x="6140" fg:w="3"/><text x="40.8827%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`hashbrown::rustc_entry::_&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (3 samples, 0.02%)</title><rect x="40.6327%" y="197" width="0.0199%" height="15" fill="rgb(246,228,12)" fg:x="6140" fg:w="3"/><text x="40.8827%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::any::serializable::any_map::AnyMap&lt;Key&gt;::insert (4 samples, 0.03%)</title><rect x="40.6525%" y="213" width="0.0265%" height="15" fill="rgb(213,55,15)" fg:x="6143" fg:w="4"/><text x="40.9025%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc (2 samples, 0.01%)</title><rect x="40.6657%" y="197" width="0.0132%" height="15" fill="rgb(209,9,3)" fg:x="6145" fg:w="2"/><text x="40.9157%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (2 samples, 0.01%)</title><rect x="40.6657%" y="181" width="0.0132%" height="15" fill="rgb(230,59,30)" fg:x="6145" fg:w="2"/><text x="40.9157%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::id::Id::with (2 samples, 0.01%)</title><rect x="40.6856%" y="213" width="0.0132%" height="15" fill="rgb(209,121,21)" fg:x="6148" fg:w="2"/><text x="40.9356%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (426 samples, 2.82%)</title><rect x="40.6988%" y="181" width="2.8191%" height="15" fill="rgb(220,109,13)" fg:x="6150" fg:w="426"/><text x="40.9488%" y="191.50">be..</text></g><g><title>benchmark-022a91b58b3cfee0`egui::painter::Painter::extend (427 samples, 2.83%)</title><rect x="40.6988%" y="213" width="2.8258%" height="15" fill="rgb(232,18,1)" fg:x="6150" fg:w="427"/><text x="40.9488%" y="223.50">be..</text></g><g><title>benchmark-022a91b58b3cfee0`egui::layers::PaintList::extend (427 samples, 2.83%)</title><rect x="40.6988%" y="197" width="2.8258%" height="15" fill="rgb(215,41,42)" fg:x="6150" fg:w="427"/><text x="40.9488%" y="207.50">be..</text></g><g><title>benchmark-022a91b58b3cfee0`egui::context::Context::layer_id_at (2 samples, 0.01%)</title><rect x="43.5378%" y="181" width="0.0132%" height="15" fill="rgb(224,123,36)" fg:x="6579" fg:w="2"/><text x="43.7878%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::context::CtxRef::interact (4 samples, 0.03%)</title><rect x="43.5378%" y="197" width="0.0265%" height="15" fill="rgb(240,125,3)" fg:x="6579" fg:w="4"/><text x="43.7878%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::context::CtxRef::interact_with_hovered (2 samples, 0.01%)</title><rect x="43.5511%" y="181" width="0.0132%" height="15" fill="rgb(205,98,50)" fg:x="6581" fg:w="2"/><text x="43.8011%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::ui::Ui::allocate_exact_size (9 samples, 0.06%)</title><rect x="43.5246%" y="213" width="0.0596%" height="15" fill="rgb(205,185,37)" fg:x="6577" fg:w="9"/><text x="43.7746%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::ui::Ui::allocate_space (3 samples, 0.02%)</title><rect x="43.5643%" y="197" width="0.0199%" height="15" fill="rgb(238,207,15)" fg:x="6583" fg:w="3"/><text x="43.8143%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`emath::align::Align2::align_size_within_rect (2 samples, 0.01%)</title><rect x="43.5709%" y="181" width="0.0132%" height="15" fill="rgb(213,199,42)" fg:x="6584" fg:w="2"/><text x="43.8209%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`benchmark::criterion_benchmark::lines_plot::_{{closure}} (127 samples, 0.84%)</title><rect x="47.0584%" y="181" width="0.8404%" height="15" fill="rgb(235,201,11)" fg:x="7111" fg:w="127"/><text x="47.3084%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (31 samples, 0.21%)</title><rect x="48.7724%" y="101" width="0.2051%" height="15" fill="rgb(207,46,11)" fg:x="7370" fg:w="31"/><text x="49.0224%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr (7 samples, 0.05%)</title><rect x="48.9776%" y="101" width="0.0463%" height="15" fill="rgb(241,35,35)" fg:x="7401" fg:w="7"/><text x="49.2276%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (194 samples, 1.28%)</title><rect x="47.9121%" y="165" width="1.2838%" height="15" fill="rgb(243,32,47)" fg:x="7240" fg:w="194"/><text x="48.1621%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (189 samples, 1.25%)</title><rect x="47.9452%" y="149" width="1.2507%" height="15" fill="rgb(247,202,23)" fg:x="7245" fg:w="189"/><text x="48.1952%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (180 samples, 1.19%)</title><rect x="48.0048%" y="133" width="1.1912%" height="15" fill="rgb(219,102,11)" fg:x="7254" fg:w="180"/><text x="48.2548%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (88 samples, 0.58%)</title><rect x="48.6136%" y="117" width="0.5824%" height="15" fill="rgb(243,110,44)" fg:x="7346" fg:w="88"/><text x="48.8636%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (26 samples, 0.17%)</title><rect x="49.0239%" y="101" width="0.1721%" height="15" fill="rgb(222,74,54)" fg:x="7408" fg:w="26"/><text x="49.2739%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`malloc (197 samples, 1.30%)</title><rect x="47.8989%" y="181" width="1.3037%" height="15" fill="rgb(216,99,12)" fg:x="7238" fg:w="197"/><text x="48.1489%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (796 samples, 5.27%)</title><rect x="43.9415%" y="197" width="5.2677%" height="15" fill="rgb(226,22,26)" fg:x="6640" fg:w="796"/><text x="44.1915%" y="207.50">benchm..</text></g><g><title>benchmark-022a91b58b3cfee0`__rdl_alloc (3 samples, 0.02%)</title><rect x="49.2092%" y="197" width="0.0199%" height="15" fill="rgb(217,163,10)" fg:x="7436" fg:w="3"/><text x="49.4592%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`benchmark::criterion_benchmark::lines_plot::_{{closure}} (89 samples, 0.59%)</title><rect x="49.2357%" y="197" width="0.5890%" height="15" fill="rgb(213,25,53)" fg:x="7440" fg:w="89"/><text x="49.4857%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (4 samples, 0.03%)</title><rect x="49.8246%" y="197" width="0.0265%" height="15" fill="rgb(252,105,26)" fg:x="7529" fg:w="4"/><text x="50.0746%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (24 samples, 0.16%)</title><rect x="49.9239%" y="181" width="0.1588%" height="15" fill="rgb(220,39,43)" fg:x="7544" fg:w="24"/><text x="50.1739%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (23 samples, 0.15%)</title><rect x="49.9305%" y="165" width="0.1522%" height="15" fill="rgb(229,68,48)" fg:x="7545" fg:w="23"/><text x="50.1805%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free (36 samples, 0.24%)</title><rect x="49.8511%" y="197" width="0.2382%" height="15" fill="rgb(252,8,32)" fg:x="7533" fg:w="36"/><text x="50.1011%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (31 samples, 0.21%)</title><rect x="50.5724%" y="165" width="0.2051%" height="15" fill="rgb(223,20,43)" fg:x="7642" fg:w="31"/><text x="50.8224%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (105 samples, 0.69%)</title><rect x="50.0893%" y="197" width="0.6949%" height="15" fill="rgb(229,81,49)" fg:x="7569" fg:w="105"/><text x="50.3393%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (57 samples, 0.38%)</title><rect x="50.4070%" y="181" width="0.3772%" height="15" fill="rgb(236,28,36)" fg:x="7617" fg:w="57"/><text x="50.6570%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc (4 samples, 0.03%)</title><rect x="50.7842%" y="197" width="0.0265%" height="15" fill="rgb(249,185,26)" fg:x="7674" fg:w="4"/><text x="51.0342%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::widgets::plot::items::Values::generate_points (1,095 samples, 7.25%)</title><rect x="43.5841%" y="213" width="7.2464%" height="15" fill="rgb(249,174,33)" fg:x="6586" fg:w="1095"/><text x="43.8341%" y="223.50">benchmark-..</text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (3 samples, 0.02%)</title><rect x="50.8107%" y="197" width="0.0199%" height="15" fill="rgb(233,201,37)" fg:x="7678" fg:w="3"/><text x="51.0607%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.01%)</title><rect x="50.8438%" y="165" width="0.0132%" height="15" fill="rgb(221,78,26)" fg:x="7683" fg:w="2"/><text x="51.0938%" y="175.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.01%)</title><rect x="50.8438%" y="149" width="0.0132%" height="15" fill="rgb(250,127,30)" fg:x="7683" fg:w="2"/><text x="51.0938%" y="159.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::finish_grow (2 samples, 0.01%)</title><rect x="50.8438%" y="133" width="0.0132%" height="15" fill="rgb(230,49,44)" fg:x="7683" fg:w="2"/><text x="51.0938%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc (2 samples, 0.01%)</title><rect x="50.8438%" y="117" width="0.0132%" height="15" fill="rgb(229,67,23)" fg:x="7683" fg:w="2"/><text x="51.0938%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (2 samples, 0.01%)</title><rect x="50.8438%" y="101" width="0.0132%" height="15" fill="rgb(249,83,47)" fg:x="7683" fg:w="2"/><text x="51.0938%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.01%)</title><rect x="50.8438%" y="85" width="0.0132%" height="15" fill="rgb(215,43,3)" fg:x="7683" fg:w="2"/><text x="51.0938%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.01%)</title><rect x="50.8438%" y="69" width="0.0132%" height="15" fill="rgb(238,154,13)" fg:x="7683" fg:w="2"/><text x="51.0938%" y="79.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::Formatter::pad_formatted_parts (2 samples, 0.01%)</title><rect x="50.8570%" y="149" width="0.0132%" height="15" fill="rgb(219,56,2)" fg:x="7685" fg:w="2"/><text x="51.1070%" y="159.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::finish_grow (3 samples, 0.02%)</title><rect x="50.8702%" y="101" width="0.0199%" height="15" fill="rgb(233,0,4)" fg:x="7687" fg:w="3"/><text x="51.1202%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`realloc (3 samples, 0.02%)</title><rect x="50.8702%" y="85" width="0.0199%" height="15" fill="rgb(235,30,7)" fg:x="7687" fg:w="3"/><text x="51.1202%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (3 samples, 0.02%)</title><rect x="50.8702%" y="69" width="0.0199%" height="15" fill="rgb(250,79,13)" fg:x="7687" fg:w="3"/><text x="51.1202%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (3 samples, 0.02%)</title><rect x="50.8702%" y="53" width="0.0199%" height="15" fill="rgb(211,146,34)" fg:x="7687" fg:w="3"/><text x="51.1202%" y="63.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (4 samples, 0.03%)</title><rect x="50.8702%" y="133" width="0.0265%" height="15" fill="rgb(228,22,38)" fg:x="7687" fg:w="4"/><text x="51.1202%" y="143.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.03%)</title><rect x="50.8702%" y="117" width="0.0265%" height="15" fill="rgb(235,168,5)" fg:x="7687" fg:w="4"/><text x="51.1202%" y="127.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::Formatter::write_formatted_parts (5 samples, 0.03%)</title><rect x="50.8702%" y="149" width="0.0331%" height="15" fill="rgb(221,155,16)" fg:x="7687" fg:w="5"/><text x="51.1202%" y="159.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::num::bignum::Big32x40::mul_pow2 (2 samples, 0.01%)</title><rect x="50.9629%" y="133" width="0.0132%" height="15" fill="rgb(215,215,53)" fg:x="7701" fg:w="2"/><text x="51.2129%" y="143.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::num::flt2dec::strategy::dragon::format_exact (12 samples, 0.08%)</title><rect x="50.9033%" y="149" width="0.0794%" height="15" fill="rgb(223,4,10)" fg:x="7692" fg:w="12"/><text x="51.1533%" y="159.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::num::flt2dec::strategy::grisu::format_exact_opt (6 samples, 0.04%)</title><rect x="50.9827%" y="149" width="0.0397%" height="15" fill="rgb(234,103,6)" fg:x="7704" fg:w="6"/><text x="51.2327%" y="159.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::fmt::format (28 samples, 0.19%)</title><rect x="50.8438%" y="197" width="0.1853%" height="15" fill="rgb(227,97,0)" fg:x="7683" fg:w="28"/><text x="51.0938%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::write (28 samples, 0.19%)</title><rect x="50.8438%" y="181" width="0.1853%" height="15" fill="rgb(234,150,53)" fg:x="7683" fg:w="28"/><text x="51.0938%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::float::float_to_decimal_common_exact (26 samples, 0.17%)</title><rect x="50.8570%" y="165" width="0.1721%" height="15" fill="rgb(228,201,54)" fg:x="7685" fg:w="26"/><text x="51.1070%" y="175.50"></text></g><g><title>benchmark-022a91b58b3cfee0`hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (2 samples, 0.01%)</title><rect x="51.0555%" y="133" width="0.0132%" height="15" fill="rgb(222,22,37)" fg:x="7715" fg:w="2"/><text x="51.3055%" y="143.50"></text></g><g><title>benchmark-022a91b58b3cfee0`epaint::text::fonts::Fonts::layout_multiline (6 samples, 0.04%)</title><rect x="51.0423%" y="181" width="0.0397%" height="15" fill="rgb(237,53,32)" fg:x="7713" fg:w="6"/><text x="51.2923%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`epaint::text::fonts::Fonts::layout_multiline_with_indentation_and_max_width (6 samples, 0.04%)</title><rect x="51.0423%" y="165" width="0.0397%" height="15" fill="rgb(233,25,53)" fg:x="7713" fg:w="6"/><text x="51.2923%" y="175.50"></text></g><g><title>benchmark-022a91b58b3cfee0`epaint::text::fonts::GalleyCache::layout (4 samples, 0.03%)</title><rect x="51.0555%" y="149" width="0.0265%" height="15" fill="rgb(210,40,34)" fg:x="7715" fg:w="4"/><text x="51.3055%" y="159.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::widgets::plot::items::rulers_at_value (39 samples, 0.26%)</title><rect x="50.8305%" y="213" width="0.2581%" height="15" fill="rgb(241,220,44)" fg:x="7681" fg:w="39"/><text x="51.0805%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`epaint::shape::Shape::text (9 samples, 0.06%)</title><rect x="51.0291%" y="197" width="0.0596%" height="15" fill="rgb(235,28,35)" fg:x="7711" fg:w="9"/><text x="51.2791%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;f64 as core::num::dec2flt::rawfp::RawFloat&gt;::from_int (3 samples, 0.02%)</title><rect x="51.2938%" y="197" width="0.0199%" height="15" fill="rgb(210,56,17)" fg:x="7751" fg:w="3"/><text x="51.5438%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;f64 as core::num::dec2flt::rawfp::RawFloat&gt;::short_fast_pow10 (4 samples, 0.03%)</title><rect x="51.3136%" y="197" width="0.0265%" height="15" fill="rgb(224,130,29)" fg:x="7754" fg:w="4"/><text x="51.5636%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.01%)</title><rect x="51.7239%" y="181" width="0.0132%" height="15" fill="rgb(235,212,8)" fg:x="7816" fg:w="2"/><text x="51.9739%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::float::_&lt;impl core::fmt::Display for f64&gt;::fmt (7 samples, 0.05%)</title><rect x="51.7371%" y="181" width="0.0463%" height="15" fill="rgb(223,33,50)" fg:x="7818" fg:w="7"/><text x="51.9871%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::float::float_to_decimal_common_exact (6 samples, 0.04%)</title><rect x="51.7835%" y="181" width="0.0397%" height="15" fill="rgb(219,149,13)" fg:x="7825" fg:w="6"/><text x="52.0335%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (33 samples, 0.22%)</title><rect x="52.3592%" y="165" width="0.2184%" height="15" fill="rgb(250,156,29)" fg:x="7912" fg:w="33"/><text x="52.6092%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (10 samples, 0.07%)</title><rect x="52.5114%" y="149" width="0.0662%" height="15" fill="rgb(216,193,19)" fg:x="7935" fg:w="10"/><text x="52.7614%" y="159.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::Formatter::write_formatted_parts (3 samples, 0.02%)</title><rect x="52.5842%" y="165" width="0.0199%" height="15" fill="rgb(216,135,14)" fg:x="7946" fg:w="3"/><text x="52.8342%" y="175.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::float::_&lt;impl core::fmt::Display for f64&gt;::fmt (10 samples, 0.07%)</title><rect x="52.6041%" y="165" width="0.0662%" height="15" fill="rgb(241,47,5)" fg:x="7949" fg:w="10"/><text x="52.8541%" y="175.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (12 samples, 0.08%)</title><rect x="53.7225%" y="149" width="0.0794%" height="15" fill="rgb(233,42,35)" fg:x="8118" fg:w="12"/><text x="53.9725%" y="159.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::Formatter::pad_formatted_parts (24 samples, 0.16%)</title><rect x="53.8019%" y="149" width="0.1588%" height="15" fill="rgb(231,13,6)" fg:x="8130" fg:w="24"/><text x="54.0519%" y="159.50"></text></g><g><title>benchmark-022a91b58b3cfee0`__rdl_alloc (3 samples, 0.02%)</title><rect x="54.9533%" y="101" width="0.0199%" height="15" fill="rgb(207,181,40)" fg:x="8304" fg:w="3"/><text x="55.2033%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (8 samples, 0.05%)</title><rect x="55.2048%" y="69" width="0.0529%" height="15" fill="rgb(254,173,49)" fg:x="8342" fg:w="8"/><text x="55.4548%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (11 samples, 0.07%)</title><rect x="55.4364%" y="53" width="0.0728%" height="15" fill="rgb(221,1,38)" fg:x="8377" fg:w="11"/><text x="55.6864%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (406 samples, 2.69%)</title><rect x="55.2578%" y="69" width="2.6868%" height="15" fill="rgb(206,124,46)" fg:x="8350" fg:w="406"/><text x="55.5078%" y="79.50">li..</text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (368 samples, 2.44%)</title><rect x="55.5092%" y="53" width="2.4353%" height="15" fill="rgb(249,21,11)" fg:x="8388" fg:w="368"/><text x="55.7592%" y="63.50">li..</text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (350 samples, 2.32%)</title><rect x="55.6284%" y="37" width="2.3162%" height="15" fill="rgb(222,201,40)" fg:x="8406" fg:w="350"/><text x="55.8784%" y="47.50">l..</text></g><g><title>libsystem_malloc.dylib`malloc (431 samples, 2.85%)</title><rect x="55.1453%" y="85" width="2.8522%" height="15" fill="rgb(235,61,29)" fg:x="8333" fg:w="431"/><text x="55.3953%" y="95.50">li..</text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.05%)</title><rect x="57.9445%" y="69" width="0.0529%" height="15" fill="rgb(219,207,3)" fg:x="8756" fg:w="8"/><text x="58.1945%" y="79.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::finish_grow (463 samples, 3.06%)</title><rect x="54.9798%" y="101" width="3.0640%" height="15" fill="rgb(222,56,46)" fg:x="8308" fg:w="463"/><text x="55.2298%" y="111.50">ben..</text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (7 samples, 0.05%)</title><rect x="57.9975%" y="85" width="0.0463%" height="15" fill="rgb(239,76,54)" fg:x="8764" fg:w="7"/><text x="58.2475%" y="95.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (496 samples, 3.28%)</title><rect x="54.7879%" y="117" width="3.2824%" height="15" fill="rgb(231,124,27)" fg:x="8279" fg:w="496"/><text x="55.0379%" y="127.50">ben..</text></g><g><title>libsystem_malloc.dylib`malloc (4 samples, 0.03%)</title><rect x="58.0438%" y="101" width="0.0265%" height="15" fill="rgb(249,195,6)" fg:x="8771" fg:w="4"/><text x="58.2938%" y="111.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::finish_grow (2 samples, 0.01%)</title><rect x="58.0703%" y="117" width="0.0132%" height="15" fill="rgb(237,174,47)" fg:x="8775" fg:w="2"/><text x="58.3203%" y="127.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (622 samples, 4.12%)</title><rect x="54.4041%" y="133" width="4.1162%" height="15" fill="rgb(206,201,31)" fg:x="8221" fg:w="622"/><text x="54.6541%" y="143.50">benc..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (66 samples, 0.44%)</title><rect x="58.0835%" y="117" width="0.4368%" height="15" fill="rgb(231,57,52)" fg:x="8777" fg:w="66"/><text x="58.3335%" y="127.50"></text></g><g><title>benchmark-022a91b58b3cfee0`DYLD-STUB$$memcpy (2 samples, 0.01%)</title><rect x="58.5203%" y="133" width="0.0132%" height="15" fill="rgb(248,177,22)" fg:x="8843" fg:w="2"/><text x="58.7703%" y="143.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.01%)</title><rect x="58.5335%" y="133" width="0.0132%" height="15" fill="rgb(215,211,37)" fg:x="8845" fg:w="2"/><text x="58.7835%" y="143.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::Formatter::write_formatted_parts (703 samples, 4.65%)</title><rect x="53.9607%" y="149" width="4.6522%" height="15" fill="rgb(241,128,51)" fg:x="8154" fg:w="703"/><text x="54.2107%" y="159.50">bench..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (10 samples, 0.07%)</title><rect x="58.5468%" y="133" width="0.0662%" height="15" fill="rgb(227,165,31)" fg:x="8847" fg:w="10"/><text x="58.7968%" y="143.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::num::flt2dec::strategy::grisu::format_exact_opt (550 samples, 3.64%)</title><rect x="58.6129%" y="149" width="3.6397%" height="15" fill="rgb(228,167,24)" fg:x="8857" fg:w="550"/><text x="58.8629%" y="159.50">benc..</text></g><g><title>benchmark-022a91b58b3cfee0`core::num::flt2dec::strategy::grisu::format_exact_opt::possibly_round (5 samples, 0.03%)</title><rect x="62.2527%" y="149" width="0.0331%" height="15" fill="rgb(228,143,12)" fg:x="9407" fg:w="5"/><text x="62.5027%" y="159.50"></text></g><g><title>benchmark-022a91b58b3cfee0`DYLD-STUB$$memset (2 samples, 0.01%)</title><rect x="62.2858%" y="133" width="0.0132%" height="15" fill="rgb(249,149,8)" fg:x="9412" fg:w="2"/><text x="62.5358%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (6 samples, 0.04%)</title><rect x="62.6365%" y="117" width="0.0397%" height="15" fill="rgb(243,35,44)" fg:x="9465" fg:w="6"/><text x="62.8865%" y="127.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::num::flt2dec::strategy::grisu::format_exact_opt::possibly_round (58 samples, 0.38%)</title><rect x="62.2990%" y="133" width="0.3838%" height="15" fill="rgb(246,89,9)" fg:x="9414" fg:w="58"/><text x="62.5490%" y="143.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::float::float_to_decimal_common_exact (1,514 samples, 10.02%)</title><rect x="52.6702%" y="165" width="10.0192%" height="15" fill="rgb(233,213,13)" fg:x="7959" fg:w="1514"/><text x="52.9202%" y="175.50">benchmark-022a..</text></g><g><title>benchmark-022a91b58b3cfee0`core::num::flt2dec::strategy::grisu::format_exact_opt (61 samples, 0.40%)</title><rect x="62.2858%" y="149" width="0.4037%" height="15" fill="rgb(233,141,41)" fg:x="9412" fg:w="61"/><text x="62.5358%" y="159.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::num::flt2dec::strategy::grisu::format_exact_opt (3 samples, 0.02%)</title><rect x="62.6894%" y="165" width="0.0199%" height="15" fill="rgb(239,167,4)" fg:x="9473" fg:w="3"/><text x="62.9394%" y="175.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::fmt::format (1,721 samples, 11.39%)</title><rect x="51.3401%" y="197" width="11.3891%" height="15" fill="rgb(209,217,16)" fg:x="7758" fg:w="1721"/><text x="51.5901%" y="207.50">benchmark-022a91b..</text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::write (1,648 samples, 10.91%)</title><rect x="51.8232%" y="181" width="10.9060%" height="15" fill="rgb(219,88,35)" fg:x="7831" fg:w="1648"/><text x="52.0732%" y="191.50">benchmark-022a91..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.02%)</title><rect x="62.7093%" y="165" width="0.0199%" height="15" fill="rgb(220,193,23)" fg:x="9476" fg:w="3"/><text x="62.9593%" y="175.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::ArgumentV1::from_usize (6 samples, 0.04%)</title><rect x="62.7291%" y="197" width="0.0397%" height="15" fill="rgb(230,90,52)" fg:x="9479" fg:w="6"/><text x="62.9791%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;f64 as core::num::dec2flt::rawfp::RawFloat&gt;::from_int (14 samples, 0.09%)</title><rect x="64.2115%" y="181" width="0.0926%" height="15" fill="rgb(252,106,19)" fg:x="9703" fg:w="14"/><text x="64.4615%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;f64 as core::num::dec2flt::rawfp::RawFloat&gt;::short_fast_pow10 (7 samples, 0.05%)</title><rect x="64.3041%" y="181" width="0.0463%" height="15" fill="rgb(206,74,20)" fg:x="9717" fg:w="7"/><text x="64.5541%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::num::dec2flt::extract_sign (9 samples, 0.06%)</title><rect x="64.3505%" y="181" width="0.0596%" height="15" fill="rgb(230,138,44)" fg:x="9724" fg:w="9"/><text x="64.6005%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::num::dec2flt::dec2flt (302 samples, 2.00%)</title><rect x="62.7688%" y="197" width="1.9985%" height="15" fill="rgb(235,182,43)" fg:x="9485" fg:w="302"/><text x="63.0188%" y="207.50">b..</text></g><g><title>benchmark-022a91b58b3cfee0`core::num::dec2flt::parse::parse_decimal (54 samples, 0.36%)</title><rect x="64.4100%" y="181" width="0.3574%" height="15" fill="rgb(242,16,51)" fg:x="9733" fg:w="54"/><text x="64.6600%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::num::dec2flt::extract_sign (3 samples, 0.02%)</title><rect x="64.7674%" y="197" width="0.0199%" height="15" fill="rgb(248,9,4)" fg:x="9787" fg:w="3"/><text x="65.0174%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::num::dec2flt::parse::parse_decimal (6 samples, 0.04%)</title><rect x="64.7872%" y="197" width="0.0397%" height="15" fill="rgb(210,31,22)" fg:x="9790" fg:w="6"/><text x="65.0372%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (18 samples, 0.12%)</title><rect x="64.8269%" y="197" width="0.1191%" height="15" fill="rgb(239,54,39)" fg:x="9796" fg:w="18"/><text x="65.0769%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (95 samples, 0.63%)</title><rect x="65.2174%" y="181" width="0.6287%" height="15" fill="rgb(230,99,41)" fg:x="9855" fg:w="95"/><text x="65.4674%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (85 samples, 0.56%)</title><rect x="65.2836%" y="165" width="0.5625%" height="15" fill="rgb(253,106,12)" fg:x="9865" fg:w="85"/><text x="65.5336%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free (145 samples, 0.96%)</title><rect x="64.9461%" y="197" width="0.9596%" height="15" fill="rgb(213,46,41)" fg:x="9814" fg:w="145"/><text x="65.1961%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (9 samples, 0.06%)</title><rect x="65.8461%" y="181" width="0.0596%" height="15" fill="rgb(215,133,35)" fg:x="9950" fg:w="9"/><text x="66.0961%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (177 samples, 1.17%)</title><rect x="65.9056%" y="197" width="1.1713%" height="15" fill="rgb(213,28,5)" fg:x="9959" fg:w="177"/><text x="66.1556%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`emath::round_to_decimals (2,418 samples, 16.00%)</title><rect x="51.0886%" y="213" width="16.0016%" height="15" fill="rgb(215,77,49)" fg:x="7720" fg:w="2418"/><text x="51.3386%" y="223.50">benchmark-022a91b58b3cfee..</text></g><g><title>libsystem_malloc.dylib`szone_size (2 samples, 0.01%)</title><rect x="67.0770%" y="197" width="0.0132%" height="15" fill="rgb(248,100,22)" fg:x="10136" fg:w="2"/><text x="67.3270%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;epaint::text::fonts::LayoutJob as core::hash::Hash&gt;::hash (2 samples, 0.01%)</title><rect x="68.2549%" y="197" width="0.0132%" height="15" fill="rgb(208,67,9)" fg:x="10314" fg:w="2"/><text x="68.5049%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`__rdl_dealloc (10 samples, 0.07%)</title><rect x="68.2681%" y="197" width="0.0662%" height="15" fill="rgb(219,133,21)" fg:x="10316" fg:w="10"/><text x="68.5181%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`__rust_dealloc (5 samples, 0.03%)</title><rect x="68.3343%" y="197" width="0.0331%" height="15" fill="rgb(246,46,29)" fg:x="10326" fg:w="5"/><text x="68.5843%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;epaint::text::fonts::LayoutJob as core::hash::Hash&gt;::hash (45 samples, 0.30%)</title><rect x="69.2740%" y="181" width="0.2978%" height="15" fill="rgb(246,185,52)" fg:x="10468" fg:w="45"/><text x="69.5240%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`DYLD-STUB$$memcmp (4 samples, 0.03%)</title><rect x="69.5718%" y="181" width="0.0265%" height="15" fill="rgb(252,136,11)" fg:x="10513" fg:w="4"/><text x="69.8218%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (175 samples, 1.16%)</title><rect x="69.5983%" y="181" width="1.1581%" height="15" fill="rgb(219,138,53)" fg:x="10517" fg:w="175"/><text x="69.8483%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (42 samples, 0.28%)</title><rect x="70.4785%" y="165" width="0.2779%" height="15" fill="rgb(211,51,23)" fg:x="10650" fg:w="42"/><text x="70.7285%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (25 samples, 0.17%)</title><rect x="70.7564%" y="181" width="0.1654%" height="15" fill="rgb(247,221,28)" fg:x="10692" fg:w="25"/><text x="71.0064%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (80 samples, 0.53%)</title><rect x="71.2329%" y="165" width="0.5294%" height="15" fill="rgb(251,222,45)" fg:x="10764" fg:w="80"/><text x="71.4829%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (64 samples, 0.42%)</title><rect x="71.3388%" y="149" width="0.4235%" height="15" fill="rgb(217,162,53)" fg:x="10780" fg:w="64"/><text x="71.5888%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free (134 samples, 0.89%)</title><rect x="70.9218%" y="181" width="0.8868%" height="15" fill="rgb(229,93,14)" fg:x="10717" fg:w="134"/><text x="71.1718%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (7 samples, 0.05%)</title><rect x="71.7623%" y="165" width="0.0463%" height="15" fill="rgb(209,67,49)" fg:x="10844" fg:w="7"/><text x="72.0123%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (181 samples, 1.20%)</title><rect x="71.8086%" y="181" width="1.1978%" height="15" fill="rgb(213,87,29)" fg:x="10851" fg:w="181"/><text x="72.0586%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`epaint::text::fonts::GalleyCache::layout (705 samples, 4.67%)</title><rect x="68.3674%" y="197" width="4.6655%" height="15" fill="rgb(205,151,52)" fg:x="10331" fg:w="705"/><text x="68.6174%" y="207.50">bench..</text></g><g><title>libsystem_platform.dylib`_platform_memcmp (3 samples, 0.02%)</title><rect x="73.0130%" y="181" width="0.0199%" height="15" fill="rgb(253,215,39)" fg:x="11033" fg:w="3"/><text x="73.2630%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (4 samples, 0.03%)</title><rect x="73.0329%" y="197" width="0.0265%" height="15" fill="rgb(221,220,41)" fg:x="11036" fg:w="4"/><text x="73.2829%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free (7 samples, 0.05%)</title><rect x="73.0594%" y="197" width="0.0463%" height="15" fill="rgb(218,133,21)" fg:x="11040" fg:w="7"/><text x="73.3094%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`epaint::text::fonts::Fonts::layout_single_line (920 samples, 6.09%)</title><rect x="67.0902%" y="213" width="6.0883%" height="15" fill="rgb(221,193,43)" fg:x="10138" fg:w="920"/><text x="67.3402%" y="223.50">benchmar..</text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (11 samples, 0.07%)</title><rect x="73.1057%" y="197" width="0.0728%" height="15" fill="rgb(240,128,52)" fg:x="11047" fg:w="11"/><text x="73.3557%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (3 samples, 0.02%)</title><rect x="73.1851%" y="213" width="0.0199%" height="15" fill="rgb(253,114,12)" fg:x="11059" fg:w="3"/><text x="73.4351%" y="223.50"></text></g><g><title>libsystem_m.dylib`0x00007fff6b1acc70 (767 samples, 5.08%)</title><rect x="73.2116%" y="213" width="5.0758%" height="15" fill="rgb(215,223,47)" fg:x="11063" fg:w="767"/><text x="73.4616%" y="223.50">libsys..</text></g><g><title>libsystem_m.dylib`roundf (249 samples, 1.65%)</title><rect x="78.2873%" y="213" width="1.6478%" height="15" fill="rgb(248,225,23)" fg:x="11830" fg:w="249"/><text x="78.5373%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (4 samples, 0.03%)</title><rect x="79.9351%" y="213" width="0.0265%" height="15" fill="rgb(250,108,0)" fg:x="12079" fg:w="4"/><text x="80.1851%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (25 samples, 0.17%)</title><rect x="80.1204%" y="197" width="0.1654%" height="15" fill="rgb(228,208,7)" fg:x="12107" fg:w="25"/><text x="80.3704%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (24 samples, 0.16%)</title><rect x="80.1271%" y="181" width="0.1588%" height="15" fill="rgb(244,45,10)" fg:x="12108" fg:w="24"/><text x="80.3771%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free (50 samples, 0.33%)</title><rect x="79.9616%" y="213" width="0.3309%" height="15" fill="rgb(207,125,25)" fg:x="12083" fg:w="50"/><text x="80.2116%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (43 samples, 0.28%)</title><rect x="80.2925%" y="213" width="0.2846%" height="15" fill="rgb(210,195,18)" fg:x="12133" fg:w="43"/><text x="80.5425%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc (2 samples, 0.01%)</title><rect x="80.5771%" y="213" width="0.0132%" height="15" fill="rgb(249,80,12)" fg:x="12176" fg:w="2"/><text x="80.8271%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (18 samples, 0.12%)</title><rect x="80.5903%" y="213" width="0.1191%" height="15" fill="rgb(221,65,9)" fg:x="12178" fg:w="18"/><text x="80.8403%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;egui::widgets::plot::Plot as egui::widgets::Widget&gt;::ui (11,985 samples, 79.31%)</title><rect x="2.2566%" y="229" width="79.3131%" height="15" fill="rgb(235,49,36)" fg:x="341" fg:w="11985"/><text x="2.5066%" y="239.50">benchmark-022a91b58b3cfee0`&lt;egui::widgets::plot::Plot as egui::widgets::Widget&gt;::ui</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (130 samples, 0.86%)</title><rect x="80.7094%" y="213" width="0.8603%" height="15" fill="rgb(225,32,20)" fg:x="12196" fg:w="130"/><text x="80.9594%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;egui::widgets::plot::items::Line as egui::widgets::plot::items::PlotItem&gt;::closest (2 samples, 0.01%)</title><rect x="81.5697%" y="229" width="0.0132%" height="15" fill="rgb(215,141,46)" fg:x="12326" fg:w="2"/><text x="81.8197%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;egui::widgets::plot::items::Line as egui::widgets::plot::items::PlotItem&gt;::get_bounds (2 samples, 0.01%)</title><rect x="81.5830%" y="229" width="0.0132%" height="15" fill="rgb(250,160,47)" fg:x="12328" fg:w="2"/><text x="81.8330%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;egui::widgets::plot::items::Line as egui::widgets::plot::items::PlotItem&gt;::get_shapes (4 samples, 0.03%)</title><rect x="81.5962%" y="229" width="0.0265%" height="15" fill="rgb(216,222,40)" fg:x="12330" fg:w="4"/><text x="81.8462%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;egui::widgets::plot::items::Line as egui::widgets::plot::items::PlotItem&gt;::series_mut (2 samples, 0.01%)</title><rect x="81.6227%" y="229" width="0.0132%" height="15" fill="rgb(234,217,39)" fg:x="12334" fg:w="2"/><text x="81.8727%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;epaint::color::Color32 as core::convert::From&lt;epaint::color::Rgba&gt;&gt;::from (2 samples, 0.01%)</title><rect x="81.6359%" y="229" width="0.0132%" height="15" fill="rgb(207,178,40)" fg:x="12336" fg:w="2"/><text x="81.8859%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`DYLD-STUB$$floor (4 samples, 0.03%)</title><rect x="81.6491%" y="229" width="0.0265%" height="15" fill="rgb(221,136,13)" fg:x="12338" fg:w="4"/><text x="81.8991%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`DYLD-STUB$$memcpy (2 samples, 0.01%)</title><rect x="81.6756%" y="229" width="0.0132%" height="15" fill="rgb(249,199,10)" fg:x="12342" fg:w="2"/><text x="81.9256%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`DYLD-STUB$$memmove (9 samples, 0.06%)</title><rect x="81.6888%" y="229" width="0.0596%" height="15" fill="rgb(249,222,13)" fg:x="12344" fg:w="9"/><text x="81.9388%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`__rdl_alloc (2 samples, 0.01%)</title><rect x="81.8212%" y="213" width="0.0132%" height="15" fill="rgb(244,185,38)" fg:x="12364" fg:w="2"/><text x="82.0712%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;epaint::color::Rgba as core::convert::From&lt;epaint::color::Hsva&gt;&gt;::from (50 samples, 0.33%)</title><rect x="82.1918%" y="181" width="0.3309%" height="15" fill="rgb(236,202,9)" fg:x="12420" fg:w="50"/><text x="82.4418%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`DYLD-STUB$$truncf (4 samples, 0.03%)</title><rect x="82.5227%" y="181" width="0.0265%" height="15" fill="rgb(250,229,37)" fg:x="12470" fg:w="4"/><text x="82.7727%" y="191.50"></text></g><g><title>libsystem_m.dylib`floorf (4 samples, 0.03%)</title><rect x="82.5491%" y="181" width="0.0265%" height="15" fill="rgb(206,174,23)" fg:x="12474" fg:w="4"/><text x="82.7991%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;epaint::color::Color32 as core::convert::From&lt;epaint::color::Hsva&gt;&gt;::from (62 samples, 0.41%)</title><rect x="82.1918%" y="197" width="0.4103%" height="15" fill="rgb(211,33,43)" fg:x="12420" fg:w="62"/><text x="82.4418%" y="207.50"></text></g><g><title>libsystem_m.dylib`truncf (4 samples, 0.03%)</title><rect x="82.5756%" y="181" width="0.0265%" height="15" fill="rgb(245,58,50)" fg:x="12478" fg:w="4"/><text x="82.8256%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;epaint::color::Color32 as core::convert::From&lt;epaint::color::Rgba&gt;&gt;::from (70 samples, 0.46%)</title><rect x="82.6021%" y="197" width="0.4632%" height="15" fill="rgb(244,68,36)" fg:x="12482" fg:w="70"/><text x="82.8521%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`DYLD-STUB$$powf (2 samples, 0.01%)</title><rect x="83.0653%" y="197" width="0.0132%" height="15" fill="rgb(232,229,15)" fg:x="12552" fg:w="2"/><text x="83.3153%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`DYLD-STUB$$roundf (2 samples, 0.01%)</title><rect x="83.0786%" y="197" width="0.0132%" height="15" fill="rgb(254,30,23)" fg:x="12554" fg:w="2"/><text x="83.3286%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`__rdl_realloc (2 samples, 0.01%)</title><rect x="83.0984%" y="181" width="0.0132%" height="15" fill="rgb(235,160,14)" fg:x="12557" fg:w="2"/><text x="83.3484%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`__rdl_realloc (3 samples, 0.02%)</title><rect x="83.1183%" y="165" width="0.0199%" height="15" fill="rgb(212,155,44)" fg:x="12560" fg:w="3"/><text x="83.3683%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc (2 samples, 0.01%)</title><rect x="83.1381%" y="165" width="0.0132%" height="15" fill="rgb(226,2,50)" fg:x="12563" fg:w="2"/><text x="83.3881%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (2 samples, 0.01%)</title><rect x="83.1381%" y="149" width="0.0132%" height="15" fill="rgb(234,177,6)" fg:x="12563" fg:w="2"/><text x="83.3881%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.01%)</title><rect x="83.1381%" y="133" width="0.0132%" height="15" fill="rgb(217,24,9)" fg:x="12563" fg:w="2"/><text x="83.3881%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.01%)</title><rect x="83.1381%" y="117" width="0.0132%" height="15" fill="rgb(220,13,46)" fg:x="12563" fg:w="2"/><text x="83.3881%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.04%)</title><rect x="83.1646%" y="117" width="0.0397%" height="15" fill="rgb(239,221,27)" fg:x="12567" fg:w="6"/><text x="83.4146%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.01%)</title><rect x="83.1911%" y="101" width="0.0132%" height="15" fill="rgb(222,198,25)" fg:x="12571" fg:w="2"/><text x="83.4411%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`small_try_realloc_in_place (2 samples, 0.01%)</title><rect x="83.2043%" y="117" width="0.0132%" height="15" fill="rgb(211,99,13)" fg:x="12573" fg:w="2"/><text x="83.4543%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (6 samples, 0.04%)</title><rect x="83.2241%" y="101" width="0.0397%" height="15" fill="rgb(232,111,31)" fg:x="12576" fg:w="6"/><text x="83.4741%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (4 samples, 0.03%)</title><rect x="83.2374%" y="85" width="0.0265%" height="15" fill="rgb(245,82,37)" fg:x="12578" fg:w="4"/><text x="83.4874%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr (2 samples, 0.01%)</title><rect x="83.2506%" y="69" width="0.0132%" height="15" fill="rgb(227,149,46)" fg:x="12580" fg:w="2"/><text x="83.5006%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (12 samples, 0.08%)</title><rect x="83.2175%" y="117" width="0.0794%" height="15" fill="rgb(218,36,50)" fg:x="12575" fg:w="12"/><text x="83.4675%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.03%)</title><rect x="83.2638%" y="101" width="0.0331%" height="15" fill="rgb(226,80,48)" fg:x="12582" fg:w="5"/><text x="83.5138%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.01%)</title><rect x="83.2837%" y="85" width="0.0132%" height="15" fill="rgb(238,224,15)" fg:x="12585" fg:w="2"/><text x="83.5337%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (23 samples, 0.15%)</title><rect x="83.1646%" y="133" width="0.1522%" height="15" fill="rgb(241,136,10)" fg:x="12567" fg:w="23"/><text x="83.4146%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (26 samples, 0.17%)</title><rect x="83.1513%" y="149" width="0.1721%" height="15" fill="rgb(208,32,45)" fg:x="12565" fg:w="26"/><text x="83.4013%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`realloc (29 samples, 0.19%)</title><rect x="83.1513%" y="165" width="0.1919%" height="15" fill="rgb(207,135,9)" fg:x="12565" fg:w="29"/><text x="83.4013%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (3 samples, 0.02%)</title><rect x="83.3234%" y="149" width="0.0199%" height="15" fill="rgb(206,86,44)" fg:x="12591" fg:w="3"/><text x="83.5734%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.01%)</title><rect x="83.3300%" y="133" width="0.0132%" height="15" fill="rgb(245,177,15)" fg:x="12592" fg:w="2"/><text x="83.5800%" y="143.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (39 samples, 0.26%)</title><rect x="83.0918%" y="197" width="0.2581%" height="15" fill="rgb(206,64,50)" fg:x="12556" fg:w="39"/><text x="83.3418%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::finish_grow (36 samples, 0.24%)</title><rect x="83.1116%" y="181" width="0.2382%" height="15" fill="rgb(234,36,40)" fg:x="12559" fg:w="36"/><text x="83.3616%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`epaint::color::Hsva::new (3 samples, 0.02%)</title><rect x="83.3499%" y="197" width="0.0199%" height="15" fill="rgb(213,64,8)" fg:x="12595" fg:w="3"/><text x="83.5999%" y="207.50"></text></g><g><title>libsystem_m.dylib`0x00007fff6b1acc70 (116 samples, 0.77%)</title><rect x="83.3697%" y="197" width="0.7677%" height="15" fill="rgb(210,75,36)" fg:x="12598" fg:w="116"/><text x="83.6197%" y="207.50"></text></g><g><title>libsystem_m.dylib`roundf (25 samples, 0.17%)</title><rect x="84.1374%" y="197" width="0.1654%" height="15" fill="rgb(229,88,21)" fg:x="12714" fg:w="25"/><text x="84.3874%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (5 samples, 0.03%)</title><rect x="84.3491%" y="165" width="0.0331%" height="15" fill="rgb(252,204,47)" fg:x="12746" fg:w="5"/><text x="84.5991%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (14 samples, 0.09%)</title><rect x="85.0506%" y="133" width="0.0926%" height="15" fill="rgb(208,77,27)" fg:x="12852" fg:w="14"/><text x="85.3006%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (160 samples, 1.06%)</title><rect x="84.3822%" y="165" width="1.0588%" height="15" fill="rgb(221,76,26)" fg:x="12751" fg:w="160"/><text x="84.6322%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (157 samples, 1.04%)</title><rect x="84.4021%" y="149" width="1.0390%" height="15" fill="rgb(225,139,18)" fg:x="12754" fg:w="157"/><text x="84.6521%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (45 samples, 0.30%)</title><rect x="85.1433%" y="133" width="0.2978%" height="15" fill="rgb(230,137,11)" fg:x="12866" fg:w="45"/><text x="85.3933%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (4 samples, 0.03%)</title><rect x="85.4146%" y="117" width="0.0265%" height="15" fill="rgb(212,28,1)" fg:x="12907" fg:w="4"/><text x="85.6646%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (171 samples, 1.13%)</title><rect x="84.3161%" y="181" width="1.1316%" height="15" fill="rgb(248,164,17)" fg:x="12741" fg:w="171"/><text x="84.5661%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc (174 samples, 1.15%)</title><rect x="84.3028%" y="197" width="1.1515%" height="15" fill="rgb(222,171,42)" fg:x="12739" fg:w="174"/><text x="84.5528%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::widgets::plot::Plot::line (576 samples, 3.81%)</title><rect x="81.8344%" y="213" width="3.8118%" height="15" fill="rgb(243,84,45)" fg:x="12366" fg:w="576"/><text x="82.0844%" y="223.50">benc..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (29 samples, 0.19%)</title><rect x="85.4543%" y="197" width="0.1919%" height="15" fill="rgb(252,49,23)" fg:x="12913" fg:w="29"/><text x="85.7043%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::widgets::plot::Plot::new (3 samples, 0.02%)</title><rect x="85.6462%" y="213" width="0.0199%" height="15" fill="rgb(215,19,7)" fg:x="12942" fg:w="3"/><text x="85.8962%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::write (3 samples, 0.02%)</title><rect x="85.6462%" y="197" width="0.0199%" height="15" fill="rgb(238,81,41)" fg:x="12942" fg:w="3"/><text x="85.8962%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.01%)</title><rect x="85.6528%" y="181" width="0.0132%" height="15" fill="rgb(210,199,37)" fg:x="12943" fg:w="2"/><text x="85.9028%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.01%)</title><rect x="85.6528%" y="165" width="0.0132%" height="15" fill="rgb(244,192,49)" fg:x="12943" fg:w="2"/><text x="85.9028%" y="175.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::finish_grow (2 samples, 0.01%)</title><rect x="85.6528%" y="149" width="0.0132%" height="15" fill="rgb(226,211,11)" fg:x="12943" fg:w="2"/><text x="85.9028%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc (2 samples, 0.01%)</title><rect x="85.6528%" y="133" width="0.0132%" height="15" fill="rgb(236,162,54)" fg:x="12943" fg:w="2"/><text x="85.9028%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (2 samples, 0.01%)</title><rect x="85.6528%" y="117" width="0.0132%" height="15" fill="rgb(220,229,9)" fg:x="12943" fg:w="2"/><text x="85.9028%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.01%)</title><rect x="85.6528%" y="101" width="0.0132%" height="15" fill="rgb(250,87,22)" fg:x="12943" fg:w="2"/><text x="85.9028%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.01%)</title><rect x="85.6528%" y="85" width="0.0132%" height="15" fill="rgb(239,43,17)" fg:x="12943" fg:w="2"/><text x="85.9028%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.01%)</title><rect x="85.6528%" y="69" width="0.0132%" height="15" fill="rgb(231,177,25)" fg:x="12943" fg:w="2"/><text x="85.9028%" y="79.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::widgets::plot::items::Line::new (19 samples, 0.13%)</title><rect x="85.6661%" y="213" width="0.1257%" height="15" fill="rgb(219,179,1)" fg:x="12945" fg:w="19"/><text x="85.9161%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (4 samples, 0.03%)</title><rect x="85.8712%" y="181" width="0.0265%" height="15" fill="rgb(238,219,53)" fg:x="12976" fg:w="4"/><text x="86.1212%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (148 samples, 0.98%)</title><rect x="85.8381%" y="197" width="0.9794%" height="15" fill="rgb(232,167,36)" fg:x="12971" fg:w="148"/><text x="86.0881%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (139 samples, 0.92%)</title><rect x="85.8977%" y="181" width="0.9199%" height="15" fill="rgb(244,19,51)" fg:x="12980" fg:w="139"/><text x="86.1477%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (133 samples, 0.88%)</title><rect x="85.9374%" y="165" width="0.8802%" height="15" fill="rgb(224,6,22)" fg:x="12986" fg:w="133"/><text x="86.1874%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (56 samples, 0.37%)</title><rect x="86.4470%" y="149" width="0.3706%" height="15" fill="rgb(224,145,5)" fg:x="13063" fg:w="56"/><text x="86.6970%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (12 samples, 0.08%)</title><rect x="86.7381%" y="133" width="0.0794%" height="15" fill="rgb(234,130,49)" fg:x="13107" fg:w="12"/><text x="86.9881%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc (159 samples, 1.05%)</title><rect x="85.7918%" y="213" width="1.0522%" height="15" fill="rgb(254,6,2)" fg:x="12964" fg:w="159"/><text x="86.0418%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (4 samples, 0.03%)</title><rect x="86.8176%" y="197" width="0.0265%" height="15" fill="rgb(208,96,46)" fg:x="13119" fg:w="4"/><text x="87.0676%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`benchmark::criterion_benchmark::lines_plot (792 samples, 5.24%)</title><rect x="81.7616%" y="229" width="5.2412%" height="15" fill="rgb(239,3,39)" fg:x="12355" fg:w="792"/><text x="82.0116%" y="239.50">benchm..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (23 samples, 0.15%)</title><rect x="86.8506%" y="213" width="0.1522%" height="15" fill="rgb(233,210,1)" fg:x="13124" fg:w="23"/><text x="87.1006%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::write (7 samples, 0.05%)</title><rect x="87.0028%" y="229" width="0.0463%" height="15" fill="rgb(244,137,37)" fg:x="13147" fg:w="7"/><text x="87.2528%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::ptr::drop_in_place&lt;&lt;egui::widgets::plot::items::Line as egui::widgets::plot::items::PlotItem&gt;::closest::{{closure}}::{{closure}}&gt; (3 samples, 0.02%)</title><rect x="87.0492%" y="229" width="0.0199%" height="15" fill="rgb(240,136,2)" fg:x="13154" fg:w="3"/><text x="87.2992%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::painter::Painter::add (2 samples, 0.01%)</title><rect x="87.0756%" y="213" width="0.0132%" height="15" fill="rgb(239,18,37)" fg:x="13158" fg:w="2"/><text x="87.3256%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.01%)</title><rect x="87.0756%" y="197" width="0.0132%" height="15" fill="rgb(218,185,22)" fg:x="13158" fg:w="2"/><text x="87.3256%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::containers::frame::Frame::begin (5 samples, 0.03%)</title><rect x="87.0690%" y="229" width="0.0331%" height="15" fill="rgb(225,218,4)" fg:x="13157" fg:w="5"/><text x="87.3190%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::ui::Ui::child_ui (2 samples, 0.01%)</title><rect x="87.0889%" y="213" width="0.0132%" height="15" fill="rgb(230,182,32)" fg:x="13160" fg:w="2"/><text x="87.3389%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::context::CtxRef::interact (4 samples, 0.03%)</title><rect x="87.1087%" y="213" width="0.0265%" height="15" fill="rgb(242,56,43)" fg:x="13163" fg:w="4"/><text x="87.3587%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::context::Context::layer_id_at (4 samples, 0.03%)</title><rect x="87.1087%" y="197" width="0.0265%" height="15" fill="rgb(233,99,24)" fg:x="13163" fg:w="4"/><text x="87.3587%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::memory::Memory::layer_id_at (4 samples, 0.03%)</title><rect x="87.1087%" y="181" width="0.0265%" height="15" fill="rgb(234,209,42)" fg:x="13163" fg:w="4"/><text x="87.3587%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::containers::frame::Prepared::end (7 samples, 0.05%)</title><rect x="87.1021%" y="229" width="0.0463%" height="15" fill="rgb(227,7,12)" fg:x="13162" fg:w="7"/><text x="87.3521%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::painter::Painter::set (2 samples, 0.01%)</title><rect x="87.1352%" y="213" width="0.0132%" height="15" fill="rgb(245,203,43)" fg:x="13167" fg:w="2"/><text x="87.3852%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`emath::round_to_decimals (10 samples, 0.07%)</title><rect x="87.1683%" y="229" width="0.0662%" height="15" fill="rgb(238,205,33)" fg:x="13172" fg:w="10"/><text x="87.4183%" y="239.50"></text></g><g><title>libsystem_m.dylib`floor (4 samples, 0.03%)</title><rect x="87.2411%" y="229" width="0.0265%" height="15" fill="rgb(231,56,7)" fg:x="13183" fg:w="4"/><text x="87.4911%" y="239.50"></text></g><g><title>libsystem_m.dylib`round (16 samples, 0.11%)</title><rect x="87.2676%" y="229" width="0.1059%" height="15" fill="rgb(244,186,29)" fg:x="13187" fg:w="16"/><text x="87.5176%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.01%)</title><rect x="87.3734%" y="229" width="0.0132%" height="15" fill="rgb(234,111,31)" fg:x="13203" fg:w="2"/><text x="87.6234%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (3 samples, 0.02%)</title><rect x="87.3933%" y="229" width="0.0199%" height="15" fill="rgb(241,149,10)" fg:x="13206" fg:w="3"/><text x="87.6433%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (32 samples, 0.21%)</title><rect x="87.4131%" y="229" width="0.2118%" height="15" fill="rgb(249,206,44)" fg:x="13209" fg:w="32"/><text x="87.6631%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::containers::frame::Frame::show (12,906 samples, 85.41%)</title><rect x="2.2434%" y="245" width="85.4080%" height="15" fill="rgb(251,153,30)" fg:x="339" fg:w="12906"/><text x="2.4934%" y="255.50">benchmark-022a91b58b3cfee0`egui::containers::frame::Frame::show</text></g><g><title>libsystem_platform.dylib`_platform_memset_pattern16$VARIANT$Haswell (4 samples, 0.03%)</title><rect x="87.6249%" y="229" width="0.0265%" height="15" fill="rgb(239,152,38)" fg:x="13241" fg:w="4"/><text x="87.8749%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::context::Context::frame_state (2 samples, 0.01%)</title><rect x="87.6514%" y="245" width="0.0132%" height="15" fill="rgb(249,139,47)" fg:x="13245" fg:w="2"/><text x="87.9014%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::layout::Layout::region_from_max_rect (2 samples, 0.01%)</title><rect x="87.6712%" y="229" width="0.0132%" height="15" fill="rgb(244,64,35)" fg:x="13248" fg:w="2"/><text x="87.9212%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::layout::Layout::next_frame_ignore_wrap (2 samples, 0.01%)</title><rect x="87.6712%" y="213" width="0.0132%" height="15" fill="rgb(216,46,15)" fg:x="13248" fg:w="2"/><text x="87.9212%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::containers::panel::CentralPanel::show (12,912 samples, 85.45%)</title><rect x="2.2434%" y="261" width="85.4477%" height="15" fill="rgb(250,74,19)" fg:x="339" fg:w="12912"/><text x="2.4934%" y="271.50">benchmark-022a91b58b3cfee0`egui::containers::panel::CentralPanel::show</text></g><g><title>benchmark-022a91b58b3cfee0`egui::ui::Ui::new (4 samples, 0.03%)</title><rect x="87.6646%" y="245" width="0.0265%" height="15" fill="rgb(249,42,33)" fg:x="13247" fg:w="4"/><text x="87.9146%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`DYLD-STUB$$memmove (4 samples, 0.03%)</title><rect x="87.7043%" y="245" width="0.0265%" height="15" fill="rgb(242,149,17)" fg:x="13253" fg:w="4"/><text x="87.9543%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.01%)</title><rect x="87.8896%" y="229" width="0.0132%" height="15" fill="rgb(244,29,21)" fg:x="13281" fg:w="2"/><text x="88.1396%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::layers::GraphicLayers::drain (128 samples, 0.85%)</title><rect x="87.7308%" y="245" width="0.8471%" height="15" fill="rgb(220,130,37)" fg:x="13257" fg:w="128"/><text x="87.9808%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (102 samples, 0.68%)</title><rect x="87.9029%" y="229" width="0.6750%" height="15" fill="rgb(211,67,2)" fg:x="13283" fg:w="102"/><text x="88.1529%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::memory::Memory::end_frame (3 samples, 0.02%)</title><rect x="88.5779%" y="245" width="0.0199%" height="15" fill="rgb(235,68,52)" fg:x="13385" fg:w="3"/><text x="88.8279%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (3 samples, 0.02%)</title><rect x="88.5779%" y="229" width="0.0199%" height="15" fill="rgb(246,142,3)" fg:x="13385" fg:w="3"/><text x="88.8279%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.01%)</title><rect x="88.5845%" y="213" width="0.0132%" height="15" fill="rgb(241,25,7)" fg:x="13386" fg:w="2"/><text x="88.8345%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.01%)</title><rect x="88.5845%" y="197" width="0.0132%" height="15" fill="rgb(242,119,39)" fg:x="13386" fg:w="2"/><text x="88.8345%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`epaint::text::fonts::Fonts::end_frame (16 samples, 0.11%)</title><rect x="88.5977%" y="245" width="0.1059%" height="15" fill="rgb(241,98,45)" fg:x="13388" fg:w="16"/><text x="88.8477%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`hashbrown::map::HashMap&lt;K,V,S,A&gt;::retain (15 samples, 0.10%)</title><rect x="88.6043%" y="229" width="0.0993%" height="15" fill="rgb(254,28,30)" fg:x="13389" fg:w="15"/><text x="88.8543%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::context::Context::end_frame (176 samples, 1.16%)</title><rect x="87.6911%" y="261" width="1.1647%" height="15" fill="rgb(241,142,54)" fg:x="13251" fg:w="176"/><text x="87.9411%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (23 samples, 0.15%)</title><rect x="88.7036%" y="245" width="0.1522%" height="15" fill="rgb(222,85,15)" fg:x="13404" fg:w="23"/><text x="88.9536%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;alloc::collections::vec_deque::VecDeque&lt;T&gt; as core::clone::Clone&gt;::clone (5 samples, 0.03%)</title><rect x="88.9154%" y="229" width="0.0331%" height="15" fill="rgb(210,85,47)" fg:x="13436" fg:w="5"/><text x="89.1654%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc (3 samples, 0.02%)</title><rect x="88.9286%" y="213" width="0.0199%" height="15" fill="rgb(224,206,25)" fg:x="13438" fg:w="3"/><text x="89.1786%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (2 samples, 0.01%)</title><rect x="88.9352%" y="197" width="0.0132%" height="15" fill="rgb(243,201,19)" fg:x="13439" fg:w="2"/><text x="89.1852%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.01%)</title><rect x="88.9352%" y="181" width="0.0132%" height="15" fill="rgb(236,59,4)" fg:x="13439" fg:w="2"/><text x="89.1852%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.03%)</title><rect x="88.9484%" y="229" width="0.0331%" height="15" fill="rgb(254,179,45)" fg:x="13441" fg:w="5"/><text x="89.1984%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc (5 samples, 0.03%)</title><rect x="88.9484%" y="213" width="0.0331%" height="15" fill="rgb(226,14,10)" fg:x="13441" fg:w="5"/><text x="89.1984%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (5 samples, 0.03%)</title><rect x="88.9484%" y="197" width="0.0331%" height="15" fill="rgb(244,27,41)" fg:x="13441" fg:w="5"/><text x="89.1984%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.03%)</title><rect x="88.9484%" y="181" width="0.0331%" height="15" fill="rgb(235,35,32)" fg:x="13441" fg:w="5"/><text x="89.1984%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.03%)</title><rect x="88.9484%" y="165" width="0.0331%" height="15" fill="rgb(218,68,31)" fg:x="13441" fg:w="5"/><text x="89.1984%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (3 samples, 0.02%)</title><rect x="88.9617%" y="149" width="0.0199%" height="15" fill="rgb(207,120,37)" fg:x="13443" fg:w="3"/><text x="89.2117%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.01%)</title><rect x="88.9683%" y="133" width="0.0132%" height="15" fill="rgb(227,98,0)" fg:x="13444" fg:w="2"/><text x="89.2183%" y="143.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;egui::context::Context as core::clone::Clone&gt;::clone (13 samples, 0.09%)</title><rect x="88.9021%" y="245" width="0.0860%" height="15" fill="rgb(207,7,3)" fg:x="13434" fg:w="13"/><text x="89.1521%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;egui::input_state::InputState as core::default::Default&gt;::default (2 samples, 0.01%)</title><rect x="88.9882%" y="245" width="0.0132%" height="15" fill="rgb(206,98,19)" fg:x="13447" fg:w="2"/><text x="89.2382%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::ptr::drop_in_place&lt;egui::input_state::PointerState&gt; (3 samples, 0.02%)</title><rect x="89.0014%" y="213" width="0.0199%" height="15" fill="rgb(217,5,26)" fg:x="13449" fg:w="3"/><text x="89.2514%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.01%)</title><rect x="89.0080%" y="197" width="0.0132%" height="15" fill="rgb(235,190,38)" fg:x="13450" fg:w="2"/><text x="89.2580%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.01%)</title><rect x="89.0080%" y="181" width="0.0132%" height="15" fill="rgb(247,86,24)" fg:x="13450" fg:w="2"/><text x="89.2580%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.01%)</title><rect x="89.0080%" y="165" width="0.0132%" height="15" fill="rgb(205,101,16)" fg:x="13450" fg:w="2"/><text x="89.2580%" y="175.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::ptr::drop_in_place&lt;egui::input_state::InputState&gt; (9 samples, 0.06%)</title><rect x="89.0014%" y="229" width="0.0596%" height="15" fill="rgb(246,168,33)" fg:x="13449" fg:w="9"/><text x="89.2514%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.03%)</title><rect x="89.0279%" y="213" width="0.0331%" height="15" fill="rgb(231,114,1)" fg:x="13453" fg:w="5"/><text x="89.2779%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::sync::Arc&lt;T&gt;::drop_slow (12 samples, 0.08%)</title><rect x="89.0014%" y="245" width="0.0794%" height="15" fill="rgb(207,184,53)" fg:x="13449" fg:w="12"/><text x="89.2514%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::ptr::drop_in_place&lt;egui::input_state::InputState&gt; (2 samples, 0.01%)</title><rect x="89.0808%" y="245" width="0.0132%" height="15" fill="rgb(224,95,51)" fg:x="13461" fg:w="2"/><text x="89.3308%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="89.1205%" y="229" width="0.0132%" height="15" fill="rgb(212,188,45)" fg:x="13467" fg:w="2"/><text x="89.3705%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc (2 samples, 0.01%)</title><rect x="89.1205%" y="213" width="0.0132%" height="15" fill="rgb(223,154,38)" fg:x="13467" fg:w="2"/><text x="89.3705%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (2 samples, 0.01%)</title><rect x="89.1205%" y="197" width="0.0132%" height="15" fill="rgb(251,22,52)" fg:x="13467" fg:w="2"/><text x="89.3705%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::input_state::InputState::begin_frame (12 samples, 0.08%)</title><rect x="89.0940%" y="245" width="0.0794%" height="15" fill="rgb(229,209,22)" fg:x="13463" fg:w="12"/><text x="89.3440%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.03%)</title><rect x="89.1404%" y="229" width="0.0331%" height="15" fill="rgb(234,138,34)" fg:x="13470" fg:w="5"/><text x="89.3904%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.01%)</title><rect x="89.1602%" y="213" width="0.0132%" height="15" fill="rgb(212,95,11)" fg:x="13473" fg:w="2"/><text x="89.4102%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::memory::Areas::set_state (10 samples, 0.07%)</title><rect x="89.1734%" y="245" width="0.0662%" height="15" fill="rgb(240,179,47)" fg:x="13475" fg:w="10"/><text x="89.4234%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (9 samples, 0.06%)</title><rect x="89.1801%" y="229" width="0.0596%" height="15" fill="rgb(240,163,11)" fg:x="13476" fg:w="9"/><text x="89.4301%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`hashbrown::raw::RawTable&lt;T,A&gt;::insert (3 samples, 0.02%)</title><rect x="89.2198%" y="213" width="0.0199%" height="15" fill="rgb(236,37,12)" fg:x="13482" fg:w="3"/><text x="89.4698%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.02%)</title><rect x="89.2198%" y="197" width="0.0199%" height="15" fill="rgb(232,164,16)" fg:x="13482" fg:w="3"/><text x="89.4698%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (3 samples, 0.02%)</title><rect x="89.2198%" y="181" width="0.0199%" height="15" fill="rgb(244,205,15)" fg:x="13482" fg:w="3"/><text x="89.4698%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc (3 samples, 0.02%)</title><rect x="89.2198%" y="165" width="0.0199%" height="15" fill="rgb(223,117,47)" fg:x="13482" fg:w="3"/><text x="89.4698%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (3 samples, 0.02%)</title><rect x="89.2198%" y="149" width="0.0199%" height="15" fill="rgb(244,107,35)" fg:x="13482" fg:w="3"/><text x="89.4698%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.02%)</title><rect x="89.2198%" y="133" width="0.0199%" height="15" fill="rgb(205,140,8)" fg:x="13482" fg:w="3"/><text x="89.4698%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.01%)</title><rect x="89.2264%" y="117" width="0.0132%" height="15" fill="rgb(228,84,46)" fg:x="13483" fg:w="2"/><text x="89.4764%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`malloc (2 samples, 0.01%)</title><rect x="89.2396%" y="245" width="0.0132%" height="15" fill="rgb(254,188,9)" fg:x="13485" fg:w="2"/><text x="89.4896%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (2 samples, 0.01%)</title><rect x="89.2396%" y="229" width="0.0132%" height="15" fill="rgb(206,112,54)" fg:x="13485" fg:w="2"/><text x="89.4896%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.01%)</title><rect x="89.2396%" y="213" width="0.0132%" height="15" fill="rgb(216,84,49)" fg:x="13485" fg:w="2"/><text x="89.4896%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.01%)</title><rect x="89.2396%" y="197" width="0.0132%" height="15" fill="rgb(214,194,35)" fg:x="13485" fg:w="2"/><text x="89.4896%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::context::CtxRef::begin_frame (63 samples, 0.42%)</title><rect x="88.8558%" y="261" width="0.4169%" height="15" fill="rgb(249,28,3)" fg:x="13427" fg:w="63"/><text x="89.1058%" y="271.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (13,491 samples, 89.28%)</title><rect x="0.0199%" y="293" width="89.2793%" height="15" fill="rgb(222,56,52)" fg:x="3" fg:w="13491"/><text x="0.2699%" y="303.50">benchmark-022a91b58b3cfee0`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold</text></g><g><title>benchmark-022a91b58b3cfee0`criterion::bencher::Bencher&lt;M&gt;::iter (13,491 samples, 89.28%)</title><rect x="0.0199%" y="277" width="89.2793%" height="15" fill="rgb(245,217,50)" fg:x="3" fg:w="13491"/><text x="0.2699%" y="287.50">benchmark-022a91b58b3cfee0`criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (3 samples, 0.02%)</title><rect x="89.2793%" y="261" width="0.0199%" height="15" fill="rgb(213,201,24)" fg:x="13491" fg:w="3"/><text x="89.5293%" y="271.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::ptr::drop_in_place&lt;epaint::shape::Shape&gt; (19 samples, 0.13%)</title><rect x="89.3455%" y="245" width="0.1257%" height="15" fill="rgb(248,116,28)" fg:x="13501" fg:w="19"/><text x="89.5955%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.03%)</title><rect x="89.4779%" y="245" width="0.0331%" height="15" fill="rgb(219,72,43)" fg:x="13521" fg:w="5"/><text x="89.7279%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (4 samples, 0.03%)</title><rect x="89.4845%" y="229" width="0.0265%" height="15" fill="rgb(209,138,14)" fg:x="13522" fg:w="4"/><text x="89.7345%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (4 samples, 0.03%)</title><rect x="89.4845%" y="213" width="0.0265%" height="15" fill="rgb(222,18,33)" fg:x="13522" fg:w="4"/><text x="89.7345%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (4 samples, 0.03%)</title><rect x="89.5507%" y="213" width="0.0265%" height="15" fill="rgb(213,199,7)" fg:x="13532" fg:w="4"/><text x="89.8007%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::ptr::drop_in_place&lt;(egui::data::output::Output,alloc::vec::Vec&lt;epaint::ClippedShape&gt;)&gt; (43 samples, 0.28%)</title><rect x="89.3058%" y="261" width="0.2846%" height="15" fill="rgb(250,110,10)" fg:x="13495" fg:w="43"/><text x="89.5558%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (12 samples, 0.08%)</title><rect x="89.5110%" y="245" width="0.0794%" height="15" fill="rgb(248,123,6)" fg:x="13526" fg:w="12"/><text x="89.7610%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (9 samples, 0.06%)</title><rect x="89.5308%" y="229" width="0.0596%" height="15" fill="rgb(206,91,31)" fg:x="13529" fg:w="9"/><text x="89.7808%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (2 samples, 0.01%)</title><rect x="89.5771%" y="213" width="0.0132%" height="15" fill="rgb(211,154,13)" fg:x="13536" fg:w="2"/><text x="89.8271%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;egui::widgets::plot::items::Line as egui::widgets::plot::items::PlotItem&gt;::closest (158 samples, 1.05%)</title><rect x="89.8418%" y="213" width="1.0456%" height="15" fill="rgb(225,148,7)" fg:x="13576" fg:w="158"/><text x="90.0918%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc (8 samples, 0.05%)</title><rect x="90.8345%" y="197" width="0.0529%" height="15" fill="rgb(220,160,43)" fg:x="13726" fg:w="8"/><text x="91.0845%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (6 samples, 0.04%)</title><rect x="90.8477%" y="181" width="0.0397%" height="15" fill="rgb(213,52,39)" fg:x="13728" fg:w="6"/><text x="91.0977%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.03%)</title><rect x="90.8543%" y="165" width="0.0331%" height="15" fill="rgb(243,137,7)" fg:x="13729" fg:w="5"/><text x="91.1043%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (4 samples, 0.03%)</title><rect x="90.8610%" y="149" width="0.0265%" height="15" fill="rgb(230,79,13)" fg:x="13730" fg:w="4"/><text x="91.1110%" y="159.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (136 samples, 0.90%)</title><rect x="90.9271%" y="197" width="0.9000%" height="15" fill="rgb(247,105,23)" fg:x="13740" fg:w="136"/><text x="91.1771%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (6 samples, 0.04%)</title><rect x="91.8867%" y="133" width="0.0397%" height="15" fill="rgb(223,179,41)" fg:x="13885" fg:w="6"/><text x="92.1367%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc (20 samples, 0.13%)</title><rect x="91.8271%" y="197" width="0.1324%" height="15" fill="rgb(218,9,34)" fg:x="13876" fg:w="20"/><text x="92.0771%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (19 samples, 0.13%)</title><rect x="91.8338%" y="181" width="0.1257%" height="15" fill="rgb(222,106,8)" fg:x="13877" fg:w="19"/><text x="92.0838%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (18 samples, 0.12%)</title><rect x="91.8404%" y="165" width="0.1191%" height="15" fill="rgb(211,220,0)" fg:x="13878" fg:w="18"/><text x="92.0904%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (17 samples, 0.11%)</title><rect x="91.8470%" y="149" width="0.1125%" height="15" fill="rgb(229,52,16)" fg:x="13879" fg:w="17"/><text x="92.0970%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.03%)</title><rect x="91.9264%" y="133" width="0.0331%" height="15" fill="rgb(212,155,18)" fg:x="13891" fg:w="5"/><text x="92.1764%" y="143.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;egui::widgets::plot::items::Line as egui::widgets::plot::items::PlotItem&gt;::get_shapes (166 samples, 1.10%)</title><rect x="90.8874%" y="213" width="1.0985%" height="15" fill="rgb(242,21,14)" fg:x="13734" fg:w="166"/><text x="91.1374%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (4 samples, 0.03%)</title><rect x="91.9595%" y="197" width="0.0265%" height="15" fill="rgb(222,19,48)" fg:x="13896" fg:w="4"/><text x="92.2095%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;epaint::color::Color32 as core::convert::From&lt;epaint::color::Rgba&gt;&gt;::from (58 samples, 0.38%)</title><rect x="91.9860%" y="213" width="0.3838%" height="15" fill="rgb(232,45,27)" fg:x="13900" fg:w="58"/><text x="92.2360%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`DYLD-STUB$$roundf (2 samples, 0.01%)</title><rect x="92.3764%" y="213" width="0.0132%" height="15" fill="rgb(249,103,42)" fg:x="13959" fg:w="2"/><text x="92.6264%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::fmt::format (2 samples, 0.01%)</title><rect x="92.3896%" y="213" width="0.0132%" height="15" fill="rgb(246,81,33)" fg:x="13961" fg:w="2"/><text x="92.6396%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.02%)</title><rect x="92.4029%" y="213" width="0.0199%" height="15" fill="rgb(252,33,42)" fg:x="13963" fg:w="3"/><text x="92.6529%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::finish_grow (3 samples, 0.02%)</title><rect x="92.4029%" y="197" width="0.0199%" height="15" fill="rgb(209,212,41)" fg:x="13963" fg:w="3"/><text x="92.6529%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`realloc (3 samples, 0.02%)</title><rect x="92.4029%" y="181" width="0.0199%" height="15" fill="rgb(207,154,6)" fg:x="13963" fg:w="3"/><text x="92.6529%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (3 samples, 0.02%)</title><rect x="92.4029%" y="165" width="0.0199%" height="15" fill="rgb(223,64,47)" fg:x="13963" fg:w="3"/><text x="92.6529%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (3 samples, 0.02%)</title><rect x="92.4029%" y="149" width="0.0199%" height="15" fill="rgb(211,161,38)" fg:x="13963" fg:w="3"/><text x="92.6529%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.01%)</title><rect x="92.4095%" y="133" width="0.0132%" height="15" fill="rgb(219,138,40)" fg:x="13964" fg:w="2"/><text x="92.6595%" y="143.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::vec::Vec&lt;T,A&gt;::retain (3 samples, 0.02%)</title><rect x="92.4294%" y="213" width="0.0199%" height="15" fill="rgb(241,228,46)" fg:x="13967" fg:w="3"/><text x="92.6794%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (3 samples, 0.02%)</title><rect x="92.4294%" y="197" width="0.0199%" height="15" fill="rgb(223,209,38)" fg:x="13967" fg:w="3"/><text x="92.6794%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (7 samples, 0.05%)</title><rect x="92.4823%" y="197" width="0.0463%" height="15" fill="rgb(236,164,45)" fg:x="13975" fg:w="7"/><text x="92.7323%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (4 samples, 0.03%)</title><rect x="92.5022%" y="181" width="0.0265%" height="15" fill="rgb(231,15,5)" fg:x="13978" fg:w="4"/><text x="92.7522%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::Formatter::pad_formatted_parts (3 samples, 0.02%)</title><rect x="92.6742%" y="181" width="0.0199%" height="15" fill="rgb(252,35,15)" fg:x="14004" fg:w="3"/><text x="92.9242%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.01%)</title><rect x="92.8794%" y="85" width="0.0132%" height="15" fill="rgb(248,181,18)" fg:x="14035" fg:w="2"/><text x="93.1294%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (42 samples, 0.28%)</title><rect x="92.8926%" y="85" width="0.2779%" height="15" fill="rgb(233,39,42)" fg:x="14037" fg:w="42"/><text x="93.1426%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (38 samples, 0.25%)</title><rect x="92.9191%" y="69" width="0.2515%" height="15" fill="rgb(238,110,33)" fg:x="14041" fg:w="38"/><text x="93.1691%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (49 samples, 0.32%)</title><rect x="92.8529%" y="101" width="0.3243%" height="15" fill="rgb(233,195,10)" fg:x="14031" fg:w="49"/><text x="93.1029%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`malloc (54 samples, 0.36%)</title><rect x="92.8264%" y="117" width="0.3574%" height="15" fill="rgb(254,105,3)" fg:x="14027" fg:w="54"/><text x="93.0764%" y="127.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (63 samples, 0.42%)</title><rect x="92.7735%" y="149" width="0.4169%" height="15" fill="rgb(221,225,9)" fg:x="14019" fg:w="63"/><text x="93.0235%" y="159.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::finish_grow (59 samples, 0.39%)</title><rect x="92.7999%" y="133" width="0.3904%" height="15" fill="rgb(224,227,45)" fg:x="14023" fg:w="59"/><text x="93.0499%" y="143.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (75 samples, 0.50%)</title><rect x="92.7272%" y="165" width="0.4963%" height="15" fill="rgb(229,198,43)" fg:x="14012" fg:w="75"/><text x="92.9772%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (5 samples, 0.03%)</title><rect x="93.1904%" y="149" width="0.0331%" height="15" fill="rgb(206,209,35)" fg:x="14082" fg:w="5"/><text x="93.4404%" y="159.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::Formatter::write_formatted_parts (83 samples, 0.55%)</title><rect x="92.6941%" y="181" width="0.5493%" height="15" fill="rgb(245,195,53)" fg:x="14007" fg:w="83"/><text x="92.9441%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.01%)</title><rect x="93.2301%" y="165" width="0.0132%" height="15" fill="rgb(240,92,26)" fg:x="14088" fg:w="2"/><text x="93.4801%" y="175.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::write (180 samples, 1.19%)</title><rect x="92.4558%" y="213" width="1.1912%" height="15" fill="rgb(207,40,23)" fg:x="13971" fg:w="180"/><text x="92.7058%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::float::float_to_decimal_common_shortest (166 samples, 1.10%)</title><rect x="92.5485%" y="197" width="1.0985%" height="15" fill="rgb(223,111,35)" fg:x="13985" fg:w="166"/><text x="92.7985%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::num::flt2dec::strategy::grisu::format_shortest_opt (61 samples, 0.40%)</title><rect x="93.2433%" y="181" width="0.4037%" height="15" fill="rgb(229,147,28)" fg:x="14090" fg:w="61"/><text x="93.4933%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (2 samples, 0.01%)</title><rect x="93.6867%" y="181" width="0.0132%" height="15" fill="rgb(211,29,28)" fg:x="14157" fg:w="2"/><text x="93.9367%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.01%)</title><rect x="93.7000%" y="181" width="0.0132%" height="15" fill="rgb(228,72,33)" fg:x="14159" fg:w="2"/><text x="93.9500%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (5 samples, 0.03%)</title><rect x="93.7397%" y="165" width="0.0331%" height="15" fill="rgb(205,214,31)" fg:x="14165" fg:w="5"/><text x="93.9897%" y="175.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::ptr::drop_in_place&lt;egui::widgets::plot::items::Line&gt; (22 samples, 0.15%)</title><rect x="93.6602%" y="197" width="0.1456%" height="15" fill="rgb(224,111,15)" fg:x="14153" fg:w="22"/><text x="93.9102%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_small (14 samples, 0.09%)</title><rect x="93.7132%" y="181" width="0.0926%" height="15" fill="rgb(253,21,26)" fg:x="14161" fg:w="14"/><text x="93.9632%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (4 samples, 0.03%)</title><rect x="93.7794%" y="165" width="0.0265%" height="15" fill="rgb(245,139,43)" fg:x="14171" fg:w="4"/><text x="94.0294%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (2 samples, 0.01%)</title><rect x="93.8058%" y="197" width="0.0132%" height="15" fill="rgb(252,170,7)" fg:x="14175" fg:w="2"/><text x="94.0558%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.03%)</title><rect x="93.8191%" y="197" width="0.0331%" height="15" fill="rgb(231,118,14)" fg:x="14177" fg:w="5"/><text x="94.0691%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (2 samples, 0.01%)</title><rect x="93.8389%" y="181" width="0.0132%" height="15" fill="rgb(238,83,0)" fg:x="14180" fg:w="2"/><text x="94.0889%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (3 samples, 0.02%)</title><rect x="93.9183%" y="165" width="0.0199%" height="15" fill="rgb(221,39,39)" fg:x="14192" fg:w="3"/><text x="94.1683%" y="175.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::ptr::drop_in_place&lt;egui::widgets::plot::Prepared&gt; (46 samples, 0.30%)</title><rect x="93.6602%" y="213" width="0.3044%" height="15" fill="rgb(222,119,46)" fg:x="14153" fg:w="46"/><text x="93.9102%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (17 samples, 0.11%)</title><rect x="93.8522%" y="197" width="0.1125%" height="15" fill="rgb(222,165,49)" fg:x="14182" fg:w="17"/><text x="94.1022%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (12 samples, 0.08%)</title><rect x="93.8852%" y="181" width="0.0794%" height="15" fill="rgb(219,113,52)" fg:x="14187" fg:w="12"/><text x="94.1352%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (4 samples, 0.03%)</title><rect x="93.9382%" y="165" width="0.0265%" height="15" fill="rgb(214,7,15)" fg:x="14195" fg:w="4"/><text x="94.1882%" y="175.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (58 samples, 0.38%)</title><rect x="93.9713%" y="181" width="0.3838%" height="15" fill="rgb(235,32,4)" fg:x="14200" fg:w="58"/><text x="94.2213%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::painter::Painter::extend (60 samples, 0.40%)</title><rect x="93.9713%" y="213" width="0.3971%" height="15" fill="rgb(238,90,54)" fg:x="14200" fg:w="60"/><text x="94.2213%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::layers::PaintList::extend (60 samples, 0.40%)</title><rect x="93.9713%" y="197" width="0.3971%" height="15" fill="rgb(213,208,19)" fg:x="14200" fg:w="60"/><text x="94.2213%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.01%)</title><rect x="94.3551%" y="181" width="0.0132%" height="15" fill="rgb(233,156,4)" fg:x="14258" fg:w="2"/><text x="94.6051%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (2 samples, 0.01%)</title><rect x="94.3551%" y="165" width="0.0132%" height="15" fill="rgb(207,194,5)" fg:x="14258" fg:w="2"/><text x="94.6051%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.01%)</title><rect x="94.3551%" y="149" width="0.0132%" height="15" fill="rgb(206,111,30)" fg:x="14258" fg:w="2"/><text x="94.6051%" y="159.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::ui::Ui::allocate_exact_size (2 samples, 0.01%)</title><rect x="94.3683%" y="213" width="0.0132%" height="15" fill="rgb(243,70,54)" fg:x="14260" fg:w="2"/><text x="94.6183%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::context::CtxRef::interact (2 samples, 0.01%)</title><rect x="94.3683%" y="197" width="0.0132%" height="15" fill="rgb(242,28,8)" fg:x="14260" fg:w="2"/><text x="94.6183%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`benchmark::criterion_benchmark::lines_plot::_{{closure}} (13 samples, 0.09%)</title><rect x="94.8448%" y="181" width="0.0860%" height="15" fill="rgb(219,106,18)" fg:x="14332" fg:w="13"/><text x="95.0948%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (3 samples, 0.02%)</title><rect x="95.0698%" y="101" width="0.0199%" height="15" fill="rgb(244,222,10)" fg:x="14366" fg:w="3"/><text x="95.3198%" y="111.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (100 samples, 0.66%)</title><rect x="94.4345%" y="197" width="0.6618%" height="15" fill="rgb(236,179,52)" fg:x="14270" fg:w="100"/><text x="94.6845%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc (25 samples, 0.17%)</title><rect x="94.9308%" y="181" width="0.1654%" height="15" fill="rgb(213,23,39)" fg:x="14345" fg:w="25"/><text x="95.1808%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (24 samples, 0.16%)</title><rect x="94.9375%" y="165" width="0.1588%" height="15" fill="rgb(238,48,10)" fg:x="14346" fg:w="24"/><text x="95.1875%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (21 samples, 0.14%)</title><rect x="94.9573%" y="149" width="0.1390%" height="15" fill="rgb(251,196,23)" fg:x="14349" fg:w="21"/><text x="95.2073%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (17 samples, 0.11%)</title><rect x="94.9838%" y="133" width="0.1125%" height="15" fill="rgb(250,152,24)" fg:x="14353" fg:w="17"/><text x="95.2338%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (10 samples, 0.07%)</title><rect x="95.0301%" y="117" width="0.0662%" height="15" fill="rgb(209,150,17)" fg:x="14360" fg:w="10"/><text x="95.2801%" y="127.50"></text></g><g><title>benchmark-022a91b58b3cfee0`benchmark::criterion_benchmark::lines_plot::_{{closure}} (8 samples, 0.05%)</title><rect x="95.0963%" y="197" width="0.0529%" height="15" fill="rgb(234,202,34)" fg:x="14370" fg:w="8"/><text x="95.3463%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.03%)</title><rect x="95.1558%" y="197" width="0.0331%" height="15" fill="rgb(253,148,53)" fg:x="14379" fg:w="5"/><text x="95.4058%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (2 samples, 0.01%)</title><rect x="95.1757%" y="181" width="0.0132%" height="15" fill="rgb(218,129,16)" fg:x="14382" fg:w="2"/><text x="95.4257%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (20 samples, 0.13%)</title><rect x="95.1889%" y="197" width="0.1324%" height="15" fill="rgb(216,85,19)" fg:x="14384" fg:w="20"/><text x="95.4389%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (11 samples, 0.07%)</title><rect x="95.2485%" y="181" width="0.0728%" height="15" fill="rgb(235,228,7)" fg:x="14393" fg:w="11"/><text x="95.4985%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (5 samples, 0.03%)</title><rect x="95.2882%" y="165" width="0.0331%" height="15" fill="rgb(245,175,0)" fg:x="14399" fg:w="5"/><text x="95.5382%" y="175.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::widgets::plot::items::Values::generate_points (143 samples, 0.95%)</title><rect x="94.3816%" y="213" width="0.9463%" height="15" fill="rgb(208,168,36)" fg:x="14262" fg:w="143"/><text x="94.6316%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::fmt::format (4 samples, 0.03%)</title><rect x="95.3345%" y="197" width="0.0265%" height="15" fill="rgb(246,171,24)" fg:x="14406" fg:w="4"/><text x="95.5845%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::write (4 samples, 0.03%)</title><rect x="95.3345%" y="181" width="0.0265%" height="15" fill="rgb(215,142,24)" fg:x="14406" fg:w="4"/><text x="95.5845%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::float::float_to_decimal_common_exact (4 samples, 0.03%)</title><rect x="95.3345%" y="165" width="0.0265%" height="15" fill="rgb(250,187,7)" fg:x="14406" fg:w="4"/><text x="95.5845%" y="175.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::num::flt2dec::strategy::dragon::format_exact (2 samples, 0.01%)</title><rect x="95.3478%" y="149" width="0.0132%" height="15" fill="rgb(228,66,33)" fg:x="14408" fg:w="2"/><text x="95.5978%" y="159.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::widgets::plot::items::rulers_at_value (7 samples, 0.05%)</title><rect x="95.3279%" y="213" width="0.0463%" height="15" fill="rgb(234,215,21)" fg:x="14405" fg:w="7"/><text x="95.5779%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`epaint::shape::Shape::text (2 samples, 0.01%)</title><rect x="95.3610%" y="197" width="0.0132%" height="15" fill="rgb(222,191,20)" fg:x="14410" fg:w="2"/><text x="95.6110%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (4 samples, 0.03%)</title><rect x="95.5000%" y="165" width="0.0265%" height="15" fill="rgb(245,79,54)" fg:x="14431" fg:w="4"/><text x="95.7500%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.02%)</title><rect x="95.5066%" y="149" width="0.0199%" height="15" fill="rgb(240,10,37)" fg:x="14432" fg:w="3"/><text x="95.7566%" y="159.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (4 samples, 0.03%)</title><rect x="95.6456%" y="149" width="0.0265%" height="15" fill="rgb(214,192,32)" fg:x="14453" fg:w="4"/><text x="95.8956%" y="159.50"></text></g><g><title>benchmark-022a91b58b3cfee0`__rdl_alloc (2 samples, 0.01%)</title><rect x="95.8110%" y="101" width="0.0132%" height="15" fill="rgb(209,36,54)" fg:x="14478" fg:w="2"/><text x="96.0610%" y="111.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (62 samples, 0.41%)</title><rect x="95.7978%" y="117" width="0.4103%" height="15" fill="rgb(220,10,11)" fg:x="14476" fg:w="62"/><text x="96.0478%" y="127.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::finish_grow (58 samples, 0.38%)</title><rect x="95.8242%" y="101" width="0.3838%" height="15" fill="rgb(221,106,17)" fg:x="14480" fg:w="58"/><text x="96.0742%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`malloc (55 samples, 0.36%)</title><rect x="95.8441%" y="85" width="0.3640%" height="15" fill="rgb(251,142,44)" fg:x="14483" fg:w="55"/><text x="96.0941%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (51 samples, 0.34%)</title><rect x="95.8706%" y="69" width="0.3375%" height="15" fill="rgb(238,13,15)" fg:x="14487" fg:w="51"/><text x="96.1206%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (47 samples, 0.31%)</title><rect x="95.8970%" y="53" width="0.3110%" height="15" fill="rgb(208,107,27)" fg:x="14491" fg:w="47"/><text x="96.1470%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (46 samples, 0.30%)</title><rect x="95.9036%" y="37" width="0.3044%" height="15" fill="rgb(205,136,37)" fg:x="14492" fg:w="46"/><text x="96.1536%" y="47.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (81 samples, 0.54%)</title><rect x="95.7448%" y="133" width="0.5360%" height="15" fill="rgb(250,205,27)" fg:x="14468" fg:w="81"/><text x="95.9948%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (10 samples, 0.07%)</title><rect x="96.2147%" y="117" width="0.0662%" height="15" fill="rgb(210,80,43)" fg:x="14539" fg:w="10"/><text x="96.4647%" y="127.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::Formatter::write_formatted_parts (92 samples, 0.61%)</title><rect x="95.6786%" y="149" width="0.6088%" height="15" fill="rgb(247,160,36)" fg:x="14458" fg:w="92"/><text x="95.9286%" y="159.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::float::float_to_decimal_common_exact (196 samples, 1.30%)</title><rect x="95.5264%" y="165" width="1.2971%" height="15" fill="rgb(234,13,49)" fg:x="14435" fg:w="196"/><text x="95.7764%" y="175.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::num::flt2dec::strategy::grisu::format_exact_opt (81 samples, 0.54%)</title><rect x="96.2875%" y="149" width="0.5360%" height="15" fill="rgb(234,122,0)" fg:x="14550" fg:w="81"/><text x="96.5375%" y="159.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::num::flt2dec::strategy::grisu::format_exact_opt::possibly_round (4 samples, 0.03%)</title><rect x="96.7970%" y="133" width="0.0265%" height="15" fill="rgb(207,146,38)" fg:x="14627" fg:w="4"/><text x="97.0470%" y="143.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::fmt::format (217 samples, 1.44%)</title><rect x="95.3941%" y="197" width="1.4360%" height="15" fill="rgb(207,177,25)" fg:x="14415" fg:w="217"/><text x="95.6441%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::write (212 samples, 1.40%)</title><rect x="95.4272%" y="181" width="1.4030%" height="15" fill="rgb(211,178,42)" fg:x="14420" fg:w="212"/><text x="95.6772%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::num::dec2flt::extract_sign (2 samples, 0.01%)</title><rect x="97.0353%" y="181" width="0.0132%" height="15" fill="rgb(230,69,54)" fg:x="14663" fg:w="2"/><text x="97.2853%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::num::dec2flt::dec2flt (40 samples, 0.26%)</title><rect x="96.8301%" y="197" width="0.2647%" height="15" fill="rgb(214,135,41)" fg:x="14632" fg:w="40"/><text x="97.0801%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::num::dec2flt::parse::parse_decimal (7 samples, 0.05%)</title><rect x="97.0485%" y="181" width="0.0463%" height="15" fill="rgb(237,67,25)" fg:x="14665" fg:w="7"/><text x="97.2985%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (3 samples, 0.02%)</title><rect x="97.0948%" y="197" width="0.0199%" height="15" fill="rgb(222,189,50)" fg:x="14672" fg:w="3"/><text x="97.3448%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (14 samples, 0.09%)</title><rect x="97.1676%" y="181" width="0.0926%" height="15" fill="rgb(245,148,34)" fg:x="14683" fg:w="14"/><text x="97.4176%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (10 samples, 0.07%)</title><rect x="97.1941%" y="165" width="0.0662%" height="15" fill="rgb(222,29,6)" fg:x="14687" fg:w="10"/><text x="97.4441%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free (23 samples, 0.15%)</title><rect x="97.1147%" y="197" width="0.1522%" height="15" fill="rgb(221,189,43)" fg:x="14675" fg:w="23"/><text x="97.3647%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`emath::round_to_decimals (303 samples, 2.01%)</title><rect x="95.3742%" y="213" width="2.0052%" height="15" fill="rgb(207,36,27)" fg:x="14412" fg:w="303"/><text x="95.6242%" y="223.50">b..</text></g><g><title>libsystem_malloc.dylib`free_tiny (17 samples, 0.11%)</title><rect x="97.2669%" y="197" width="0.1125%" height="15" fill="rgb(217,90,24)" fg:x="14698" fg:w="17"/><text x="97.5169%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;epaint::text::fonts::LayoutJob as core::hash::Hash&gt;::hash (2 samples, 0.01%)</title><rect x="97.6706%" y="181" width="0.0132%" height="15" fill="rgb(224,66,35)" fg:x="14759" fg:w="2"/><text x="97.9206%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (19 samples, 0.13%)</title><rect x="97.6838%" y="181" width="0.1257%" height="15" fill="rgb(221,13,50)" fg:x="14761" fg:w="19"/><text x="97.9338%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (7 samples, 0.05%)</title><rect x="97.7632%" y="165" width="0.0463%" height="15" fill="rgb(236,68,49)" fg:x="14773" fg:w="7"/><text x="98.0132%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (9 samples, 0.06%)</title><rect x="97.8294%" y="165" width="0.0596%" height="15" fill="rgb(229,146,28)" fg:x="14783" fg:w="9"/><text x="98.0794%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (7 samples, 0.05%)</title><rect x="97.8426%" y="149" width="0.0463%" height="15" fill="rgb(225,31,38)" fg:x="14785" fg:w="7"/><text x="98.0926%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free (13 samples, 0.09%)</title><rect x="97.8095%" y="181" width="0.0860%" height="15" fill="rgb(250,208,3)" fg:x="14780" fg:w="13"/><text x="98.0595%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`epaint::text::fonts::GalleyCache::layout (79 samples, 0.52%)</title><rect x="97.5382%" y="197" width="0.5228%" height="15" fill="rgb(246,54,23)" fg:x="14739" fg:w="79"/><text x="97.7882%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (25 samples, 0.17%)</title><rect x="97.8956%" y="181" width="0.1654%" height="15" fill="rgb(243,76,11)" fg:x="14793" fg:w="25"/><text x="98.1456%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`epaint::text::fonts::Fonts::layout_single_line (107 samples, 0.71%)</title><rect x="97.3794%" y="213" width="0.7081%" height="15" fill="rgb(245,21,50)" fg:x="14715" fg:w="107"/><text x="97.6294%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (2 samples, 0.01%)</title><rect x="98.0743%" y="197" width="0.0132%" height="15" fill="rgb(228,9,43)" fg:x="14820" fg:w="2"/><text x="98.3243%" y="207.50"></text></g><g><title>libsystem_m.dylib`0x00007fff6b1acc70 (87 samples, 0.58%)</title><rect x="98.0875%" y="213" width="0.5757%" height="15" fill="rgb(208,100,47)" fg:x="14822" fg:w="87"/><text x="98.3375%" y="223.50"></text></g><g><title>libsystem_m.dylib`roundf (30 samples, 0.20%)</title><rect x="98.6632%" y="213" width="0.1985%" height="15" fill="rgb(232,26,8)" fg:x="14909" fg:w="30"/><text x="98.9132%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (7 samples, 0.05%)</title><rect x="98.8618%" y="213" width="0.0463%" height="15" fill="rgb(216,166,38)" fg:x="14939" fg:w="7"/><text x="99.1118%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (5 samples, 0.03%)</title><rect x="98.8750%" y="197" width="0.0331%" height="15" fill="rgb(251,202,51)" fg:x="14941" fg:w="5"/><text x="99.1250%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (5 samples, 0.03%)</title><rect x="98.8750%" y="181" width="0.0331%" height="15" fill="rgb(254,216,34)" fg:x="14941" fg:w="5"/><text x="99.1250%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (4 samples, 0.03%)</title><rect x="98.9081%" y="213" width="0.0265%" height="15" fill="rgb(251,32,27)" fg:x="14946" fg:w="4"/><text x="99.1581%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (2 samples, 0.01%)</title><rect x="98.9346%" y="213" width="0.0132%" height="15" fill="rgb(208,127,28)" fg:x="14950" fg:w="2"/><text x="99.1846%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;egui::widgets::plot::Plot as egui::widgets::Widget&gt;::ui (1,428 samples, 9.45%)</title><rect x="89.5904%" y="229" width="9.4501%" height="15" fill="rgb(224,137,22)" fg:x="13538" fg:w="1428"/><text x="89.8404%" y="239.50">benchmark-022a..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (14 samples, 0.09%)</title><rect x="98.9478%" y="213" width="0.0926%" height="15" fill="rgb(254,70,32)" fg:x="14952" fg:w="14"/><text x="99.1978%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;egui::widgets::plot::items::Line as egui::widgets::plot::items::PlotItem&gt;::closest (2 samples, 0.01%)</title><rect x="99.0404%" y="229" width="0.0132%" height="15" fill="rgb(229,75,37)" fg:x="14966" fg:w="2"/><text x="99.2904%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;epaint::color::Rgba as core::convert::From&lt;epaint::color::Hsva&gt;&gt;::from (3 samples, 0.02%)</title><rect x="99.0735%" y="181" width="0.0199%" height="15" fill="rgb(252,64,23)" fg:x="14971" fg:w="3"/><text x="99.3235%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;epaint::color::Color32 as core::convert::From&lt;epaint::color::Hsva&gt;&gt;::from (5 samples, 0.03%)</title><rect x="99.0735%" y="197" width="0.0331%" height="15" fill="rgb(232,162,48)" fg:x="14971" fg:w="5"/><text x="99.3235%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;epaint::color::Color32 as core::convert::From&lt;epaint::color::Rgba&gt;&gt;::from (5 samples, 0.03%)</title><rect x="99.1066%" y="197" width="0.0331%" height="15" fill="rgb(246,160,12)" fg:x="14976" fg:w="5"/><text x="99.3566%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.02%)</title><rect x="99.1397%" y="197" width="0.0199%" height="15" fill="rgb(247,166,0)" fg:x="14981" fg:w="3"/><text x="99.3897%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::finish_grow (3 samples, 0.02%)</title><rect x="99.1397%" y="181" width="0.0199%" height="15" fill="rgb(249,219,21)" fg:x="14981" fg:w="3"/><text x="99.3897%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`realloc (3 samples, 0.02%)</title><rect x="99.1397%" y="165" width="0.0199%" height="15" fill="rgb(205,209,3)" fg:x="14981" fg:w="3"/><text x="99.3897%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (2 samples, 0.01%)</title><rect x="99.1463%" y="149" width="0.0132%" height="15" fill="rgb(243,44,1)" fg:x="14982" fg:w="2"/><text x="99.3963%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (2 samples, 0.01%)</title><rect x="99.1463%" y="133" width="0.0132%" height="15" fill="rgb(206,159,16)" fg:x="14982" fg:w="2"/><text x="99.3963%" y="143.50"></text></g><g><title>libsystem_m.dylib`0x00007fff6b1acc70 (25 samples, 0.17%)</title><rect x="99.1596%" y="197" width="0.1654%" height="15" fill="rgb(244,77,30)" fg:x="14984" fg:w="25"/><text x="99.4096%" y="207.50"></text></g><g><title>libsystem_m.dylib`roundf (6 samples, 0.04%)</title><rect x="99.3250%" y="197" width="0.0397%" height="15" fill="rgb(218,69,12)" fg:x="15009" fg:w="6"/><text x="99.5750%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (24 samples, 0.16%)</title><rect x="99.3713%" y="181" width="0.1588%" height="15" fill="rgb(212,87,7)" fg:x="15016" fg:w="24"/><text x="99.6213%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (22 samples, 0.15%)</title><rect x="99.3846%" y="165" width="0.1456%" height="15" fill="rgb(245,114,25)" fg:x="15018" fg:w="22"/><text x="99.6346%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (22 samples, 0.15%)</title><rect x="99.3846%" y="149" width="0.1456%" height="15" fill="rgb(210,61,42)" fg:x="15018" fg:w="22"/><text x="99.6346%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (6 samples, 0.04%)</title><rect x="99.4904%" y="133" width="0.0397%" height="15" fill="rgb(211,52,33)" fg:x="15034" fg:w="6"/><text x="99.7404%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc (26 samples, 0.17%)</title><rect x="99.3647%" y="197" width="0.1721%" height="15" fill="rgb(234,58,33)" fg:x="15015" fg:w="26"/><text x="99.6147%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::widgets::plot::Plot::line (72 samples, 0.48%)</title><rect x="99.0669%" y="213" width="0.4765%" height="15" fill="rgb(220,115,36)" fg:x="14970" fg:w="72"/><text x="99.3169%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::widgets::plot::Plot::new (2 samples, 0.01%)</title><rect x="99.5434%" y="213" width="0.0132%" height="15" fill="rgb(243,153,54)" fg:x="15042" fg:w="2"/><text x="99.7934%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::write (2 samples, 0.01%)</title><rect x="99.5434%" y="197" width="0.0132%" height="15" fill="rgb(251,47,18)" fg:x="15042" fg:w="2"/><text x="99.7934%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.01%)</title><rect x="99.5434%" y="181" width="0.0132%" height="15" fill="rgb(242,102,42)" fg:x="15042" fg:w="2"/><text x="99.7934%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc (18 samples, 0.12%)</title><rect x="99.5566%" y="213" width="0.1191%" height="15" fill="rgb(234,31,38)" fg:x="15044" fg:w="18"/><text x="99.8066%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (18 samples, 0.12%)</title><rect x="99.5566%" y="197" width="0.1191%" height="15" fill="rgb(221,117,51)" fg:x="15044" fg:w="18"/><text x="99.8066%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (16 samples, 0.11%)</title><rect x="99.5698%" y="181" width="0.1059%" height="15" fill="rgb(212,20,18)" fg:x="15046" fg:w="16"/><text x="99.8198%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (16 samples, 0.11%)</title><rect x="99.5698%" y="165" width="0.1059%" height="15" fill="rgb(245,133,36)" fg:x="15046" fg:w="16"/><text x="99.8198%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.03%)</title><rect x="99.6426%" y="149" width="0.0331%" height="15" fill="rgb(212,6,19)" fg:x="15057" fg:w="5"/><text x="99.8926%" y="159.50"></text></g><g><title>benchmark-022a91b58b3cfee0`benchmark::criterion_benchmark::lines_plot (101 samples, 0.67%)</title><rect x="99.0603%" y="229" width="0.6684%" height="15" fill="rgb(218,1,36)" fg:x="14969" fg:w="101"/><text x="99.3103%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (8 samples, 0.05%)</title><rect x="99.6757%" y="213" width="0.0529%" height="15" fill="rgb(246,84,54)" fg:x="15062" fg:w="8"/><text x="99.9257%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::containers::panel::CentralPanel::show (1,541 samples, 10.20%)</title><rect x="89.5904%" y="261" width="10.1979%" height="15" fill="rgb(242,110,6)" fg:x="13538" fg:w="1541"/><text x="89.8404%" y="271.50">benchmark-022a9..</text></g><g><title>benchmark-022a91b58b3cfee0`egui::containers::frame::Frame::show (1,541 samples, 10.20%)</title><rect x="89.5904%" y="245" width="10.1979%" height="15" fill="rgb(214,47,5)" fg:x="13538" fg:w="1541"/><text x="89.8404%" y="255.50">benchmark-022a9..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.02%)</title><rect x="99.7684%" y="229" width="0.0199%" height="15" fill="rgb(218,159,25)" fg:x="15076" fg:w="3"/><text x="100.0184%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::layers::GraphicLayers::drain (18 samples, 0.12%)</title><rect x="99.7949%" y="245" width="0.1191%" height="15" fill="rgb(215,211,28)" fg:x="15080" fg:w="18"/><text x="100.0449%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (15 samples, 0.10%)</title><rect x="99.8147%" y="229" width="0.0993%" height="15" fill="rgb(238,59,32)" fg:x="15083" fg:w="15"/><text x="100.0647%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::context::Context::end_frame (20 samples, 0.13%)</title><rect x="99.7882%" y="261" width="0.1324%" height="15" fill="rgb(226,82,3)" fg:x="15079" fg:w="20"/><text x="100.0382%" y="271.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.01%)</title><rect x="99.9338%" y="245" width="0.0132%" height="15" fill="rgb(240,164,32)" fg:x="15101" fg:w="2"/><text x="100.1838%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::context::CtxRef::begin_frame (6 samples, 0.04%)</title><rect x="99.9206%" y="261" width="0.0397%" height="15" fill="rgb(232,46,7)" fg:x="15099" fg:w="6"/><text x="100.1706%" y="271.50"></text></g><g><title>benchmark-022a91b58b3cfee0`criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (15,103 samples, 99.95%)</title><rect x="0.0199%" y="325" width="99.9471%" height="15" fill="rgb(229,129,53)" fg:x="3" fg:w="15103"/><text x="0.2699%" y="335.50">benchmark-022a91b58b3cfee0`criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>benchmark-022a91b58b3cfee0`criterion::routine::Routine::profile (15,103 samples, 99.95%)</title><rect x="0.0199%" y="309" width="99.9471%" height="15" fill="rgb(234,188,29)" fg:x="3" fg:w="15103"/><text x="0.2699%" y="319.50">benchmark-022a91b58b3cfee0`criterion::routine::Routine::profile</text></g><g><title>benchmark-022a91b58b3cfee0`&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (1,612 samples, 10.67%)</title><rect x="89.2992%" y="293" width="10.6677%" height="15" fill="rgb(246,141,4)" fg:x="13494" fg:w="1612"/><text x="89.5492%" y="303.50">benchmark-022a91..</text></g><g><title>benchmark-022a91b58b3cfee0`criterion::bencher::Bencher&lt;M&gt;::iter (1,612 samples, 10.67%)</title><rect x="89.2992%" y="277" width="10.6677%" height="15" fill="rgb(229,23,39)" fg:x="13494" fg:w="1612"/><text x="89.5492%" y="287.50">benchmark-022a91..</text></g><g><title>benchmark-022a91b58b3cfee0`egui::context::CtxRef::begin_frame (2 samples, 0.01%)</title><rect x="99.9669%" y="325" width="0.0132%" height="15" fill="rgb(206,12,3)" fg:x="15106" fg:w="2"/><text x="100.2169%" y="335.50"></text></g><g><title>benchmark-022a91b58b3cfee0`epaint::text::fonts::Fonts::from_definitions (2 samples, 0.01%)</title><rect x="99.9669%" y="309" width="0.0132%" height="15" fill="rgb(252,226,20)" fg:x="15106" fg:w="2"/><text x="100.2169%" y="319.50"></text></g><g><title>benchmark-022a91b58b3cfee0`main (15,110 samples, 99.99%)</title><rect x="0.0000%" y="405" width="99.9934%" height="15" fill="rgb(216,123,35)" fg:x="0" fg:w="15110"/><text x="0.2500%" y="415.50">benchmark-022a91b58b3cfee0`main</text></g><g><title>benchmark-022a91b58b3cfee0`std::rt::lang_start_internal (15,110 samples, 99.99%)</title><rect x="0.0000%" y="389" width="99.9934%" height="15" fill="rgb(212,68,40)" fg:x="0" fg:w="15110"/><text x="0.2500%" y="399.50">benchmark-022a91b58b3cfee0`std::rt::lang_start_internal</text></g><g><title>benchmark-022a91b58b3cfee0`std::rt::lang_start::_{{closure}} (15,110 samples, 99.99%)</title><rect x="0.0000%" y="373" width="99.9934%" height="15" fill="rgb(254,125,32)" fg:x="0" fg:w="15110"/><text x="0.2500%" y="383.50">benchmark-022a91b58b3cfee0`std::rt::lang_start::_{{closure}}</text></g><g><title>benchmark-022a91b58b3cfee0`std::sys_common::backtrace::__rust_begin_short_backtrace (15,110 samples, 99.99%)</title><rect x="0.0000%" y="357" width="99.9934%" height="15" fill="rgb(253,97,22)" fg:x="0" fg:w="15110"/><text x="0.2500%" y="367.50">benchmark-022a91b58b3cfee0`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>benchmark-022a91b58b3cfee0`benchmark::main (15,110 samples, 99.99%)</title><rect x="0.0000%" y="341" width="99.9934%" height="15" fill="rgb(241,101,14)" fg:x="0" fg:w="15110"/><text x="0.2500%" y="351.50">benchmark-022a91b58b3cfee0`benchmark::main</text></g><g><title>all (15,111 samples, 100%)</title><rect x="0.0000%" y="453" width="100.0000%" height="15" fill="rgb(238,103,29)" fg:x="0" fg:w="15111"/><text x="0.2500%" y="463.50"></text></g><g><title>benchmark-022a91b58b3cfee0`0x5 (15,111 samples, 100.00%)</title><rect x="0.0000%" y="437" width="100.0000%" height="15" fill="rgb(233,195,47)" fg:x="0" fg:w="15111"/><text x="0.2500%" y="447.50">benchmark-022a91b58b3cfee0`0x5</text></g><g><title>libdyld.dylib`start (15,111 samples, 100.00%)</title><rect x="0.0000%" y="421" width="100.0000%" height="15" fill="rgb(246,218,30)" fg:x="0" fg:w="15111"/><text x="0.2500%" y="431.50">libdyld.dylib`start</text></g></svg></svg>