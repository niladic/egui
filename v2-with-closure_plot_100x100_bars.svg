<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="502" onload="init(evt)" viewBox="0 0 1200 502" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="502" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="485.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="485.00"> </text><svg id="frames" x="10" width="1180" total_samples="14891"><g><title>benchmark-022a91b58b3cfee0`core::ptr::drop_in_place&lt;(egui::data::output::Output,alloc::vec::Vec&lt;epaint::ClippedShape&gt;)&gt; (199 samples, 1.34%)</title><rect x="0.0269%" y="261" width="1.3364%" height="15" fill="rgb(227,0,7)" fg:x="4" fg:w="199"/><text x="0.2769%" y="271.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::ptr::drop_in_place&lt;epaint::shape::Shape&gt; (176 samples, 1.18%)</title><rect x="0.1813%" y="245" width="1.1819%" height="15" fill="rgb(217,0,24)" fg:x="27" fg:w="176"/><text x="0.4313%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::ptr::drop_in_place&lt;epaint::shape::Shape&gt; (16 samples, 0.11%)</title><rect x="1.3632%" y="261" width="0.1074%" height="15" fill="rgb(221,193,54)" fg:x="203" fg:w="16"/><text x="1.6132%" y="271.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::widgets::plot::transform::ScreenTransform::rect_from_values (780 samples, 5.24%)</title><rect x="5.1239%" y="197" width="5.2381%" height="15" fill="rgb(248,212,6)" fg:x="763" fg:w="780"/><text x="5.3739%" y="207.50">benchm..</text></g><g><title>benchmark-022a91b58b3cfee0`emath::rect::Rect::extend_with (264 samples, 1.77%)</title><rect x="8.5891%" y="181" width="1.7729%" height="15" fill="rgb(208,68,35)" fg:x="1279" fg:w="264"/><text x="8.8391%" y="191.50">b..</text></g><g><title>benchmark-022a91b58b3cfee0`emath::rect::Rect::extend_with (35 samples, 0.24%)</title><rect x="10.3620%" y="197" width="0.2350%" height="15" fill="rgb(232,128,0)" fg:x="1543" fg:w="35"/><text x="10.6120%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.01%)</title><rect x="10.6239%" y="165" width="0.0134%" height="15" fill="rgb(207,160,47)" fg:x="1582" fg:w="2"/><text x="10.8739%" y="175.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;egui::widgets::plot::items::BarChart as egui::widgets::plot::items::PlotItem&gt;::closest (1,208 samples, 8.11%)</title><rect x="2.6526%" y="213" width="8.1123%" height="15" fill="rgb(228,23,34)" fg:x="395" fg:w="1208"/><text x="2.9026%" y="223.50">benchmark-0..</text></g><g><title>libsystem_malloc.dylib`malloc (25 samples, 0.17%)</title><rect x="10.5970%" y="197" width="0.1679%" height="15" fill="rgb(218,30,26)" fg:x="1578" fg:w="25"/><text x="10.8470%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (23 samples, 0.15%)</title><rect x="10.6104%" y="181" width="0.1545%" height="15" fill="rgb(220,122,19)" fg:x="1580" fg:w="23"/><text x="10.8604%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (19 samples, 0.13%)</title><rect x="10.6373%" y="165" width="0.1276%" height="15" fill="rgb(250,228,42)" fg:x="1584" fg:w="19"/><text x="10.8873%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (16 samples, 0.11%)</title><rect x="10.6574%" y="149" width="0.1074%" height="15" fill="rgb(240,193,28)" fg:x="1587" fg:w="16"/><text x="10.9074%" y="159.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;egui::widgets::plot::items::BarChart as egui::widgets::plot::items::PlotItem&gt;::get_bounds (390 samples, 2.62%)</title><rect x="10.7649%" y="213" width="2.6190%" height="15" fill="rgb(216,20,37)" fg:x="1603" fg:w="390"/><text x="11.0149%" y="223.50">be..</text></g><g><title>benchmark-022a91b58b3cfee0`DYLD-STUB$$memmove (9 samples, 0.06%)</title><rect x="13.5787%" y="197" width="0.0604%" height="15" fill="rgb(206,188,39)" fg:x="2022" fg:w="9"/><text x="13.8287%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (10 samples, 0.07%)</title><rect x="15.4523%" y="181" width="0.0672%" height="15" fill="rgb(217,207,13)" fg:x="2301" fg:w="10"/><text x="15.7023%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::finish_grow (10 samples, 0.07%)</title><rect x="15.4523%" y="165" width="0.0672%" height="15" fill="rgb(231,73,38)" fg:x="2301" fg:w="10"/><text x="15.7023%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`realloc (10 samples, 0.07%)</title><rect x="15.4523%" y="149" width="0.0672%" height="15" fill="rgb(225,20,46)" fg:x="2301" fg:w="10"/><text x="15.7023%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (9 samples, 0.06%)</title><rect x="15.4590%" y="133" width="0.0604%" height="15" fill="rgb(210,31,41)" fg:x="2302" fg:w="9"/><text x="15.7090%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (8 samples, 0.05%)</title><rect x="15.4657%" y="117" width="0.0537%" height="15" fill="rgb(221,200,47)" fg:x="2303" fg:w="8"/><text x="15.7157%" y="127.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (8 samples, 0.05%)</title><rect x="15.4657%" y="101" width="0.0537%" height="15" fill="rgb(226,26,5)" fg:x="2303" fg:w="8"/><text x="15.7157%" y="111.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::widgets::plot::transform::ScreenTransform::rect_from_values (815 samples, 5.47%)</title><rect x="15.5194%" y="181" width="5.4731%" height="15" fill="rgb(249,33,26)" fg:x="2311" fg:w="815"/><text x="15.7694%" y="191.50">benchma..</text></g><g><title>benchmark-022a91b58b3cfee0`emath::rect::Rect::extend_with (287 samples, 1.93%)</title><rect x="19.0652%" y="165" width="1.9273%" height="15" fill="rgb(235,183,28)" fg:x="2839" fg:w="287"/><text x="19.3152%" y="175.50">b..</text></g><g><title>benchmark-022a91b58b3cfee0`emath::rect::Rect::extend_with (25 samples, 0.17%)</title><rect x="20.9925%" y="181" width="0.1679%" height="15" fill="rgb(221,5,38)" fg:x="3126" fg:w="25"/><text x="21.2425%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::widgets::plot::items::Bar::shapes (1,452 samples, 9.75%)</title><rect x="13.6391%" y="197" width="9.7509%" height="15" fill="rgb(247,18,42)" fg:x="2031" fg:w="1452"/><text x="13.8891%" y="207.50">benchmark-022a..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (332 samples, 2.23%)</title><rect x="21.1604%" y="181" width="2.2295%" height="15" fill="rgb(241,131,45)" fg:x="3151" fg:w="332"/><text x="21.4104%" y="191.50">l..</text></g><g><title>benchmark-022a91b58b3cfee0`egui::widgets::plot::transform::ScreenTransform::rect_from_values (37 samples, 0.25%)</title><rect x="23.3900%" y="197" width="0.2485%" height="15" fill="rgb(249,31,29)" fg:x="3483" fg:w="37"/><text x="23.6400%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;egui::widgets::plot::items::BarChart as egui::widgets::plot::items::PlotItem&gt;::get_shapes (1,571 samples, 10.55%)</title><rect x="13.3839%" y="213" width="10.5500%" height="15" fill="rgb(225,111,53)" fg:x="1993" fg:w="1571"/><text x="13.6339%" y="223.50">benchmark-022a9..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (44 samples, 0.30%)</title><rect x="23.6384%" y="197" width="0.2955%" height="15" fill="rgb(238,160,17)" fg:x="3520" fg:w="44"/><text x="23.8884%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;epaint::color::Color32 as core::convert::From&lt;epaint::color::Rgba&gt;&gt;::from (154 samples, 1.03%)</title><rect x="23.9406%" y="213" width="1.0342%" height="15" fill="rgb(214,148,48)" fg:x="3565" fg:w="154"/><text x="24.1906%" y="223.50"></text></g><g><title>libsystem_m.dylib`roundf (5 samples, 0.03%)</title><rect x="24.9412%" y="197" width="0.0336%" height="15" fill="rgb(232,36,49)" fg:x="3714" fg:w="5"/><text x="25.1912%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`DYLD-STUB$$roundf (6 samples, 0.04%)</title><rect x="24.9748%" y="213" width="0.0403%" height="15" fill="rgb(209,103,24)" fg:x="3719" fg:w="6"/><text x="25.2248%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (6 samples, 0.04%)</title><rect x="25.0285%" y="165" width="0.0403%" height="15" fill="rgb(229,88,8)" fg:x="3727" fg:w="6"/><text x="25.2785%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (5 samples, 0.03%)</title><rect x="25.0353%" y="149" width="0.0336%" height="15" fill="rgb(213,181,19)" fg:x="3728" fg:w="5"/><text x="25.2853%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.01%)</title><rect x="25.0554%" y="133" width="0.0134%" height="15" fill="rgb(254,191,54)" fg:x="3731" fg:w="2"/><text x="25.3054%" y="143.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (10 samples, 0.07%)</title><rect x="25.0285%" y="213" width="0.0672%" height="15" fill="rgb(241,83,37)" fg:x="3727" fg:w="10"/><text x="25.2785%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::finish_grow (10 samples, 0.07%)</title><rect x="25.0285%" y="197" width="0.0672%" height="15" fill="rgb(233,36,39)" fg:x="3727" fg:w="10"/><text x="25.2785%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`realloc (10 samples, 0.07%)</title><rect x="25.0285%" y="181" width="0.0672%" height="15" fill="rgb(226,3,54)" fg:x="3727" fg:w="10"/><text x="25.2785%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (2 samples, 0.01%)</title><rect x="25.0823%" y="165" width="0.0134%" height="15" fill="rgb(245,192,40)" fg:x="3735" fg:w="2"/><text x="25.3323%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.01%)</title><rect x="25.0823%" y="149" width="0.0134%" height="15" fill="rgb(238,167,29)" fg:x="3735" fg:w="2"/><text x="25.3323%" y="159.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::slice::merge_sort (4 samples, 0.03%)</title><rect x="25.0957%" y="213" width="0.0269%" height="15" fill="rgb(232,182,51)" fg:x="3737" fg:w="4"/><text x="25.3457%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::vec::Vec&lt;T,A&gt;::retain (9 samples, 0.06%)</title><rect x="25.1226%" y="213" width="0.0604%" height="15" fill="rgb(231,60,39)" fg:x="3741" fg:w="9"/><text x="25.3726%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (8 samples, 0.05%)</title><rect x="25.1293%" y="197" width="0.0537%" height="15" fill="rgb(208,69,12)" fg:x="3742" fg:w="8"/><text x="25.3793%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::Formatter::pad_formatted_parts (3 samples, 0.02%)</title><rect x="25.3039%" y="181" width="0.0201%" height="15" fill="rgb(235,93,37)" fg:x="3768" fg:w="3"/><text x="25.5539%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (43 samples, 0.29%)</title><rect x="25.4180%" y="101" width="0.2888%" height="15" fill="rgb(213,116,39)" fg:x="3785" fg:w="43"/><text x="25.6680%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (41 samples, 0.28%)</title><rect x="25.4315%" y="85" width="0.2753%" height="15" fill="rgb(222,207,29)" fg:x="3787" fg:w="41"/><text x="25.6815%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (37 samples, 0.25%)</title><rect x="25.4583%" y="69" width="0.2485%" height="15" fill="rgb(206,96,30)" fg:x="3791" fg:w="37"/><text x="25.7083%" y="79.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::finish_grow (50 samples, 0.34%)</title><rect x="25.3777%" y="133" width="0.3358%" height="15" fill="rgb(218,138,4)" fg:x="3779" fg:w="50"/><text x="25.6277%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc (45 samples, 0.30%)</title><rect x="25.4113%" y="117" width="0.3022%" height="15" fill="rgb(250,191,14)" fg:x="3784" fg:w="45"/><text x="25.6613%" y="127.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (53 samples, 0.36%)</title><rect x="25.3643%" y="149" width="0.3559%" height="15" fill="rgb(239,60,40)" fg:x="3777" fg:w="53"/><text x="25.6143%" y="159.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (60 samples, 0.40%)</title><rect x="25.3509%" y="165" width="0.4029%" height="15" fill="rgb(206,27,48)" fg:x="3775" fg:w="60"/><text x="25.6009%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (4 samples, 0.03%)</title><rect x="25.7269%" y="149" width="0.0269%" height="15" fill="rgb(225,35,8)" fg:x="3831" fg:w="4"/><text x="25.9769%" y="159.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::Formatter::write_formatted_parts (65 samples, 0.44%)</title><rect x="25.3240%" y="181" width="0.4365%" height="15" fill="rgb(250,213,24)" fg:x="3771" fg:w="65"/><text x="25.5740%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::float::float_to_decimal_common_shortest (117 samples, 0.79%)</title><rect x="25.2233%" y="197" width="0.7857%" height="15" fill="rgb(247,123,22)" fg:x="3756" fg:w="117"/><text x="25.4733%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::num::flt2dec::strategy::grisu::format_shortest_opt (37 samples, 0.25%)</title><rect x="25.7605%" y="181" width="0.2485%" height="15" fill="rgb(231,138,38)" fg:x="3836" fg:w="37"/><text x="26.0105%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::write (124 samples, 0.83%)</title><rect x="25.1830%" y="213" width="0.8327%" height="15" fill="rgb(231,145,46)" fg:x="3750" fg:w="124"/><text x="25.4330%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`small_size (3 samples, 0.02%)</title><rect x="26.4724%" y="165" width="0.0201%" height="15" fill="rgb(251,118,11)" fg:x="3942" fg:w="3"/><text x="26.7224%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.03%)</title><rect x="26.4657%" y="181" width="0.0336%" height="15" fill="rgb(217,147,25)" fg:x="3941" fg:w="5"/><text x="26.7157%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (10 samples, 0.07%)</title><rect x="26.5865%" y="165" width="0.0672%" height="15" fill="rgb(247,81,37)" fg:x="3959" fg:w="10"/><text x="26.8365%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_find_by_ptr (3 samples, 0.02%)</title><rect x="26.6537%" y="165" width="0.0201%" height="15" fill="rgb(209,12,38)" fg:x="3969" fg:w="3"/><text x="26.9037%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr (2 samples, 0.01%)</title><rect x="26.6738%" y="165" width="0.0134%" height="15" fill="rgb(227,1,9)" fg:x="3972" fg:w="2"/><text x="26.9238%" y="175.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::ptr::drop_in_place&lt;egui::widgets::plot::items::BarChart&gt; (107 samples, 0.72%)</title><rect x="26.0157%" y="197" width="0.7186%" height="15" fill="rgb(248,47,43)" fg:x="3874" fg:w="107"/><text x="26.2657%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_small (35 samples, 0.24%)</title><rect x="26.4992%" y="181" width="0.2350%" height="15" fill="rgb(221,10,30)" fg:x="3946" fg:w="35"/><text x="26.7492%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (7 samples, 0.05%)</title><rect x="26.6873%" y="165" width="0.0470%" height="15" fill="rgb(210,229,1)" fg:x="3974" fg:w="7"/><text x="26.9373%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free (8 samples, 0.05%)</title><rect x="26.7343%" y="197" width="0.0537%" height="15" fill="rgb(222,148,37)" fg:x="3981" fg:w="8"/><text x="26.9843%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (7 samples, 0.05%)</title><rect x="26.7410%" y="181" width="0.0470%" height="15" fill="rgb(234,67,33)" fg:x="3982" fg:w="7"/><text x="26.9910%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (7 samples, 0.05%)</title><rect x="26.7410%" y="165" width="0.0470%" height="15" fill="rgb(247,98,35)" fg:x="3982" fg:w="7"/><text x="26.9910%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_small (2 samples, 0.01%)</title><rect x="26.7880%" y="197" width="0.0134%" height="15" fill="rgb(247,138,52)" fg:x="3989" fg:w="2"/><text x="27.0380%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (2 samples, 0.01%)</title><rect x="26.7880%" y="181" width="0.0134%" height="15" fill="rgb(213,79,30)" fg:x="3989" fg:w="2"/><text x="27.0380%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (8 samples, 0.05%)</title><rect x="26.9290%" y="165" width="0.0537%" height="15" fill="rgb(246,177,23)" fg:x="4010" fg:w="8"/><text x="27.1790%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (32 samples, 0.21%)</title><rect x="26.8014%" y="197" width="0.2149%" height="15" fill="rgb(230,62,27)" fg:x="3991" fg:w="32"/><text x="27.0514%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (21 samples, 0.14%)</title><rect x="26.8753%" y="181" width="0.1410%" height="15" fill="rgb(216,154,8)" fg:x="4002" fg:w="21"/><text x="27.1253%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (5 samples, 0.03%)</title><rect x="26.9827%" y="165" width="0.0336%" height="15" fill="rgb(244,35,45)" fg:x="4018" fg:w="5"/><text x="27.2327%" y="175.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::ptr::drop_in_place&lt;egui::widgets::plot::Prepared&gt; (151 samples, 1.01%)</title><rect x="26.0157%" y="213" width="1.0140%" height="15" fill="rgb(251,115,12)" fg:x="3874" fg:w="151"/><text x="26.2657%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::any::serializable::any_map::AnyMap&lt;Key&gt;::insert (4 samples, 0.03%)</title><rect x="27.0297%" y="213" width="0.0269%" height="15" fill="rgb(240,54,50)" fg:x="4025" fg:w="4"/><text x="27.2797%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1,089 samples, 7.31%)</title><rect x="27.0700%" y="181" width="7.3131%" height="15" fill="rgb(233,84,52)" fg:x="4031" fg:w="1089"/><text x="27.3200%" y="191.50">benchmark-..</text></g><g><title>benchmark-022a91b58b3cfee0`egui::painter::Painter::extend (1,091 samples, 7.33%)</title><rect x="27.0700%" y="213" width="7.3266%" height="15" fill="rgb(207,117,47)" fg:x="4031" fg:w="1091"/><text x="27.3200%" y="223.50">benchmark-..</text></g><g><title>benchmark-022a91b58b3cfee0`egui::layers::PaintList::extend (1,091 samples, 7.33%)</title><rect x="27.0700%" y="197" width="7.3266%" height="15" fill="rgb(249,43,39)" fg:x="4031" fg:w="1091"/><text x="27.3200%" y="207.50">benchmark-..</text></g><g><title>libsystem_malloc.dylib`free_medium (2 samples, 0.01%)</title><rect x="34.3832%" y="181" width="0.0134%" height="15" fill="rgb(209,38,44)" fg:x="5120" fg:w="2"/><text x="34.6332%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::widgets::plot::items::Bar::shapes (14 samples, 0.09%)</title><rect x="34.4033%" y="213" width="0.0940%" height="15" fill="rgb(236,212,23)" fg:x="5123" fg:w="14"/><text x="34.6533%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::widgets::plot::items::Values::generate_points (2 samples, 0.01%)</title><rect x="34.4973%" y="213" width="0.0134%" height="15" fill="rgb(242,79,21)" fg:x="5137" fg:w="2"/><text x="34.7473%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::widgets::plot::items::rulers_at_value (4 samples, 0.03%)</title><rect x="34.5108%" y="213" width="0.0269%" height="15" fill="rgb(211,96,35)" fg:x="5139" fg:w="4"/><text x="34.7608%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::fmt::format (4 samples, 0.03%)</title><rect x="34.5108%" y="197" width="0.0269%" height="15" fill="rgb(253,215,40)" fg:x="5139" fg:w="4"/><text x="34.7608%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::write (4 samples, 0.03%)</title><rect x="34.5108%" y="181" width="0.0269%" height="15" fill="rgb(211,81,21)" fg:x="5139" fg:w="4"/><text x="34.7608%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::float::float_to_decimal_common_exact (2 samples, 0.01%)</title><rect x="34.5242%" y="165" width="0.0134%" height="15" fill="rgb(208,190,38)" fg:x="5141" fg:w="2"/><text x="34.7742%" y="175.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::widgets::plot::transform::ScreenTransform::rect_from_values (20 samples, 0.13%)</title><rect x="34.5376%" y="213" width="0.1343%" height="15" fill="rgb(235,213,38)" fg:x="5143" fg:w="20"/><text x="34.7876%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (5 samples, 0.03%)</title><rect x="34.7727%" y="165" width="0.0336%" height="15" fill="rgb(237,122,38)" fg:x="5178" fg:w="5"/><text x="35.0227%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.01%)</title><rect x="34.7928%" y="149" width="0.0134%" height="15" fill="rgb(244,218,35)" fg:x="5181" fg:w="2"/><text x="35.0428%" y="159.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::Formatter::pad_formatted_parts (2 samples, 0.01%)</title><rect x="34.9137%" y="149" width="0.0134%" height="15" fill="rgb(240,68,47)" fg:x="5199" fg:w="2"/><text x="35.1637%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc (42 samples, 0.28%)</title><rect x="35.0077%" y="85" width="0.2820%" height="15" fill="rgb(210,16,53)" fg:x="5213" fg:w="42"/><text x="35.2577%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (41 samples, 0.28%)</title><rect x="35.0144%" y="69" width="0.2753%" height="15" fill="rgb(235,124,12)" fg:x="5214" fg:w="41"/><text x="35.2644%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (38 samples, 0.26%)</title><rect x="35.0346%" y="53" width="0.2552%" height="15" fill="rgb(224,169,11)" fg:x="5217" fg:w="38"/><text x="35.2846%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (33 samples, 0.22%)</title><rect x="35.0682%" y="37" width="0.2216%" height="15" fill="rgb(250,166,2)" fg:x="5222" fg:w="33"/><text x="35.3182%" y="47.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (48 samples, 0.32%)</title><rect x="34.9809%" y="117" width="0.3223%" height="15" fill="rgb(242,216,29)" fg:x="5209" fg:w="48"/><text x="35.2309%" y="127.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::finish_grow (45 samples, 0.30%)</title><rect x="35.0010%" y="101" width="0.3022%" height="15" fill="rgb(230,116,27)" fg:x="5212" fg:w="45"/><text x="35.2510%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`realloc (2 samples, 0.01%)</title><rect x="35.2898%" y="85" width="0.0134%" height="15" fill="rgb(228,99,48)" fg:x="5255" fg:w="2"/><text x="35.5398%" y="95.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (59 samples, 0.40%)</title><rect x="34.9406%" y="133" width="0.3962%" height="15" fill="rgb(253,11,6)" fg:x="5203" fg:w="59"/><text x="35.1906%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (5 samples, 0.03%)</title><rect x="35.3032%" y="117" width="0.0336%" height="15" fill="rgb(247,143,39)" fg:x="5257" fg:w="5"/><text x="35.5532%" y="127.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::Formatter::write_formatted_parts (62 samples, 0.42%)</title><rect x="34.9271%" y="149" width="0.4164%" height="15" fill="rgb(236,97,10)" fg:x="5201" fg:w="62"/><text x="35.1771%" y="159.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::float::float_to_decimal_common_exact (168 samples, 1.13%)</title><rect x="34.8063%" y="165" width="1.1282%" height="15" fill="rgb(233,208,19)" fg:x="5183" fg:w="168"/><text x="35.0563%" y="175.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::num::flt2dec::strategy::grisu::format_exact_opt (88 samples, 0.59%)</title><rect x="35.3435%" y="149" width="0.5910%" height="15" fill="rgb(216,164,2)" fg:x="5263" fg:w="88"/><text x="35.5935%" y="159.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::fmt::format (186 samples, 1.25%)</title><rect x="34.6921%" y="197" width="1.2491%" height="15" fill="rgb(220,129,5)" fg:x="5166" fg:w="186"/><text x="34.9421%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::write (181 samples, 1.22%)</title><rect x="34.7257%" y="181" width="1.2155%" height="15" fill="rgb(242,17,10)" fg:x="5171" fg:w="181"/><text x="34.9757%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;f64 as core::num::dec2flt::rawfp::RawFloat&gt;::from_int (2 samples, 0.01%)</title><rect x="36.0419%" y="181" width="0.0134%" height="15" fill="rgb(242,107,0)" fg:x="5367" fg:w="2"/><text x="36.2919%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::num::dec2flt::dec2flt (20 samples, 0.13%)</title><rect x="35.9412%" y="197" width="0.1343%" height="15" fill="rgb(251,28,31)" fg:x="5352" fg:w="20"/><text x="36.1912%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::num::dec2flt::parse::parse_decimal (3 samples, 0.02%)</title><rect x="36.0553%" y="181" width="0.0201%" height="15" fill="rgb(233,223,10)" fg:x="5369" fg:w="3"/><text x="36.3053%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (5 samples, 0.03%)</title><rect x="36.0822%" y="197" width="0.0336%" height="15" fill="rgb(215,21,27)" fg:x="5373" fg:w="5"/><text x="36.3322%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free (19 samples, 0.13%)</title><rect x="36.1158%" y="197" width="0.1276%" height="15" fill="rgb(232,23,21)" fg:x="5378" fg:w="19"/><text x="36.3658%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (16 samples, 0.11%)</title><rect x="36.1359%" y="181" width="0.1074%" height="15" fill="rgb(244,5,23)" fg:x="5381" fg:w="16"/><text x="36.3859%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (16 samples, 0.11%)</title><rect x="36.1359%" y="165" width="0.1074%" height="15" fill="rgb(226,81,46)" fg:x="5381" fg:w="16"/><text x="36.3859%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (25 samples, 0.17%)</title><rect x="36.2434%" y="197" width="0.1679%" height="15" fill="rgb(247,70,30)" fg:x="5397" fg:w="25"/><text x="36.4934%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`emath::round_to_decimals (260 samples, 1.75%)</title><rect x="34.6719%" y="213" width="1.7460%" height="15" fill="rgb(212,68,19)" fg:x="5163" fg:w="260"/><text x="34.9219%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;epaint::text::fonts::LayoutJob as core::hash::Hash&gt;::hash (5 samples, 0.03%)</title><rect x="36.6732%" y="181" width="0.0336%" height="15" fill="rgb(240,187,13)" fg:x="5461" fg:w="5"/><text x="36.9232%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (12 samples, 0.08%)</title><rect x="36.7135%" y="181" width="0.0806%" height="15" fill="rgb(223,113,26)" fg:x="5467" fg:w="12"/><text x="36.9635%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (3 samples, 0.02%)</title><rect x="36.7739%" y="165" width="0.0201%" height="15" fill="rgb(206,192,2)" fg:x="5476" fg:w="3"/><text x="37.0239%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free (12 samples, 0.08%)</title><rect x="36.7940%" y="181" width="0.0806%" height="15" fill="rgb(241,108,4)" fg:x="5479" fg:w="12"/><text x="37.0440%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (8 samples, 0.05%)</title><rect x="36.8209%" y="165" width="0.0537%" height="15" fill="rgb(247,173,49)" fg:x="5483" fg:w="8"/><text x="37.0709%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (8 samples, 0.05%)</title><rect x="36.8209%" y="149" width="0.0537%" height="15" fill="rgb(224,114,35)" fg:x="5483" fg:w="8"/><text x="37.0709%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (25 samples, 0.17%)</title><rect x="36.8746%" y="181" width="0.1679%" height="15" fill="rgb(245,159,27)" fg:x="5491" fg:w="25"/><text x="37.1246%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`epaint::text::fonts::GalleyCache::layout (70 samples, 0.47%)</title><rect x="36.5791%" y="197" width="0.4701%" height="15" fill="rgb(245,172,44)" fg:x="5447" fg:w="70"/><text x="36.8291%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`epaint::text::fonts::Fonts::layout_single_line (96 samples, 0.64%)</title><rect x="36.4180%" y="213" width="0.6447%" height="15" fill="rgb(236,23,11)" fg:x="5423" fg:w="96"/><text x="36.6680%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (2 samples, 0.01%)</title><rect x="37.0492%" y="197" width="0.0134%" height="15" fill="rgb(205,117,38)" fg:x="5517" fg:w="2"/><text x="37.2992%" y="207.50"></text></g><g><title>libsystem_m.dylib`0x00007fff6b1acc70 (82 samples, 0.55%)</title><rect x="37.0694%" y="213" width="0.5507%" height="15" fill="rgb(237,72,25)" fg:x="5520" fg:w="82"/><text x="37.3194%" y="223.50"></text></g><g><title>libsystem_m.dylib`roundf (95 samples, 0.64%)</title><rect x="37.6200%" y="213" width="0.6380%" height="15" fill="rgb(244,70,9)" fg:x="5602" fg:w="95"/><text x="37.8700%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (5 samples, 0.03%)</title><rect x="38.2849%" y="197" width="0.0336%" height="15" fill="rgb(217,125,39)" fg:x="5701" fg:w="5"/><text x="38.5349%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (3 samples, 0.02%)</title><rect x="38.2983%" y="181" width="0.0201%" height="15" fill="rgb(235,36,10)" fg:x="5703" fg:w="3"/><text x="38.5483%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free (10 samples, 0.07%)</title><rect x="38.2647%" y="213" width="0.0672%" height="15" fill="rgb(251,123,47)" fg:x="5698" fg:w="10"/><text x="38.5147%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.01%)</title><rect x="38.3184%" y="197" width="0.0134%" height="15" fill="rgb(221,13,13)" fg:x="5706" fg:w="2"/><text x="38.5684%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (12 samples, 0.08%)</title><rect x="38.3319%" y="213" width="0.0806%" height="15" fill="rgb(238,131,9)" fg:x="5708" fg:w="12"/><text x="38.5819%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc (3 samples, 0.02%)</title><rect x="38.4125%" y="213" width="0.0201%" height="15" fill="rgb(211,50,8)" fg:x="5720" fg:w="3"/><text x="38.6625%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (3 samples, 0.02%)</title><rect x="38.4326%" y="213" width="0.0201%" height="15" fill="rgb(245,182,24)" fg:x="5723" fg:w="3"/><text x="38.6826%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;egui::widgets::plot::Plot as egui::widgets::Widget&gt;::ui (5,582 samples, 37.49%)</title><rect x="1.4774%" y="229" width="37.4857%" height="15" fill="rgb(242,14,37)" fg:x="220" fg:w="5582"/><text x="1.7274%" y="239.50">benchmark-022a91b58b3cfee0`&lt;egui::widgets::plot::Plot as egui..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (76 samples, 0.51%)</title><rect x="38.4528%" y="213" width="0.5104%" height="15" fill="rgb(246,228,12)" fg:x="5726" fg:w="76"/><text x="38.7028%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`DYLD-STUB$$floor (5 samples, 0.03%)</title><rect x="38.9766%" y="229" width="0.0336%" height="15" fill="rgb(213,55,15)" fg:x="5804" fg:w="5"/><text x="39.2266%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`DYLD-STUB$$memmove (6 samples, 0.04%)</title><rect x="39.0101%" y="229" width="0.0403%" height="15" fill="rgb(209,9,3)" fg:x="5809" fg:w="6"/><text x="39.2601%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`DYLD-STUB$$round (2 samples, 0.01%)</title><rect x="39.0504%" y="229" width="0.0134%" height="15" fill="rgb(230,59,30)" fg:x="5815" fg:w="2"/><text x="39.3004%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::widgets::plot::items::Bar::base_offset (449 samples, 3.02%)</title><rect x="42.2806%" y="197" width="3.0152%" height="15" fill="rgb(209,121,21)" fg:x="6296" fg:w="449"/><text x="42.5306%" y="207.50">ben..</text></g><g><title>benchmark-022a91b58b3cfee0`egui::widgets::plot::items::Bar::new (60 samples, 0.40%)</title><rect x="45.2958%" y="197" width="0.4029%" height="15" fill="rgb(220,109,13)" fg:x="6745" fg:w="60"/><text x="45.5458%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (6 samples, 0.04%)</title><rect x="45.9136%" y="117" width="0.0403%" height="15" fill="rgb(232,18,1)" fg:x="6837" fg:w="6"/><text x="46.1636%" y="127.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,033 samples, 6.94%)</title><rect x="39.0706%" y="213" width="6.9371%" height="15" fill="rgb(215,41,42)" fg:x="5818" fg:w="1033"/><text x="39.3206%" y="223.50">benchmark..</text></g><g><title>libsystem_malloc.dylib`malloc (46 samples, 0.31%)</title><rect x="45.6987%" y="197" width="0.3089%" height="15" fill="rgb(224,123,36)" fg:x="6805" fg:w="46"/><text x="45.9487%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (45 samples, 0.30%)</title><rect x="45.7055%" y="181" width="0.3022%" height="15" fill="rgb(240,125,3)" fg:x="6806" fg:w="45"/><text x="45.9555%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (44 samples, 0.30%)</title><rect x="45.7122%" y="165" width="0.2955%" height="15" fill="rgb(205,98,50)" fg:x="6807" fg:w="44"/><text x="45.9622%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (42 samples, 0.28%)</title><rect x="45.7256%" y="149" width="0.2820%" height="15" fill="rgb(205,185,37)" fg:x="6809" fg:w="42"/><text x="45.9756%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (21 samples, 0.14%)</title><rect x="45.8666%" y="133" width="0.1410%" height="15" fill="rgb(238,207,15)" fg:x="6830" fg:w="21"/><text x="46.1166%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (8 samples, 0.05%)</title><rect x="45.9539%" y="117" width="0.0537%" height="15" fill="rgb(213,199,42)" fg:x="6843" fg:w="8"/><text x="46.2039%" y="127.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;epaint::color::Color32 as core::convert::From&lt;epaint::color::Rgba&gt;&gt;::from (17 samples, 0.11%)</title><rect x="46.0077%" y="213" width="0.1142%" height="15" fill="rgb(235,201,11)" fg:x="6851" fg:w="17"/><text x="46.2577%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;epaint::color::Rgba as core::convert::From&lt;epaint::color::Hsva&gt;&gt;::from (11 samples, 0.07%)</title><rect x="46.5046%" y="181" width="0.0739%" height="15" fill="rgb(207,46,11)" fg:x="6925" fg:w="11"/><text x="46.7546%" y="191.50"></text></g><g><title>libsystem_m.dylib`floorf (3 samples, 0.02%)</title><rect x="46.5785%" y="181" width="0.0201%" height="15" fill="rgb(241,35,35)" fg:x="6936" fg:w="3"/><text x="46.8285%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;epaint::color::Color32 as core::convert::From&lt;epaint::color::Hsva&gt;&gt;::from (15 samples, 0.10%)</title><rect x="46.5046%" y="197" width="0.1007%" height="15" fill="rgb(243,32,47)" fg:x="6925" fg:w="15"/><text x="46.7546%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;epaint::color::Color32 as core::convert::From&lt;epaint::color::Rgba&gt;&gt;::from (1,134 samples, 7.62%)</title><rect x="46.6053%" y="197" width="7.6153%" height="15" fill="rgb(247,202,23)" fg:x="6940" fg:w="1134"/><text x="46.8553%" y="207.50">benchmark-..</text></g><g><title>benchmark-022a91b58b3cfee0`DYLD-STUB$$powf (37 samples, 0.25%)</title><rect x="54.2207%" y="197" width="0.2485%" height="15" fill="rgb(219,102,11)" fg:x="8074" fg:w="37"/><text x="54.4707%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`DYLD-STUB$$roundf (56 samples, 0.38%)</title><rect x="54.4691%" y="197" width="0.3761%" height="15" fill="rgb(243,110,44)" fg:x="8111" fg:w="56"/><text x="54.7191%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (3 samples, 0.02%)</title><rect x="54.8452%" y="117" width="0.0201%" height="15" fill="rgb(222,74,54)" fg:x="8167" fg:w="3"/><text x="55.0952%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.01%)</title><rect x="54.8519%" y="101" width="0.0134%" height="15" fill="rgb(216,99,12)" fg:x="8168" fg:w="2"/><text x="55.1019%" y="111.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.03%)</title><rect x="54.8452%" y="197" width="0.0336%" height="15" fill="rgb(226,22,26)" fg:x="8167" fg:w="5"/><text x="55.0952%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::finish_grow (5 samples, 0.03%)</title><rect x="54.8452%" y="181" width="0.0336%" height="15" fill="rgb(217,163,10)" fg:x="8167" fg:w="5"/><text x="55.0952%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`realloc (5 samples, 0.03%)</title><rect x="54.8452%" y="165" width="0.0336%" height="15" fill="rgb(213,25,53)" fg:x="8167" fg:w="5"/><text x="55.0952%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (5 samples, 0.03%)</title><rect x="54.8452%" y="149" width="0.0336%" height="15" fill="rgb(252,105,26)" fg:x="8167" fg:w="5"/><text x="55.0952%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (5 samples, 0.03%)</title><rect x="54.8452%" y="133" width="0.0336%" height="15" fill="rgb(220,39,43)" fg:x="8167" fg:w="5"/><text x="55.0952%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (2 samples, 0.01%)</title><rect x="54.8654%" y="117" width="0.0134%" height="15" fill="rgb(229,68,48)" fg:x="8170" fg:w="2"/><text x="55.1154%" y="127.50"></text></g><g><title>benchmark-022a91b58b3cfee0`epaint::color::Color32::linear_multiply (233 samples, 1.56%)</title><rect x="54.8788%" y="197" width="1.5647%" height="15" fill="rgb(252,8,32)" fg:x="8172" fg:w="233"/><text x="55.1288%" y="207.50"></text></g><g><title>libsystem_m.dylib`0x00007fff6b1acc70 (4,040 samples, 27.13%)</title><rect x="56.4502%" y="197" width="27.1305%" height="15" fill="rgb(223,20,43)" fg:x="8406" fg:w="4040"/><text x="56.7002%" y="207.50">libsystem_m.dylib`0x00007fff6b1acc70</text></g><g><title>libsystem_m.dylib`roundf (602 samples, 4.04%)</title><rect x="83.5807%" y="197" width="4.0427%" height="15" fill="rgb(229,81,49)" fg:x="12446" fg:w="602"/><text x="83.8307%" y="207.50">libs..</text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.01%)</title><rect x="87.6503%" y="165" width="0.0134%" height="15" fill="rgb(236,28,36)" fg:x="13052" fg:w="2"/><text x="87.9003%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (2 samples, 0.01%)</title><rect x="87.7779%" y="133" width="0.0134%" height="15" fill="rgb(249,185,26)" fg:x="13071" fg:w="2"/><text x="88.0279%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc (43 samples, 0.29%)</title><rect x="87.6234%" y="197" width="0.2888%" height="15" fill="rgb(249,174,33)" fg:x="13048" fg:w="43"/><text x="87.8734%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (41 samples, 0.28%)</title><rect x="87.6368%" y="181" width="0.2753%" height="15" fill="rgb(233,201,37)" fg:x="13050" fg:w="41"/><text x="87.8868%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (37 samples, 0.25%)</title><rect x="87.6637%" y="165" width="0.2485%" height="15" fill="rgb(221,78,26)" fg:x="13054" fg:w="37"/><text x="87.9137%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (35 samples, 0.24%)</title><rect x="87.6771%" y="149" width="0.2350%" height="15" fill="rgb(250,127,30)" fg:x="13056" fg:w="35"/><text x="87.9271%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (18 samples, 0.12%)</title><rect x="87.7913%" y="133" width="0.1209%" height="15" fill="rgb(230,49,44)" fg:x="13073" fg:w="18"/><text x="88.0413%" y="143.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::widgets::plot::Plot::barchart (6,301 samples, 42.31%)</title><rect x="46.1218%" y="213" width="42.3141%" height="15" fill="rgb(229,67,23)" fg:x="6868" fg:w="6301"/><text x="46.3718%" y="223.50">benchmark-022a91b58b3cfee0`egui::widgets::plot::Plot::barchart</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (78 samples, 0.52%)</title><rect x="87.9122%" y="197" width="0.5238%" height="15" fill="rgb(249,83,47)" fg:x="13091" fg:w="78"/><text x="88.1622%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::widgets::plot::items::Bar::base_offset (15 samples, 0.10%)</title><rect x="88.4360%" y="213" width="0.1007%" height="15" fill="rgb(215,43,3)" fg:x="13169" fg:w="15"/><text x="88.6860%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::widgets::plot::items::Bar::new (18 samples, 0.12%)</title><rect x="88.5367%" y="213" width="0.1209%" height="15" fill="rgb(238,154,13)" fg:x="13184" fg:w="18"/><text x="88.7867%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::widgets::plot::items::BoxplotSeries::new (3 samples, 0.02%)</title><rect x="88.6576%" y="213" width="0.0201%" height="15" fill="rgb(219,56,2)" fg:x="13202" fg:w="3"/><text x="88.9076%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`epaint::color::Color32::linear_multiply (24 samples, 0.16%)</title><rect x="88.6777%" y="213" width="0.1612%" height="15" fill="rgb(233,0,4)" fg:x="13205" fg:w="24"/><text x="88.9277%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`benchmark::criterion_benchmark::bars_plot (7,417 samples, 49.81%)</title><rect x="39.0639%" y="229" width="49.8086%" height="15" fill="rgb(235,30,7)" fg:x="5817" fg:w="7417"/><text x="39.3139%" y="239.50">benchmark-022a91b58b3cfee0`benchmark::criterion_benchmark::bars_plot</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (4 samples, 0.03%)</title><rect x="88.8456%" y="213" width="0.0269%" height="15" fill="rgb(250,79,13)" fg:x="13230" fg:w="4"/><text x="89.0956%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::ptr::drop_in_place&lt;&lt;egui::widgets::plot::items::Line as egui::widgets::plot::items::PlotItem&gt;::closest::{{closure}}::{{closure}}&gt; (2 samples, 0.01%)</title><rect x="88.8725%" y="229" width="0.0134%" height="15" fill="rgb(211,146,34)" fg:x="13234" fg:w="2"/><text x="89.1225%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::containers::frame::Prepared::end (2 samples, 0.01%)</title><rect x="88.8926%" y="229" width="0.0134%" height="15" fill="rgb(228,22,38)" fg:x="13237" fg:w="2"/><text x="89.1426%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::context::CtxRef::interact (2 samples, 0.01%)</title><rect x="88.8926%" y="213" width="0.0134%" height="15" fill="rgb(235,168,5)" fg:x="13237" fg:w="2"/><text x="89.1426%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::context::CtxRef::interact_with_hovered (2 samples, 0.01%)</title><rect x="88.8926%" y="197" width="0.0134%" height="15" fill="rgb(221,155,16)" fg:x="13237" fg:w="2"/><text x="89.1426%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`emath::round_to_decimals (2 samples, 0.01%)</title><rect x="88.9061%" y="229" width="0.0134%" height="15" fill="rgb(215,215,53)" fg:x="13239" fg:w="2"/><text x="89.1561%" y="239.50"></text></g><g><title>libsystem_m.dylib`floor (4 samples, 0.03%)</title><rect x="88.9195%" y="229" width="0.0269%" height="15" fill="rgb(223,4,10)" fg:x="13241" fg:w="4"/><text x="89.1695%" y="239.50"></text></g><g><title>libsystem_m.dylib`round (13 samples, 0.09%)</title><rect x="88.9463%" y="229" width="0.0873%" height="15" fill="rgb(234,103,6)" fg:x="13245" fg:w="13"/><text x="89.1963%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (4 samples, 0.03%)</title><rect x="89.0336%" y="229" width="0.0269%" height="15" fill="rgb(227,97,0)" fg:x="13258" fg:w="4"/><text x="89.2836%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::containers::frame::Frame::show (13,059 samples, 87.70%)</title><rect x="1.4774%" y="245" width="87.6973%" height="15" fill="rgb(234,150,53)" fg:x="220" fg:w="13059"/><text x="1.7274%" y="255.50">benchmark-022a91b58b3cfee0`egui::containers::frame::Frame::show</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (16 samples, 0.11%)</title><rect x="89.0672%" y="229" width="0.1074%" height="15" fill="rgb(228,201,54)" fg:x="13263" fg:w="16"/><text x="89.3172%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::containers::panel::CentralPanel::show (13,061 samples, 87.71%)</title><rect x="1.4774%" y="261" width="87.7107%" height="15" fill="rgb(222,22,37)" fg:x="220" fg:w="13061"/><text x="1.7274%" y="271.50">benchmark-022a91b58b3cfee0`egui::containers::panel::CentralPanel::show</text></g><g><title>benchmark-022a91b58b3cfee0`DYLD-STUB$$memmove (12 samples, 0.08%)</title><rect x="89.1881%" y="245" width="0.0806%" height="15" fill="rgb(237,53,32)" fg:x="13281" fg:w="12"/><text x="89.4381%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::layers::GraphicLayers::drain (405 samples, 2.72%)</title><rect x="89.2687%" y="245" width="2.7198%" height="15" fill="rgb(233,25,53)" fg:x="13293" fg:w="405"/><text x="89.5187%" y="255.50">be..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (316 samples, 2.12%)</title><rect x="89.8664%" y="229" width="2.1221%" height="15" fill="rgb(210,40,34)" fg:x="13382" fg:w="316"/><text x="90.1164%" y="239.50">l..</text></g><g><title>benchmark-022a91b58b3cfee0`egui::memory::Memory::end_frame (4 samples, 0.03%)</title><rect x="91.9884%" y="245" width="0.0269%" height="15" fill="rgb(241,220,44)" fg:x="13698" fg:w="4"/><text x="92.2384%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (4 samples, 0.03%)</title><rect x="91.9884%" y="229" width="0.0269%" height="15" fill="rgb(235,28,35)" fg:x="13698" fg:w="4"/><text x="92.2384%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (3 samples, 0.02%)</title><rect x="91.9952%" y="213" width="0.0201%" height="15" fill="rgb(210,56,17)" fg:x="13699" fg:w="3"/><text x="92.2452%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::context::Context::end_frame (474 samples, 3.18%)</title><rect x="89.1881%" y="261" width="3.1831%" height="15" fill="rgb(224,130,29)" fg:x="13281" fg:w="474"/><text x="89.4381%" y="271.50">ben..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (52 samples, 0.35%)</title><rect x="92.0220%" y="245" width="0.3492%" height="15" fill="rgb(235,212,8)" fg:x="13703" fg:w="52"/><text x="92.2720%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;egui::context::Context as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="92.3779%" y="245" width="0.0134%" height="15" fill="rgb(223,33,50)" fg:x="13756" fg:w="2"/><text x="92.6279%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="92.3779%" y="229" width="0.0134%" height="15" fill="rgb(219,149,13)" fg:x="13756" fg:w="2"/><text x="92.6279%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc (2 samples, 0.01%)</title><rect x="92.3779%" y="213" width="0.0134%" height="15" fill="rgb(250,156,29)" fg:x="13756" fg:w="2"/><text x="92.6279%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (2 samples, 0.01%)</title><rect x="92.3779%" y="197" width="0.0134%" height="15" fill="rgb(216,193,19)" fg:x="13756" fg:w="2"/><text x="92.6279%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.01%)</title><rect x="92.3779%" y="181" width="0.0134%" height="15" fill="rgb(216,135,14)" fg:x="13756" fg:w="2"/><text x="92.6279%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.01%)</title><rect x="92.3779%" y="165" width="0.0134%" height="15" fill="rgb(241,47,5)" fg:x="13756" fg:w="2"/><text x="92.6279%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.01%)</title><rect x="92.3779%" y="149" width="0.0134%" height="15" fill="rgb(233,42,35)" fg:x="13756" fg:w="2"/><text x="92.6279%" y="159.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.01%)</title><rect x="92.3914%" y="245" width="0.0134%" height="15" fill="rgb(231,13,6)" fg:x="13758" fg:w="2"/><text x="92.6414%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::ptr::drop_in_place&lt;egui::input_state::InputState&gt; (2 samples, 0.01%)</title><rect x="92.3914%" y="229" width="0.0134%" height="15" fill="rgb(207,181,40)" fg:x="13758" fg:w="2"/><text x="92.6414%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::input_state::InputState::begin_frame (5 samples, 0.03%)</title><rect x="92.4115%" y="245" width="0.0336%" height="15" fill="rgb(254,173,49)" fg:x="13761" fg:w="5"/><text x="92.6615%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (13,767 samples, 92.45%)</title><rect x="0.0067%" y="293" width="92.4518%" height="15" fill="rgb(221,1,38)" fg:x="1" fg:w="13767"/><text x="0.2567%" y="303.50">benchmark-022a91b58b3cfee0`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold</text></g><g><title>benchmark-022a91b58b3cfee0`criterion::bencher::Bencher&lt;M&gt;::iter (13,766 samples, 92.45%)</title><rect x="0.0134%" y="277" width="92.4451%" height="15" fill="rgb(206,124,46)" fg:x="2" fg:w="13766"/><text x="0.2634%" y="287.50">benchmark-022a91b58b3cfee0`criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>benchmark-022a91b58b3cfee0`egui::context::CtxRef::begin_frame (13 samples, 0.09%)</title><rect x="92.3712%" y="261" width="0.0873%" height="15" fill="rgb(249,21,11)" fg:x="13755" fg:w="13"/><text x="92.6212%" y="271.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::ptr::drop_in_place&lt;(egui::data::output::Output,alloc::vec::Vec&lt;epaint::ClippedShape&gt;)&gt; (18 samples, 0.12%)</title><rect x="92.4585%" y="261" width="0.1209%" height="15" fill="rgb(222,201,40)" fg:x="13768" fg:w="18"/><text x="92.7085%" y="271.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::ptr::drop_in_place&lt;epaint::shape::Shape&gt; (16 samples, 0.11%)</title><rect x="92.4720%" y="245" width="0.1074%" height="15" fill="rgb(235,61,29)" fg:x="13770" fg:w="16"/><text x="92.7220%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::widgets::plot::transform::ScreenTransform::rect_from_values (63 samples, 0.42%)</title><rect x="92.9152%" y="197" width="0.4231%" height="15" fill="rgb(219,207,3)" fg:x="13836" fg:w="63"/><text x="93.1652%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`emath::rect::Rect::extend_with (22 samples, 0.15%)</title><rect x="93.1905%" y="181" width="0.1477%" height="15" fill="rgb(222,56,46)" fg:x="13877" fg:w="22"/><text x="93.4405%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`emath::rect::Rect::extend_with (2 samples, 0.01%)</title><rect x="93.3383%" y="197" width="0.0134%" height="15" fill="rgb(239,76,54)" fg:x="13899" fg:w="2"/><text x="93.5883%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;egui::widgets::plot::items::BarChart as egui::widgets::plot::items::PlotItem&gt;::closest (97 samples, 0.65%)</title><rect x="92.7137%" y="213" width="0.6514%" height="15" fill="rgb(231,124,27)" fg:x="13806" fg:w="97"/><text x="92.9637%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc (2 samples, 0.01%)</title><rect x="93.3517%" y="197" width="0.0134%" height="15" fill="rgb(249,195,6)" fg:x="13901" fg:w="2"/><text x="93.6017%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (2 samples, 0.01%)</title><rect x="93.3517%" y="181" width="0.0134%" height="15" fill="rgb(237,174,47)" fg:x="13901" fg:w="2"/><text x="93.6017%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;egui::widgets::plot::items::BarChart as egui::widgets::plot::items::PlotItem&gt;::get_bounds (37 samples, 0.25%)</title><rect x="93.3651%" y="213" width="0.2485%" height="15" fill="rgb(206,201,31)" fg:x="13903" fg:w="37"/><text x="93.6151%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::widgets::plot::transform::ScreenTransform::rect_from_values (81 samples, 0.54%)</title><rect x="93.7210%" y="181" width="0.5440%" height="15" fill="rgb(231,57,52)" fg:x="13956" fg:w="81"/><text x="93.9710%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`emath::rect::Rect::extend_with (31 samples, 0.21%)</title><rect x="94.0568%" y="165" width="0.2082%" height="15" fill="rgb(248,177,22)" fg:x="14006" fg:w="31"/><text x="94.3068%" y="175.50"></text></g><g><title>benchmark-022a91b58b3cfee0`emath::rect::Rect::extend_with (2 samples, 0.01%)</title><rect x="94.2650%" y="181" width="0.0134%" height="15" fill="rgb(215,211,37)" fg:x="14037" fg:w="2"/><text x="94.5150%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::widgets::plot::items::Bar::shapes (126 samples, 0.85%)</title><rect x="93.6136%" y="197" width="0.8461%" height="15" fill="rgb(241,128,51)" fg:x="13940" fg:w="126"/><text x="93.8636%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (27 samples, 0.18%)</title><rect x="94.2784%" y="181" width="0.1813%" height="15" fill="rgb(227,165,31)" fg:x="14039" fg:w="27"/><text x="94.5284%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::widgets::plot::transform::ScreenTransform::rect_from_values (3 samples, 0.02%)</title><rect x="94.4597%" y="197" width="0.0201%" height="15" fill="rgb(228,167,24)" fg:x="14066" fg:w="3"/><text x="94.7097%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;egui::widgets::plot::items::BarChart as egui::widgets::plot::items::PlotItem&gt;::get_shapes (131 samples, 0.88%)</title><rect x="93.6136%" y="213" width="0.8797%" height="15" fill="rgb(228,143,12)" fg:x="13940" fg:w="131"/><text x="93.8636%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.01%)</title><rect x="94.4799%" y="197" width="0.0134%" height="15" fill="rgb(249,149,8)" fg:x="14069" fg:w="2"/><text x="94.7299%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;epaint::color::Color32 as core::convert::From&lt;epaint::color::Rgba&gt;&gt;::from (17 samples, 0.11%)</title><rect x="94.4933%" y="213" width="0.1142%" height="15" fill="rgb(243,35,44)" fg:x="14071" fg:w="17"/><text x="94.7433%" y="223.50"></text></g><g><title>libsystem_m.dylib`roundf (5 samples, 0.03%)</title><rect x="94.5739%" y="197" width="0.0336%" height="15" fill="rgb(246,89,9)" fg:x="14083" fg:w="5"/><text x="94.8239%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::Formatter::write_formatted_parts (5 samples, 0.03%)</title><rect x="94.6276%" y="181" width="0.0336%" height="15" fill="rgb(233,213,13)" fg:x="14091" fg:w="5"/><text x="94.8776%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.01%)</title><rect x="94.6478%" y="165" width="0.0134%" height="15" fill="rgb(233,141,41)" fg:x="14094" fg:w="2"/><text x="94.8978%" y="175.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.01%)</title><rect x="94.6478%" y="149" width="0.0134%" height="15" fill="rgb(239,167,4)" fg:x="14094" fg:w="2"/><text x="94.8978%" y="159.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::finish_grow (2 samples, 0.01%)</title><rect x="94.6478%" y="133" width="0.0134%" height="15" fill="rgb(209,217,16)" fg:x="14094" fg:w="2"/><text x="94.8978%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc (2 samples, 0.01%)</title><rect x="94.6478%" y="117" width="0.0134%" height="15" fill="rgb(219,88,35)" fg:x="14094" fg:w="2"/><text x="94.8978%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (2 samples, 0.01%)</title><rect x="94.6478%" y="101" width="0.0134%" height="15" fill="rgb(220,193,23)" fg:x="14094" fg:w="2"/><text x="94.8978%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.01%)</title><rect x="94.6478%" y="85" width="0.0134%" height="15" fill="rgb(230,90,52)" fg:x="14094" fg:w="2"/><text x="94.8978%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.01%)</title><rect x="94.6478%" y="69" width="0.0134%" height="15" fill="rgb(252,106,19)" fg:x="14094" fg:w="2"/><text x="94.8978%" y="79.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::write (9 samples, 0.06%)</title><rect x="94.6075%" y="213" width="0.0604%" height="15" fill="rgb(206,74,20)" fg:x="14088" fg:w="9"/><text x="94.8575%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::float::float_to_decimal_common_shortest (8 samples, 0.05%)</title><rect x="94.6142%" y="197" width="0.0537%" height="15" fill="rgb(230,138,44)" fg:x="14089" fg:w="8"/><text x="94.8642%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::ptr::drop_in_place&lt;egui::widgets::plot::items::BarChart&gt; (12 samples, 0.08%)</title><rect x="94.6679%" y="197" width="0.0806%" height="15" fill="rgb(235,182,43)" fg:x="14097" fg:w="12"/><text x="94.9179%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_small (2 samples, 0.01%)</title><rect x="94.7351%" y="181" width="0.0134%" height="15" fill="rgb(242,16,51)" fg:x="14107" fg:w="2"/><text x="94.9851%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::ptr::drop_in_place&lt;egui::widgets::plot::Prepared&gt; (19 samples, 0.13%)</title><rect x="94.6679%" y="213" width="0.1276%" height="15" fill="rgb(248,9,4)" fg:x="14097" fg:w="19"/><text x="94.9179%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.04%)</title><rect x="94.7552%" y="197" width="0.0403%" height="15" fill="rgb(210,31,22)" fg:x="14110" fg:w="6"/><text x="95.0052%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (3 samples, 0.02%)</title><rect x="94.7754%" y="181" width="0.0201%" height="15" fill="rgb(239,54,39)" fg:x="14113" fg:w="3"/><text x="95.0254%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (2 samples, 0.01%)</title><rect x="94.7821%" y="165" width="0.0134%" height="15" fill="rgb(230,99,41)" fg:x="14114" fg:w="2"/><text x="95.0321%" y="175.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::painter::Painter::extend (94 samples, 0.63%)</title><rect x="94.7955%" y="213" width="0.6313%" height="15" fill="rgb(253,106,12)" fg:x="14116" fg:w="94"/><text x="95.0455%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::layers::PaintList::extend (94 samples, 0.63%)</title><rect x="94.7955%" y="197" width="0.6313%" height="15" fill="rgb(213,46,41)" fg:x="14116" fg:w="94"/><text x="95.0455%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (94 samples, 0.63%)</title><rect x="94.7955%" y="181" width="0.6313%" height="15" fill="rgb(215,133,35)" fg:x="14116" fg:w="94"/><text x="95.0455%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc (4 samples, 0.03%)</title><rect x="95.4671%" y="85" width="0.0269%" height="15" fill="rgb(213,28,5)" fg:x="14216" fg:w="4"/><text x="95.7171%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (3 samples, 0.02%)</title><rect x="95.4738%" y="69" width="0.0201%" height="15" fill="rgb(215,77,49)" fg:x="14217" fg:w="3"/><text x="95.7238%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.01%)</title><rect x="95.4805%" y="53" width="0.0134%" height="15" fill="rgb(248,100,22)" fg:x="14218" fg:w="2"/><text x="95.7305%" y="63.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.03%)</title><rect x="95.4671%" y="117" width="0.0336%" height="15" fill="rgb(208,67,9)" fg:x="14216" fg:w="5"/><text x="95.7171%" y="127.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::finish_grow (5 samples, 0.03%)</title><rect x="95.4671%" y="101" width="0.0336%" height="15" fill="rgb(219,133,21)" fg:x="14216" fg:w="5"/><text x="95.7171%" y="111.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::Formatter::write_formatted_parts (8 samples, 0.05%)</title><rect x="95.4603%" y="149" width="0.0537%" height="15" fill="rgb(246,46,29)" fg:x="14215" fg:w="8"/><text x="95.7103%" y="159.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (8 samples, 0.05%)</title><rect x="95.4603%" y="133" width="0.0537%" height="15" fill="rgb(246,185,52)" fg:x="14215" fg:w="8"/><text x="95.7103%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.01%)</title><rect x="95.5006%" y="117" width="0.0134%" height="15" fill="rgb(252,136,11)" fg:x="14221" fg:w="2"/><text x="95.7506%" y="127.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::fmt::format (17 samples, 0.11%)</title><rect x="95.4469%" y="197" width="0.1142%" height="15" fill="rgb(219,138,53)" fg:x="14213" fg:w="17"/><text x="95.6969%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::write (17 samples, 0.11%)</title><rect x="95.4469%" y="181" width="0.1142%" height="15" fill="rgb(211,51,23)" fg:x="14213" fg:w="17"/><text x="95.6969%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::float::float_to_decimal_common_exact (16 samples, 0.11%)</title><rect x="95.4536%" y="165" width="0.1074%" height="15" fill="rgb(247,221,28)" fg:x="14214" fg:w="16"/><text x="95.7036%" y="175.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::num::flt2dec::strategy::grisu::format_exact_opt (7 samples, 0.05%)</title><rect x="95.5141%" y="149" width="0.0470%" height="15" fill="rgb(251,222,45)" fg:x="14223" fg:w="7"/><text x="95.7641%" y="159.50"></text></g><g><title>benchmark-022a91b58b3cfee0`emath::round_to_decimals (20 samples, 0.13%)</title><rect x="95.4469%" y="213" width="0.1343%" height="15" fill="rgb(217,162,53)" fg:x="14213" fg:w="20"/><text x="95.6969%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.01%)</title><rect x="95.5678%" y="197" width="0.0134%" height="15" fill="rgb(229,93,14)" fg:x="14231" fg:w="2"/><text x="95.8178%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (3 samples, 0.02%)</title><rect x="95.5879%" y="181" width="0.0201%" height="15" fill="rgb(209,67,49)" fg:x="14234" fg:w="3"/><text x="95.8379%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`epaint::text::fonts::Fonts::layout_single_line (6 samples, 0.04%)</title><rect x="95.5812%" y="213" width="0.0403%" height="15" fill="rgb(213,87,29)" fg:x="14233" fg:w="6"/><text x="95.8312%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`epaint::text::fonts::GalleyCache::layout (6 samples, 0.04%)</title><rect x="95.5812%" y="197" width="0.0403%" height="15" fill="rgb(205,151,52)" fg:x="14233" fg:w="6"/><text x="95.8312%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.01%)</title><rect x="95.6081%" y="181" width="0.0134%" height="15" fill="rgb(253,215,39)" fg:x="14237" fg:w="2"/><text x="95.8581%" y="191.50"></text></g><g><title>libsystem_m.dylib`0x00007fff6b1acc70 (5 samples, 0.03%)</title><rect x="95.6215%" y="213" width="0.0336%" height="15" fill="rgb(221,220,41)" fg:x="14239" fg:w="5"/><text x="95.8715%" y="223.50"></text></g><g><title>libsystem_m.dylib`roundf (2 samples, 0.01%)</title><rect x="95.6551%" y="213" width="0.0134%" height="15" fill="rgb(218,133,21)" fg:x="14244" fg:w="2"/><text x="95.9051%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;egui::widgets::plot::Plot as egui::widgets::Widget&gt;::ui (466 samples, 3.13%)</title><rect x="92.5861%" y="229" width="3.1294%" height="15" fill="rgb(221,193,43)" fg:x="13787" fg:w="466"/><text x="92.8361%" y="239.50">ben..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (7 samples, 0.05%)</title><rect x="95.6685%" y="213" width="0.0470%" height="15" fill="rgb(240,128,52)" fg:x="14246" fg:w="7"/><text x="95.9185%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`DYLD-STUB$$round (2 samples, 0.01%)</title><rect x="95.7155%" y="229" width="0.0134%" height="15" fill="rgb(253,114,12)" fg:x="14253" fg:w="2"/><text x="95.9655%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::widgets::plot::items::Bar::base_offset (42 samples, 0.28%)</title><rect x="95.9640%" y="197" width="0.2820%" height="15" fill="rgb(215,223,47)" fg:x="14290" fg:w="42"/><text x="96.2140%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::widgets::plot::items::Bar::new (7 samples, 0.05%)</title><rect x="96.2461%" y="197" width="0.0470%" height="15" fill="rgb(248,225,23)" fg:x="14332" fg:w="7"/><text x="96.4961%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (88 samples, 0.59%)</title><rect x="95.7290%" y="213" width="0.5910%" height="15" fill="rgb(250,108,0)" fg:x="14255" fg:w="88"/><text x="95.9790%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc (4 samples, 0.03%)</title><rect x="96.2931%" y="197" width="0.0269%" height="15" fill="rgb(228,208,7)" fg:x="14339" fg:w="4"/><text x="96.5431%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (4 samples, 0.03%)</title><rect x="96.2931%" y="181" width="0.0269%" height="15" fill="rgb(244,45,10)" fg:x="14339" fg:w="4"/><text x="96.5431%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (4 samples, 0.03%)</title><rect x="96.2931%" y="165" width="0.0269%" height="15" fill="rgb(207,125,25)" fg:x="14339" fg:w="4"/><text x="96.5431%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (4 samples, 0.03%)</title><rect x="96.2931%" y="149" width="0.0269%" height="15" fill="rgb(210,195,18)" fg:x="14339" fg:w="4"/><text x="96.5431%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (2 samples, 0.01%)</title><rect x="96.3065%" y="133" width="0.0134%" height="15" fill="rgb(249,80,12)" fg:x="14341" fg:w="2"/><text x="96.5565%" y="143.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;epaint::color::Color32 as core::convert::From&lt;epaint::color::Rgba&gt;&gt;::from (96 samples, 0.64%)</title><rect x="96.3468%" y="197" width="0.6447%" height="15" fill="rgb(221,65,9)" fg:x="14347" fg:w="96"/><text x="96.5968%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`DYLD-STUB$$powf (4 samples, 0.03%)</title><rect x="96.9915%" y="197" width="0.0269%" height="15" fill="rgb(235,49,36)" fg:x="14443" fg:w="4"/><text x="97.2415%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`DYLD-STUB$$roundf (7 samples, 0.05%)</title><rect x="97.0183%" y="197" width="0.0470%" height="15" fill="rgb(225,32,20)" fg:x="14447" fg:w="7"/><text x="97.2683%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`epaint::color::Color32::linear_multiply (20 samples, 0.13%)</title><rect x="97.0653%" y="197" width="0.1343%" height="15" fill="rgb(215,141,46)" fg:x="14454" fg:w="20"/><text x="97.3153%" y="207.50"></text></g><g><title>libsystem_m.dylib`0x00007fff6b1acc70 (314 samples, 2.11%)</title><rect x="97.1997%" y="197" width="2.1087%" height="15" fill="rgb(250,160,47)" fg:x="14474" fg:w="314"/><text x="97.4497%" y="207.50">l..</text></g><g><title>libsystem_m.dylib`roundf (49 samples, 0.33%)</title><rect x="99.3083%" y="197" width="0.3291%" height="15" fill="rgb(216,222,40)" fg:x="14788" fg:w="49"/><text x="99.5583%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc (2 samples, 0.01%)</title><rect x="99.6374%" y="197" width="0.0134%" height="15" fill="rgb(234,217,39)" fg:x="14837" fg:w="2"/><text x="99.8874%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (2 samples, 0.01%)</title><rect x="99.6374%" y="181" width="0.0134%" height="15" fill="rgb(207,178,40)" fg:x="14837" fg:w="2"/><text x="99.8874%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::widgets::plot::Plot::barchart (499 samples, 3.35%)</title><rect x="96.3266%" y="213" width="3.3510%" height="15" fill="rgb(221,136,13)" fg:x="14344" fg:w="499"/><text x="96.5766%" y="223.50">ben..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (4 samples, 0.03%)</title><rect x="99.6508%" y="197" width="0.0269%" height="15" fill="rgb(249,199,10)" fg:x="14839" fg:w="4"/><text x="99.9008%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::widgets::plot::items::Bar::new (3 samples, 0.02%)</title><rect x="99.6777%" y="213" width="0.0201%" height="15" fill="rgb(249,222,13)" fg:x="14843" fg:w="3"/><text x="99.9277%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`benchmark::criterion_benchmark::bars_plot (593 samples, 3.98%)</title><rect x="95.7290%" y="229" width="3.9823%" height="15" fill="rgb(244,185,38)" fg:x="14255" fg:w="593"/><text x="95.9790%" y="239.50">benc..</text></g><g><title>benchmark-022a91b58b3cfee0`egui::containers::panel::CentralPanel::show (1,063 samples, 7.14%)</title><rect x="92.5861%" y="261" width="7.1385%" height="15" fill="rgb(236,202,9)" fg:x="13787" fg:w="1063"/><text x="92.8361%" y="271.50">benchmark-..</text></g><g><title>benchmark-022a91b58b3cfee0`egui::containers::frame::Frame::show (1,063 samples, 7.14%)</title><rect x="92.5861%" y="245" width="7.1385%" height="15" fill="rgb(250,229,37)" fg:x="13787" fg:w="1063"/><text x="92.8361%" y="255.50">benchmark-..</text></g><g><title>benchmark-022a91b58b3cfee0`DYLD-STUB$$memmove (3 samples, 0.02%)</title><rect x="99.7247%" y="245" width="0.0201%" height="15" fill="rgb(206,174,23)" fg:x="14850" fg:w="3"/><text x="99.9747%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::layers::GraphicLayers::drain (29 samples, 0.19%)</title><rect x="99.7448%" y="245" width="0.1947%" height="15" fill="rgb(211,33,43)" fg:x="14853" fg:w="29"/><text x="99.9948%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (25 samples, 0.17%)</title><rect x="99.7717%" y="229" width="0.1679%" height="15" fill="rgb(245,58,50)" fg:x="14857" fg:w="25"/><text x="100.0217%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::context::Context::end_frame (33 samples, 0.22%)</title><rect x="99.7247%" y="261" width="0.2216%" height="15" fill="rgb(244,68,36)" fg:x="14850" fg:w="33"/><text x="99.9747%" y="271.50"></text></g><g><title>benchmark-022a91b58b3cfee0`criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (14,884 samples, 99.95%)</title><rect x="0.0067%" y="325" width="99.9530%" height="15" fill="rgb(232,229,15)" fg:x="1" fg:w="14884"/><text x="0.2567%" y="335.50">benchmark-022a91b58b3cfee0`criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>benchmark-022a91b58b3cfee0`criterion::routine::Routine::profile (14,884 samples, 99.95%)</title><rect x="0.0067%" y="309" width="99.9530%" height="15" fill="rgb(254,30,23)" fg:x="1" fg:w="14884"/><text x="0.2567%" y="319.50">benchmark-022a91b58b3cfee0`criterion::routine::Routine::profile</text></g><g><title>benchmark-022a91b58b3cfee0`&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (1,117 samples, 7.50%)</title><rect x="92.4585%" y="293" width="7.5012%" height="15" fill="rgb(235,160,14)" fg:x="13768" fg:w="1117"/><text x="92.7085%" y="303.50">benchmark-..</text></g><g><title>benchmark-022a91b58b3cfee0`criterion::bencher::Bencher&lt;M&gt;::iter (1,117 samples, 7.50%)</title><rect x="92.4585%" y="277" width="7.5012%" height="15" fill="rgb(212,155,44)" fg:x="13768" fg:w="1117"/><text x="92.7085%" y="287.50">benchmark-..</text></g><g><title>benchmark-022a91b58b3cfee0`egui::context::CtxRef::begin_frame (2 samples, 0.01%)</title><rect x="99.9463%" y="261" width="0.0134%" height="15" fill="rgb(226,2,50)" fg:x="14883" fg:w="2"/><text x="100.1963%" y="271.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.01%)</title><rect x="99.9597%" y="293" width="0.0134%" height="15" fill="rgb(234,177,6)" fg:x="14885" fg:w="2"/><text x="100.2097%" y="303.50"></text></g><g><title>benchmark-022a91b58b3cfee0`epaint::text::font::Font::new (2 samples, 0.01%)</title><rect x="99.9597%" y="277" width="0.0134%" height="15" fill="rgb(217,24,9)" fg:x="14885" fg:w="2"/><text x="100.2097%" y="287.50"></text></g><g><title>benchmark-022a91b58b3cfee0`epaint::text::font::Font::glyph_info (2 samples, 0.01%)</title><rect x="99.9597%" y="261" width="0.0134%" height="15" fill="rgb(220,13,46)" fg:x="14885" fg:w="2"/><text x="100.2097%" y="271.50"></text></g><g><title>benchmark-022a91b58b3cfee0`epaint::text::font::Font::glyph_info_no_cache_or_fallback (2 samples, 0.01%)</title><rect x="99.9597%" y="245" width="0.0134%" height="15" fill="rgb(239,221,27)" fg:x="14885" fg:w="2"/><text x="100.2097%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`epaint::text::font::FontImpl::glyph_info (2 samples, 0.01%)</title><rect x="99.9597%" y="229" width="0.0134%" height="15" fill="rgb(222,198,25)" fg:x="14885" fg:w="2"/><text x="100.2097%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`rusttype::PositionedGlyph::draw (2 samples, 0.01%)</title><rect x="99.9597%" y="213" width="0.0134%" height="15" fill="rgb(211,99,13)" fg:x="14885" fg:w="2"/><text x="100.2097%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::context::CtxRef::begin_frame (3 samples, 0.02%)</title><rect x="99.9597%" y="325" width="0.0201%" height="15" fill="rgb(232,111,31)" fg:x="14885" fg:w="3"/><text x="100.2097%" y="335.50"></text></g><g><title>benchmark-022a91b58b3cfee0`epaint::text::fonts::Fonts::from_definitions (3 samples, 0.02%)</title><rect x="99.9597%" y="309" width="0.0201%" height="15" fill="rgb(245,82,37)" fg:x="14885" fg:w="3"/><text x="100.2097%" y="319.50"></text></g><g><title>benchmark-022a91b58b3cfee0`main (14,890 samples, 99.99%)</title><rect x="0.0000%" y="405" width="99.9933%" height="15" fill="rgb(227,149,46)" fg:x="0" fg:w="14890"/><text x="0.2500%" y="415.50">benchmark-022a91b58b3cfee0`main</text></g><g><title>benchmark-022a91b58b3cfee0`std::rt::lang_start_internal (14,890 samples, 99.99%)</title><rect x="0.0000%" y="389" width="99.9933%" height="15" fill="rgb(218,36,50)" fg:x="0" fg:w="14890"/><text x="0.2500%" y="399.50">benchmark-022a91b58b3cfee0`std::rt::lang_start_internal</text></g><g><title>benchmark-022a91b58b3cfee0`std::rt::lang_start::_{{closure}} (14,890 samples, 99.99%)</title><rect x="0.0000%" y="373" width="99.9933%" height="15" fill="rgb(226,80,48)" fg:x="0" fg:w="14890"/><text x="0.2500%" y="383.50">benchmark-022a91b58b3cfee0`std::rt::lang_start::_{{closure}}</text></g><g><title>benchmark-022a91b58b3cfee0`std::sys_common::backtrace::__rust_begin_short_backtrace (14,890 samples, 99.99%)</title><rect x="0.0000%" y="357" width="99.9933%" height="15" fill="rgb(238,224,15)" fg:x="0" fg:w="14890"/><text x="0.2500%" y="367.50">benchmark-022a91b58b3cfee0`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>benchmark-022a91b58b3cfee0`benchmark::main (14,890 samples, 99.99%)</title><rect x="0.0000%" y="341" width="99.9933%" height="15" fill="rgb(241,136,10)" fg:x="0" fg:w="14890"/><text x="0.2500%" y="351.50">benchmark-022a91b58b3cfee0`benchmark::main</text></g><g><title>all (14,891 samples, 100%)</title><rect x="0.0000%" y="453" width="100.0000%" height="15" fill="rgb(208,32,45)" fg:x="0" fg:w="14891"/><text x="0.2500%" y="463.50"></text></g><g><title>benchmark-022a91b58b3cfee0`0x5 (14,891 samples, 100.00%)</title><rect x="0.0000%" y="437" width="100.0000%" height="15" fill="rgb(207,135,9)" fg:x="0" fg:w="14891"/><text x="0.2500%" y="447.50">benchmark-022a91b58b3cfee0`0x5</text></g><g><title>libdyld.dylib`start (14,891 samples, 100.00%)</title><rect x="0.0000%" y="421" width="100.0000%" height="15" fill="rgb(206,86,44)" fg:x="0" fg:w="14891"/><text x="0.2500%" y="431.50">libdyld.dylib`start</text></g></svg></svg>