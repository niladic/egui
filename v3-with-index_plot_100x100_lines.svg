<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="534" onload="init(evt)" viewBox="0 0 1200 534" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="534" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="517.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="517.00"> </text><svg id="frames" x="10" width="1180" total_samples="15004"><g><title>benchmark-022a91b58b3cfee0`__rdl_dealloc (2 samples, 0.01%)</title><rect x="0.0200%" y="293" width="0.0133%" height="15" fill="rgb(227,0,7)" fg:x="3" fg:w="2"/><text x="0.2700%" y="303.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::ptr::drop_in_place&lt;epaint::shape::Shape&gt; (137 samples, 0.91%)</title><rect x="0.1266%" y="277" width="0.9131%" height="15" fill="rgb(217,0,24)" fg:x="19" fg:w="137"/><text x="0.3766%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (7 samples, 0.05%)</title><rect x="1.0397%" y="277" width="0.0467%" height="15" fill="rgb(221,193,54)" fg:x="156" fg:w="7"/><text x="1.2897%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free (35 samples, 0.23%)</title><rect x="1.0864%" y="277" width="0.2333%" height="15" fill="rgb(248,212,6)" fg:x="163" fg:w="35"/><text x="1.3364%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (24 samples, 0.16%)</title><rect x="1.1597%" y="261" width="0.1600%" height="15" fill="rgb(208,68,35)" fg:x="174" fg:w="24"/><text x="1.4097%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (17 samples, 0.11%)</title><rect x="1.2063%" y="245" width="0.1133%" height="15" fill="rgb(232,128,0)" fg:x="181" fg:w="17"/><text x="1.4563%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (3 samples, 0.02%)</title><rect x="1.6862%" y="261" width="0.0200%" height="15" fill="rgb(207,160,47)" fg:x="253" fg:w="3"/><text x="1.9362%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (4 samples, 0.03%)</title><rect x="1.7062%" y="261" width="0.0267%" height="15" fill="rgb(228,23,34)" fg:x="256" fg:w="4"/><text x="1.9562%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (27 samples, 0.18%)</title><rect x="1.9995%" y="245" width="0.1800%" height="15" fill="rgb(218,30,26)" fg:x="300" fg:w="27"/><text x="2.2495%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (150 samples, 1.00%)</title><rect x="1.3196%" y="277" width="0.9997%" height="15" fill="rgb(220,122,19)" fg:x="198" fg:w="150"/><text x="1.5696%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (88 samples, 0.59%)</title><rect x="1.7329%" y="261" width="0.5865%" height="15" fill="rgb(250,228,42)" fg:x="260" fg:w="88"/><text x="1.9829%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (21 samples, 0.14%)</title><rect x="2.1794%" y="245" width="0.1400%" height="15" fill="rgb(240,193,28)" fg:x="327" fg:w="21"/><text x="2.4294%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::ptr::drop_in_place&lt;(egui::data::output::Output,alloc::vec::Vec&lt;epaint::ClippedShape&gt;)&gt; (345 samples, 2.30%)</title><rect x="0.0400%" y="293" width="2.2994%" height="15" fill="rgb(216,20,37)" fg:x="6" fg:w="345"/><text x="0.2900%" y="303.50">b..</text></g><g><title>libsystem_malloc.dylib`szone_size (3 samples, 0.02%)</title><rect x="2.3194%" y="277" width="0.0200%" height="15" fill="rgb(206,188,39)" fg:x="348" fg:w="3"/><text x="2.5694%" y="287.50"></text></g><g><title>benchmark-022a91b58b3cfee0`criterion::black_box (2 samples, 0.01%)</title><rect x="2.3460%" y="293" width="0.0133%" height="15" fill="rgb(217,207,13)" fg:x="352" fg:w="2"/><text x="2.5960%" y="303.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;&amp;T as core::fmt::Display&gt;::fmt (4 samples, 0.03%)</title><rect x="4.3722%" y="245" width="0.0267%" height="15" fill="rgb(231,73,38)" fg:x="656" fg:w="4"/><text x="4.6222%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (5 samples, 0.03%)</title><rect x="4.3988%" y="245" width="0.0333%" height="15" fill="rgb(225,20,46)" fg:x="660" fg:w="5"/><text x="4.6488%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;egui::widgets::plot::items::Line as egui::widgets::plot::items::PlotItem&gt;::find_closest_element (1,406 samples, 9.37%)</title><rect x="4.4388%" y="245" width="9.3708%" height="15" fill="rgb(210,31,41)" fg:x="666" fg:w="1406"/><text x="4.6888%" y="255.50">benchmark-022..</text></g><g><title>benchmark-022a91b58b3cfee0`&lt;egui::widgets::plot::items::Line as egui::widgets::plot::items::PlotItem&gt;::get_bounds (2 samples, 0.01%)</title><rect x="13.8097%" y="245" width="0.0133%" height="15" fill="rgb(221,200,47)" fg:x="2072" fg:w="2"/><text x="14.0597%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::widgets::plot::transform::ScreenTransform::position_from_value (1,021 samples, 6.80%)</title><rect x="15.2426%" y="213" width="6.8049%" height="15" fill="rgb(226,26,5)" fg:x="2287" fg:w="1021"/><text x="15.4926%" y="223.50">benchmark..</text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (3 samples, 0.02%)</title><rect x="22.1541%" y="181" width="0.0200%" height="15" fill="rgb(249,33,26)" fg:x="3324" fg:w="3"/><text x="22.4041%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (19 samples, 0.13%)</title><rect x="22.7939%" y="149" width="0.1266%" height="15" fill="rgb(235,183,28)" fg:x="3420" fg:w="19"/><text x="23.0439%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (152 samples, 1.01%)</title><rect x="22.1741%" y="181" width="1.0131%" height="15" fill="rgb(221,5,38)" fg:x="3327" fg:w="152"/><text x="22.4241%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (146 samples, 0.97%)</title><rect x="22.2141%" y="165" width="0.9731%" height="15" fill="rgb(247,18,42)" fg:x="3333" fg:w="146"/><text x="22.4641%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (40 samples, 0.27%)</title><rect x="22.9206%" y="149" width="0.2666%" height="15" fill="rgb(241,131,45)" fg:x="3439" fg:w="40"/><text x="23.1706%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (170 samples, 1.13%)</title><rect x="22.0808%" y="197" width="1.1330%" height="15" fill="rgb(249,31,29)" fg:x="3313" fg:w="170"/><text x="22.3308%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (4 samples, 0.03%)</title><rect x="23.1872%" y="181" width="0.0267%" height="15" fill="rgb(225,111,53)" fg:x="3479" fg:w="4"/><text x="23.4372%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,367 samples, 9.11%)</title><rect x="14.1096%" y="229" width="9.1109%" height="15" fill="rgb(238,160,17)" fg:x="2117" fg:w="1367"/><text x="14.3596%" y="239.50">benchmark-022..</text></g><g><title>libsystem_malloc.dylib`malloc (176 samples, 1.17%)</title><rect x="22.0475%" y="213" width="1.1730%" height="15" fill="rgb(214,148,48)" fg:x="3308" fg:w="176"/><text x="22.2975%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::widgets::plot::transform::ScreenTransform::position_from_value (83 samples, 0.55%)</title><rect x="23.2271%" y="229" width="0.5532%" height="15" fill="rgb(232,36,49)" fg:x="3485" fg:w="83"/><text x="23.4771%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;egui::widgets::plot::items::Line as egui::widgets::plot::items::PlotItem&gt;::get_shapes (1,519 samples, 10.12%)</title><rect x="13.8230%" y="245" width="10.1240%" height="15" fill="rgb(209,103,24)" fg:x="2074" fg:w="1519"/><text x="14.0730%" y="255.50">benchmark-022a9..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (24 samples, 0.16%)</title><rect x="23.7870%" y="229" width="0.1600%" height="15" fill="rgb(229,88,8)" fg:x="3569" fg:w="24"/><text x="24.0370%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;egui::widgets::plot::items::Line as egui::widgets::plot::items::PlotItem&gt;::highlighted (3 samples, 0.02%)</title><rect x="23.9469%" y="245" width="0.0200%" height="15" fill="rgb(213,181,19)" fg:x="3593" fg:w="3"/><text x="24.1969%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;epaint::color::Color32 as core::convert::From&lt;epaint::color::Rgba&gt;&gt;::from (472 samples, 3.15%)</title><rect x="23.9669%" y="245" width="3.1458%" height="15" fill="rgb(254,191,54)" fg:x="3596" fg:w="472"/><text x="24.2169%" y="255.50">ben..</text></g><g><title>benchmark-022a91b58b3cfee0`DYLD-STUB$$roundf (33 samples, 0.22%)</title><rect x="27.1128%" y="245" width="0.2199%" height="15" fill="rgb(241,83,37)" fg:x="4068" fg:w="33"/><text x="27.3628%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`__powidf2 (2 samples, 0.01%)</title><rect x="27.3327%" y="245" width="0.0133%" height="15" fill="rgb(233,36,39)" fg:x="4101" fg:w="2"/><text x="27.5827%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`__rdl_dealloc (10 samples, 0.07%)</title><rect x="27.3460%" y="245" width="0.0666%" height="15" fill="rgb(226,3,54)" fg:x="4103" fg:w="10"/><text x="27.5960%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`__rust_dealloc (4 samples, 0.03%)</title><rect x="27.4127%" y="245" width="0.0267%" height="15" fill="rgb(245,192,40)" fg:x="4113" fg:w="4"/><text x="27.6627%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::fmt::format (5 samples, 0.03%)</title><rect x="27.4393%" y="245" width="0.0333%" height="15" fill="rgb(238,167,29)" fg:x="4117" fg:w="5"/><text x="27.6893%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc (3 samples, 0.02%)</title><rect x="27.4727%" y="213" width="0.0200%" height="15" fill="rgb(232,182,51)" fg:x="4122" fg:w="3"/><text x="27.7227%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (3 samples, 0.02%)</title><rect x="27.4727%" y="197" width="0.0200%" height="15" fill="rgb(231,60,39)" fg:x="4122" fg:w="3"/><text x="27.7227%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.02%)</title><rect x="27.4727%" y="181" width="0.0200%" height="15" fill="rgb(208,69,12)" fg:x="4122" fg:w="3"/><text x="27.7227%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (3 samples, 0.02%)</title><rect x="27.4727%" y="165" width="0.0200%" height="15" fill="rgb(235,93,37)" fg:x="4122" fg:w="3"/><text x="27.7227%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_free (2 samples, 0.01%)</title><rect x="27.4993%" y="181" width="0.0133%" height="15" fill="rgb(213,116,39)" fg:x="4126" fg:w="2"/><text x="27.7493%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (3 samples, 0.02%)</title><rect x="27.5327%" y="165" width="0.0200%" height="15" fill="rgb(222,207,29)" fg:x="4131" fg:w="3"/><text x="27.7827%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (3 samples, 0.02%)</title><rect x="27.5327%" y="149" width="0.0200%" height="15" fill="rgb(206,96,30)" fg:x="4131" fg:w="3"/><text x="27.7827%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`medium_try_realloc_in_place (2 samples, 0.01%)</title><rect x="27.5593%" y="165" width="0.0133%" height="15" fill="rgb(218,138,4)" fg:x="4135" fg:w="2"/><text x="27.8093%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`small_try_realloc_in_place (5 samples, 0.03%)</title><rect x="27.5793%" y="165" width="0.0333%" height="15" fill="rgb(250,191,14)" fg:x="4138" fg:w="5"/><text x="27.8293%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`medium_malloc_should_clear (4 samples, 0.03%)</title><rect x="27.6126%" y="149" width="0.0267%" height="15" fill="rgb(239,60,40)" fg:x="4143" fg:w="4"/><text x="27.8626%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.03%)</title><rect x="27.6126%" y="165" width="0.0333%" height="15" fill="rgb(206,27,48)" fg:x="4143" fg:w="5"/><text x="27.8626%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (4 samples, 0.03%)</title><rect x="27.6526%" y="165" width="0.0267%" height="15" fill="rgb(225,35,8)" fg:x="4149" fg:w="4"/><text x="27.9026%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (39 samples, 0.26%)</title><rect x="27.4927%" y="197" width="0.2599%" height="15" fill="rgb(250,213,24)" fg:x="4125" fg:w="39"/><text x="27.7427%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (35 samples, 0.23%)</title><rect x="27.5193%" y="181" width="0.2333%" height="15" fill="rgb(247,123,22)" fg:x="4129" fg:w="35"/><text x="27.7693%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (11 samples, 0.07%)</title><rect x="27.6793%" y="165" width="0.0733%" height="15" fill="rgb(231,138,38)" fg:x="4153" fg:w="11"/><text x="27.9293%" y="175.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (44 samples, 0.29%)</title><rect x="27.4727%" y="245" width="0.2933%" height="15" fill="rgb(231,145,46)" fg:x="4122" fg:w="44"/><text x="27.7227%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::finish_grow (44 samples, 0.29%)</title><rect x="27.4727%" y="229" width="0.2933%" height="15" fill="rgb(251,118,11)" fg:x="4122" fg:w="44"/><text x="27.7227%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`realloc (41 samples, 0.27%)</title><rect x="27.4927%" y="213" width="0.2733%" height="15" fill="rgb(217,147,25)" fg:x="4125" fg:w="41"/><text x="27.7427%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`small_size (2 samples, 0.01%)</title><rect x="27.7526%" y="197" width="0.0133%" height="15" fill="rgb(247,81,37)" fg:x="4164" fg:w="2"/><text x="28.0026%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;egui::widgets::plot::items::Line as egui::widgets::plot::items::PlotItem&gt;::highlighted (2 samples, 0.01%)</title><rect x="27.7926%" y="229" width="0.0133%" height="15" fill="rgb(209,12,38)" fg:x="4170" fg:w="2"/><text x="28.0426%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.01%)</title><rect x="27.8126%" y="229" width="0.0133%" height="15" fill="rgb(227,1,9)" fg:x="4173" fg:w="2"/><text x="28.0626%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.01%)</title><rect x="27.8126%" y="213" width="0.0133%" height="15" fill="rgb(248,47,43)" fg:x="4173" fg:w="2"/><text x="28.0626%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::slice::merge_sort (10 samples, 0.07%)</title><rect x="27.7659%" y="245" width="0.0666%" height="15" fill="rgb(221,10,30)" fg:x="4166" fg:w="10"/><text x="28.0159%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;egui::widgets::plot::items::Line as egui::widgets::plot::items::PlotItem&gt;::name (3 samples, 0.02%)</title><rect x="27.8926%" y="229" width="0.0200%" height="15" fill="rgb(210,229,1)" fg:x="4185" fg:w="3"/><text x="28.1426%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="27.9126%" y="229" width="0.0133%" height="15" fill="rgb(222,148,37)" fg:x="4188" fg:w="2"/><text x="28.1626%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::vec::Vec&lt;T,A&gt;::retain (55 samples, 0.37%)</title><rect x="27.8326%" y="245" width="0.3666%" height="15" fill="rgb(234,67,33)" fg:x="4176" fg:w="55"/><text x="28.0826%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (41 samples, 0.27%)</title><rect x="27.9259%" y="229" width="0.2733%" height="15" fill="rgb(247,98,35)" fg:x="4190" fg:w="41"/><text x="28.1759%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (12 samples, 0.08%)</title><rect x="28.1192%" y="213" width="0.0800%" height="15" fill="rgb(247,138,52)" fg:x="4219" fg:w="12"/><text x="28.3692%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::ArgumentV1::from_usize (6 samples, 0.04%)</title><rect x="28.1991%" y="245" width="0.0400%" height="15" fill="rgb(213,79,30)" fg:x="4231" fg:w="6"/><text x="28.4491%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::float::_&lt;impl core::fmt::Display for f64&gt;::fmt (5 samples, 0.03%)</title><rect x="28.2391%" y="245" width="0.0333%" height="15" fill="rgb(246,177,23)" fg:x="4237" fg:w="5"/><text x="28.4891%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;&amp;T as core::fmt::Display&gt;::fmt (5 samples, 0.03%)</title><rect x="28.5324%" y="229" width="0.0333%" height="15" fill="rgb(230,62,27)" fg:x="4281" fg:w="5"/><text x="28.7824%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (48 samples, 0.32%)</title><rect x="28.5657%" y="229" width="0.3199%" height="15" fill="rgb(216,154,8)" fg:x="4286" fg:w="48"/><text x="28.8157%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (23 samples, 0.15%)</title><rect x="28.7323%" y="213" width="0.1533%" height="15" fill="rgb(244,35,45)" fg:x="4311" fg:w="23"/><text x="28.9823%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`DYLD-STUB$$memcpy (6 samples, 0.04%)</title><rect x="28.8856%" y="229" width="0.0400%" height="15" fill="rgb(251,115,12)" fg:x="4334" fg:w="6"/><text x="29.1356%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::Formatter::pad_formatted_parts (6 samples, 0.04%)</title><rect x="28.9256%" y="229" width="0.0400%" height="15" fill="rgb(240,54,50)" fg:x="4340" fg:w="6"/><text x="29.1756%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::float::_&lt;impl core::fmt::Display for f64&gt;::fmt (8 samples, 0.05%)</title><rect x="28.9723%" y="229" width="0.0533%" height="15" fill="rgb(233,84,52)" fg:x="4347" fg:w="8"/><text x="29.2223%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (15 samples, 0.10%)</title><rect x="30.1386%" y="213" width="0.1000%" height="15" fill="rgb(207,117,47)" fg:x="4522" fg:w="15"/><text x="30.3886%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::Formatter::pad_formatted_parts (15 samples, 0.10%)</title><rect x="30.2386%" y="213" width="0.1000%" height="15" fill="rgb(249,43,39)" fg:x="4537" fg:w="15"/><text x="30.4886%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`__rdl_alloc (11 samples, 0.07%)</title><rect x="31.2983%" y="165" width="0.0733%" height="15" fill="rgb(209,38,44)" fg:x="4696" fg:w="11"/><text x="31.5483%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (7 samples, 0.05%)</title><rect x="31.6649%" y="133" width="0.0467%" height="15" fill="rgb(236,212,23)" fg:x="4751" fg:w="7"/><text x="31.9149%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (14 samples, 0.09%)</title><rect x="31.8315%" y="117" width="0.0933%" height="15" fill="rgb(242,79,21)" fg:x="4776" fg:w="14"/><text x="32.0815%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (330 samples, 2.20%)</title><rect x="31.9248%" y="117" width="2.1994%" height="15" fill="rgb(211,96,35)" fg:x="4790" fg:w="330"/><text x="32.1748%" y="127.50">l..</text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (310 samples, 2.07%)</title><rect x="32.0581%" y="101" width="2.0661%" height="15" fill="rgb(253,215,40)" fg:x="4810" fg:w="310"/><text x="32.3081%" y="111.50">l..</text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (365 samples, 2.43%)</title><rect x="31.7115%" y="133" width="2.4327%" height="15" fill="rgb(211,81,21)" fg:x="4758" fg:w="365"/><text x="31.9615%" y="143.50">li..</text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (3 samples, 0.02%)</title><rect x="34.1242%" y="117" width="0.0200%" height="15" fill="rgb(208,190,38)" fg:x="5120" fg:w="3"/><text x="34.3742%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`malloc (396 samples, 2.64%)</title><rect x="31.5316%" y="149" width="2.6393%" height="15" fill="rgb(235,213,38)" fg:x="4731" fg:w="396"/><text x="31.7816%" y="159.50">li..</text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (4 samples, 0.03%)</title><rect x="34.1442%" y="133" width="0.0267%" height="15" fill="rgb(237,122,38)" fg:x="5123" fg:w="4"/><text x="34.3942%" y="143.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::finish_grow (422 samples, 2.81%)</title><rect x="31.3716%" y="165" width="2.8126%" height="15" fill="rgb(244,218,35)" fg:x="4707" fg:w="422"/><text x="31.6216%" y="175.50">be..</text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (2 samples, 0.01%)</title><rect x="34.1709%" y="149" width="0.0133%" height="15" fill="rgb(240,68,47)" fg:x="5127" fg:w="2"/><text x="34.4209%" y="159.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (459 samples, 3.06%)</title><rect x="31.1450%" y="181" width="3.0592%" height="15" fill="rgb(210,16,53)" fg:x="4673" fg:w="459"/><text x="31.3950%" y="191.50">ben..</text></g><g><title>libsystem_malloc.dylib`malloc (3 samples, 0.02%)</title><rect x="34.1842%" y="165" width="0.0200%" height="15" fill="rgb(235,124,12)" fg:x="5129" fg:w="3"/><text x="34.4342%" y="175.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::finish_grow (2 samples, 0.01%)</title><rect x="34.2042%" y="181" width="0.0133%" height="15" fill="rgb(224,169,11)" fg:x="5132" fg:w="2"/><text x="34.4542%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (573 samples, 3.82%)</title><rect x="30.7451%" y="197" width="3.8190%" height="15" fill="rgb(250,166,2)" fg:x="4613" fg:w="573"/><text x="30.9951%" y="207.50">benc..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (52 samples, 0.35%)</title><rect x="34.2175%" y="181" width="0.3466%" height="15" fill="rgb(242,216,29)" fg:x="5134" fg:w="52"/><text x="34.4675%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`DYLD-STUB$$memcpy (5 samples, 0.03%)</title><rect x="34.5641%" y="197" width="0.0333%" height="15" fill="rgb(230,116,27)" fg:x="5186" fg:w="5"/><text x="34.8141%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::Formatter::write_formatted_parts (645 samples, 4.30%)</title><rect x="30.3386%" y="213" width="4.2989%" height="15" fill="rgb(228,99,48)" fg:x="4552" fg:w="645"/><text x="30.5886%" y="223.50">bench..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (5 samples, 0.03%)</title><rect x="34.6041%" y="197" width="0.0333%" height="15" fill="rgb(253,11,6)" fg:x="5192" fg:w="5"/><text x="34.8541%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::float::float_to_decimal_common_shortest (1,347 samples, 8.98%)</title><rect x="29.0256%" y="229" width="8.9776%" height="15" fill="rgb(247,143,39)" fg:x="4355" fg:w="1347"/><text x="29.2756%" y="239.50">benchmark-022..</text></g><g><title>benchmark-022a91b58b3cfee0`core::num::flt2dec::strategy::grisu::format_shortest_opt (505 samples, 3.37%)</title><rect x="34.6374%" y="213" width="3.3658%" height="15" fill="rgb(236,97,10)" fg:x="5197" fg:w="505"/><text x="34.8874%" y="223.50">ben..</text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::write (1,463 samples, 9.75%)</title><rect x="28.2725%" y="245" width="9.7507%" height="15" fill="rgb(233,208,19)" fg:x="4242" fg:w="1463"/><text x="28.5225%" y="255.50">benchmark-022a..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.02%)</title><rect x="38.0032%" y="229" width="0.0200%" height="15" fill="rgb(216,164,2)" fg:x="5702" fg:w="3"/><text x="38.2532%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::ptr::drop_in_place&lt;benchmark::criterion_benchmark::lines_plot::{{closure}}&gt; (2 samples, 0.01%)</title><rect x="38.0299%" y="245" width="0.0133%" height="15" fill="rgb(220,129,5)" fg:x="5706" fg:w="2"/><text x="38.2799%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (2 samples, 0.01%)</title><rect x="38.1298%" y="213" width="0.0133%" height="15" fill="rgb(242,17,10)" fg:x="5721" fg:w="2"/><text x="38.3798%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`small_size (8 samples, 0.05%)</title><rect x="38.2365%" y="197" width="0.0533%" height="15" fill="rgb(242,107,0)" fg:x="5737" fg:w="8"/><text x="38.4865%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free (39 samples, 0.26%)</title><rect x="38.1432%" y="213" width="0.2599%" height="15" fill="rgb(251,28,31)" fg:x="5723" fg:w="39"/><text x="38.3932%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (17 samples, 0.11%)</title><rect x="38.2898%" y="197" width="0.1133%" height="15" fill="rgb(233,223,10)" fg:x="5745" fg:w="17"/><text x="38.5398%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (10 samples, 0.07%)</title><rect x="38.3364%" y="181" width="0.0666%" height="15" fill="rgb(215,21,27)" fg:x="5752" fg:w="10"/><text x="38.5864%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (29 samples, 0.19%)</title><rect x="38.9230%" y="197" width="0.1933%" height="15" fill="rgb(232,23,21)" fg:x="5840" fg:w="29"/><text x="39.1730%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr (7 samples, 0.05%)</title><rect x="39.1229%" y="197" width="0.0467%" height="15" fill="rgb(244,5,23)" fg:x="5870" fg:w="7"/><text x="39.3729%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_small (132 samples, 0.88%)</title><rect x="38.4031%" y="213" width="0.8798%" height="15" fill="rgb(226,81,46)" fg:x="5762" fg:w="132"/><text x="38.6531%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (17 samples, 0.11%)</title><rect x="39.1696%" y="197" width="0.1133%" height="15" fill="rgb(247,70,30)" fg:x="5877" fg:w="17"/><text x="39.4196%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (2 samples, 0.01%)</title><rect x="39.2962%" y="213" width="0.0133%" height="15" fill="rgb(212,68,19)" fg:x="5896" fg:w="2"/><text x="39.5462%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::ptr::drop_in_place&lt;egui::widgets::plot::items::Line&gt; (185 samples, 1.23%)</title><rect x="38.0898%" y="229" width="1.2330%" height="15" fill="rgb(240,187,13)" fg:x="5715" fg:w="185"/><text x="38.3398%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (2 samples, 0.01%)</title><rect x="39.3095%" y="213" width="0.0133%" height="15" fill="rgb(223,113,26)" fg:x="5898" fg:w="2"/><text x="39.5595%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (3 samples, 0.02%)</title><rect x="39.3228%" y="229" width="0.0200%" height="15" fill="rgb(206,192,2)" fg:x="5900" fg:w="3"/><text x="39.5728%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (32 samples, 0.21%)</title><rect x="39.4028%" y="213" width="0.2133%" height="15" fill="rgb(241,108,4)" fg:x="5912" fg:w="32"/><text x="39.6528%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (28 samples, 0.19%)</title><rect x="39.4295%" y="197" width="0.1866%" height="15" fill="rgb(247,173,49)" fg:x="5916" fg:w="28"/><text x="39.6795%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free (44 samples, 0.29%)</title><rect x="39.3428%" y="229" width="0.2933%" height="15" fill="rgb(224,114,35)" fg:x="5903" fg:w="44"/><text x="39.5928%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (3 samples, 0.02%)</title><rect x="39.6161%" y="213" width="0.0200%" height="15" fill="rgb(245,159,27)" fg:x="5944" fg:w="3"/><text x="39.8661%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_small (2 samples, 0.01%)</title><rect x="39.6361%" y="229" width="0.0133%" height="15" fill="rgb(245,172,44)" fg:x="5947" fg:w="2"/><text x="39.8861%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (38 samples, 0.25%)</title><rect x="40.3292%" y="197" width="0.2533%" height="15" fill="rgb(236,23,11)" fg:x="6051" fg:w="38"/><text x="40.5792%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (179 samples, 1.19%)</title><rect x="39.6494%" y="229" width="1.1930%" height="15" fill="rgb(205,117,38)" fg:x="5949" fg:w="179"/><text x="39.8994%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (132 samples, 0.88%)</title><rect x="39.9627%" y="213" width="0.8798%" height="15" fill="rgb(237,72,25)" fg:x="5996" fg:w="132"/><text x="40.2127%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (39 samples, 0.26%)</title><rect x="40.5825%" y="197" width="0.2599%" height="15" fill="rgb(244,70,9)" fg:x="6089" fg:w="39"/><text x="40.8325%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (5 samples, 0.03%)</title><rect x="40.8424%" y="229" width="0.0333%" height="15" fill="rgb(217,125,39)" fg:x="6128" fg:w="5"/><text x="41.0924%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::ptr::drop_in_place&lt;egui::widgets::plot::Prepared&gt; (430 samples, 2.87%)</title><rect x="38.0432%" y="245" width="2.8659%" height="15" fill="rgb(235,36,10)" fg:x="5708" fg:w="430"/><text x="38.2932%" y="255.50">be..</text></g><g><title>libsystem_malloc.dylib`szone_size (5 samples, 0.03%)</title><rect x="40.8758%" y="229" width="0.0333%" height="15" fill="rgb(251,123,47)" fg:x="6133" fg:w="5"/><text x="41.1258%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::any::serializable::any_map::AnyMap&lt;Key&gt;::insert (4 samples, 0.03%)</title><rect x="40.9224%" y="245" width="0.0267%" height="15" fill="rgb(221,13,13)" fg:x="6140" fg:w="4"/><text x="41.1724%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc (2 samples, 0.01%)</title><rect x="40.9358%" y="229" width="0.0133%" height="15" fill="rgb(238,131,9)" fg:x="6142" fg:w="2"/><text x="41.1858%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (2 samples, 0.01%)</title><rect x="40.9358%" y="213" width="0.0133%" height="15" fill="rgb(211,50,8)" fg:x="6142" fg:w="2"/><text x="41.1858%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.01%)</title><rect x="40.9358%" y="197" width="0.0133%" height="15" fill="rgb(245,182,24)" fg:x="6142" fg:w="2"/><text x="41.1858%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.01%)</title><rect x="40.9358%" y="181" width="0.0133%" height="15" fill="rgb(242,14,37)" fg:x="6142" fg:w="2"/><text x="41.1858%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (429 samples, 2.86%)</title><rect x="40.9691%" y="213" width="2.8592%" height="15" fill="rgb(246,228,12)" fg:x="6147" fg:w="429"/><text x="41.2191%" y="223.50">be..</text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.01%)</title><rect x="43.8283%" y="213" width="0.0133%" height="15" fill="rgb(213,55,15)" fg:x="6576" fg:w="2"/><text x="44.0783%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::painter::Painter::extend (434 samples, 2.89%)</title><rect x="40.9624%" y="245" width="2.8926%" height="15" fill="rgb(209,9,3)" fg:x="6146" fg:w="434"/><text x="41.2124%" y="255.50">be..</text></g><g><title>benchmark-022a91b58b3cfee0`egui::layers::PaintList::extend (433 samples, 2.89%)</title><rect x="40.9691%" y="229" width="2.8859%" height="15" fill="rgb(230,59,30)" fg:x="6147" fg:w="433"/><text x="41.2191%" y="239.50">be..</text></g><g><title>benchmark-022a91b58b3cfee0`egui::context::Context::layer_id_at (2 samples, 0.01%)</title><rect x="43.8550%" y="213" width="0.0133%" height="15" fill="rgb(209,121,21)" fg:x="6580" fg:w="2"/><text x="44.1050%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::context::CtxRef::interact_with_hovered (2 samples, 0.01%)</title><rect x="43.8683%" y="213" width="0.0133%" height="15" fill="rgb(220,109,13)" fg:x="6582" fg:w="2"/><text x="44.1183%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::context::CtxRef::interact (5 samples, 0.03%)</title><rect x="43.8550%" y="229" width="0.0333%" height="15" fill="rgb(232,18,1)" fg:x="6580" fg:w="5"/><text x="44.1050%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::ui::Ui::allocate_exact_size (7 samples, 0.05%)</title><rect x="43.8550%" y="245" width="0.0467%" height="15" fill="rgb(215,41,42)" fg:x="6580" fg:w="7"/><text x="44.1050%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`benchmark::criterion_benchmark::lines_plot::_{{closure}} (106 samples, 0.71%)</title><rect x="47.5607%" y="213" width="0.7065%" height="15" fill="rgb(224,123,36)" fg:x="7136" fg:w="106"/><text x="47.8107%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (3 samples, 0.02%)</title><rect x="48.3604%" y="181" width="0.0200%" height="15" fill="rgb(240,125,3)" fg:x="7256" fg:w="3"/><text x="48.6104%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (25 samples, 0.17%)</title><rect x="49.1136%" y="133" width="0.1666%" height="15" fill="rgb(205,98,50)" fg:x="7369" fg:w="25"/><text x="49.3636%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr (7 samples, 0.05%)</title><rect x="49.2802%" y="133" width="0.0467%" height="15" fill="rgb(205,185,37)" fg:x="7394" fg:w="7"/><text x="49.5302%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (171 samples, 1.14%)</title><rect x="48.3204%" y="197" width="1.1397%" height="15" fill="rgb(238,207,15)" fg:x="7250" fg:w="171"/><text x="48.5704%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (162 samples, 1.08%)</title><rect x="48.3804%" y="181" width="1.0797%" height="15" fill="rgb(213,199,42)" fg:x="7259" fg:w="162"/><text x="48.6304%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (153 samples, 1.02%)</title><rect x="48.4404%" y="165" width="1.0197%" height="15" fill="rgb(235,201,11)" fg:x="7268" fg:w="153"/><text x="48.6904%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (68 samples, 0.45%)</title><rect x="49.0069%" y="149" width="0.4532%" height="15" fill="rgb(207,46,11)" fg:x="7353" fg:w="68"/><text x="49.2569%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (20 samples, 0.13%)</title><rect x="49.3268%" y="133" width="0.1333%" height="15" fill="rgb(241,35,35)" fg:x="7401" fg:w="20"/><text x="49.5768%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc (180 samples, 1.20%)</title><rect x="48.2671%" y="213" width="1.1997%" height="15" fill="rgb(243,32,47)" fg:x="7242" fg:w="180"/><text x="48.5171%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (778 samples, 5.19%)</title><rect x="44.2882%" y="229" width="5.1853%" height="15" fill="rgb(247,202,23)" fg:x="6645" fg:w="778"/><text x="44.5382%" y="239.50">benchm..</text></g><g><title>benchmark-022a91b58b3cfee0`__rdl_alloc (3 samples, 0.02%)</title><rect x="49.4735%" y="229" width="0.0200%" height="15" fill="rgb(219,102,11)" fg:x="7423" fg:w="3"/><text x="49.7235%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`__rust_alloc (2 samples, 0.01%)</title><rect x="49.4935%" y="229" width="0.0133%" height="15" fill="rgb(243,110,44)" fg:x="7426" fg:w="2"/><text x="49.7435%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`benchmark::criterion_benchmark::lines_plot::_{{closure}} (95 samples, 0.63%)</title><rect x="49.5068%" y="229" width="0.6332%" height="15" fill="rgb(222,74,54)" fg:x="7428" fg:w="95"/><text x="49.7568%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (8 samples, 0.05%)</title><rect x="50.1400%" y="229" width="0.0533%" height="15" fill="rgb(216,99,12)" fg:x="7523" fg:w="8"/><text x="50.3900%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (31 samples, 0.21%)</title><rect x="50.2599%" y="213" width="0.2066%" height="15" fill="rgb(226,22,26)" fg:x="7541" fg:w="31"/><text x="50.5099%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (25 samples, 0.17%)</title><rect x="50.2999%" y="197" width="0.1666%" height="15" fill="rgb(217,163,10)" fg:x="7547" fg:w="25"/><text x="50.5499%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free (44 samples, 0.29%)</title><rect x="50.1933%" y="229" width="0.2933%" height="15" fill="rgb(213,25,53)" fg:x="7531" fg:w="44"/><text x="50.4433%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (3 samples, 0.02%)</title><rect x="50.4665%" y="213" width="0.0200%" height="15" fill="rgb(252,105,26)" fg:x="7572" fg:w="3"/><text x="50.7165%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (39 samples, 0.26%)</title><rect x="51.0997%" y="197" width="0.2599%" height="15" fill="rgb(220,39,43)" fg:x="7667" fg:w="39"/><text x="51.3497%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (136 samples, 0.91%)</title><rect x="50.4865%" y="229" width="0.9064%" height="15" fill="rgb(229,68,48)" fg:x="7575" fg:w="136"/><text x="50.7365%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (82 samples, 0.55%)</title><rect x="50.8464%" y="213" width="0.5465%" height="15" fill="rgb(252,8,32)" fg:x="7629" fg:w="82"/><text x="51.0964%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (5 samples, 0.03%)</title><rect x="51.3596%" y="197" width="0.0333%" height="15" fill="rgb(223,20,43)" fg:x="7706" fg:w="5"/><text x="51.6096%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::widgets::plot::items::Values::generate_points (1,126 samples, 7.50%)</title><rect x="43.9016%" y="245" width="7.5047%" height="15" fill="rgb(229,81,49)" fg:x="6587" fg:w="1126"/><text x="44.1516%" y="255.50">benchmark-..</text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.01%)</title><rect x="51.4463%" y="117" width="0.0133%" height="15" fill="rgb(236,28,36)" fg:x="7719" fg:w="2"/><text x="51.6963%" y="127.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (4 samples, 0.03%)</title><rect x="51.4396%" y="197" width="0.0267%" height="15" fill="rgb(249,185,26)" fg:x="7718" fg:w="4"/><text x="51.6896%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.03%)</title><rect x="51.4396%" y="181" width="0.0267%" height="15" fill="rgb(249,174,33)" fg:x="7718" fg:w="4"/><text x="51.6896%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::finish_grow (4 samples, 0.03%)</title><rect x="51.4396%" y="165" width="0.0267%" height="15" fill="rgb(233,201,37)" fg:x="7718" fg:w="4"/><text x="51.6896%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc (4 samples, 0.03%)</title><rect x="51.4396%" y="149" width="0.0267%" height="15" fill="rgb(221,78,26)" fg:x="7718" fg:w="4"/><text x="51.6896%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (3 samples, 0.02%)</title><rect x="51.4463%" y="133" width="0.0200%" height="15" fill="rgb(250,127,30)" fg:x="7719" fg:w="3"/><text x="51.6963%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (4 samples, 0.03%)</title><rect x="51.5129%" y="69" width="0.0267%" height="15" fill="rgb(230,49,44)" fg:x="7729" fg:w="4"/><text x="51.7629%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (4 samples, 0.03%)</title><rect x="51.5129%" y="53" width="0.0267%" height="15" fill="rgb(229,67,23)" fg:x="7729" fg:w="4"/><text x="51.7629%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (3 samples, 0.02%)</title><rect x="51.5196%" y="37" width="0.0200%" height="15" fill="rgb(249,83,47)" fg:x="7730" fg:w="3"/><text x="51.7696%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (2 samples, 0.01%)</title><rect x="51.5396%" y="69" width="0.0133%" height="15" fill="rgb(215,43,3)" fg:x="7733" fg:w="2"/><text x="51.7896%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.01%)</title><rect x="51.5396%" y="53" width="0.0133%" height="15" fill="rgb(238,154,13)" fg:x="7733" fg:w="2"/><text x="51.7896%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (10 samples, 0.07%)</title><rect x="51.4996%" y="101" width="0.0666%" height="15" fill="rgb(219,56,2)" fg:x="7727" fg:w="10"/><text x="51.7496%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (9 samples, 0.06%)</title><rect x="51.5063%" y="85" width="0.0600%" height="15" fill="rgb(233,0,4)" fg:x="7728" fg:w="9"/><text x="51.7563%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (2 samples, 0.01%)</title><rect x="51.5529%" y="69" width="0.0133%" height="15" fill="rgb(235,30,7)" fg:x="7735" fg:w="2"/><text x="51.8029%" y="79.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::finish_grow (12 samples, 0.08%)</title><rect x="51.4996%" y="133" width="0.0800%" height="15" fill="rgb(250,79,13)" fg:x="7727" fg:w="12"/><text x="51.7496%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`realloc (12 samples, 0.08%)</title><rect x="51.4996%" y="117" width="0.0800%" height="15" fill="rgb(211,146,34)" fg:x="7727" fg:w="12"/><text x="51.7496%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (2 samples, 0.01%)</title><rect x="51.5662%" y="101" width="0.0133%" height="15" fill="rgb(228,22,38)" fg:x="7737" fg:w="2"/><text x="51.8162%" y="111.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (14 samples, 0.09%)</title><rect x="51.4929%" y="149" width="0.0933%" height="15" fill="rgb(235,168,5)" fg:x="7726" fg:w="14"/><text x="51.7429%" y="159.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::Formatter::write_formatted_parts (17 samples, 0.11%)</title><rect x="51.4863%" y="181" width="0.1133%" height="15" fill="rgb(221,155,16)" fg:x="7725" fg:w="17"/><text x="51.7363%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (16 samples, 0.11%)</title><rect x="51.4929%" y="165" width="0.1066%" height="15" fill="rgb(215,215,53)" fg:x="7726" fg:w="16"/><text x="51.7429%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.01%)</title><rect x="51.5862%" y="149" width="0.0133%" height="15" fill="rgb(223,4,10)" fg:x="7740" fg:w="2"/><text x="51.8362%" y="159.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::num::flt2dec::strategy::dragon::format_exact (16 samples, 0.11%)</title><rect x="51.5996%" y="181" width="0.1066%" height="15" fill="rgb(234,103,6)" fg:x="7742" fg:w="16"/><text x="51.8496%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::fmt::format (45 samples, 0.30%)</title><rect x="51.4130%" y="229" width="0.2999%" height="15" fill="rgb(227,97,0)" fg:x="7714" fg:w="45"/><text x="51.6630%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::write (41 samples, 0.27%)</title><rect x="51.4396%" y="213" width="0.2733%" height="15" fill="rgb(234,150,53)" fg:x="7718" fg:w="41"/><text x="51.6896%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::float::float_to_decimal_common_exact (35 samples, 0.23%)</title><rect x="51.4796%" y="197" width="0.2333%" height="15" fill="rgb(228,201,54)" fg:x="7724" fg:w="35"/><text x="51.7296%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc (3 samples, 0.02%)</title><rect x="51.7129%" y="197" width="0.0200%" height="15" fill="rgb(222,22,37)" fg:x="7759" fg:w="3"/><text x="51.9629%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (3 samples, 0.02%)</title><rect x="51.7129%" y="181" width="0.0200%" height="15" fill="rgb(237,53,32)" fg:x="7759" fg:w="3"/><text x="51.9629%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.02%)</title><rect x="51.7129%" y="165" width="0.0200%" height="15" fill="rgb(233,25,53)" fg:x="7759" fg:w="3"/><text x="51.9629%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (3 samples, 0.02%)</title><rect x="51.7129%" y="149" width="0.0200%" height="15" fill="rgb(210,40,34)" fg:x="7759" fg:w="3"/><text x="51.9629%" y="159.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.03%)</title><rect x="51.7129%" y="213" width="0.0267%" height="15" fill="rgb(241,220,44)" fg:x="7759" fg:w="4"/><text x="51.9629%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (2 samples, 0.01%)</title><rect x="51.7462%" y="165" width="0.0133%" height="15" fill="rgb(235,28,35)" fg:x="7764" fg:w="2"/><text x="51.9962%" y="175.50"></text></g><g><title>benchmark-022a91b58b3cfee0`epaint::text::fonts::Fonts::layout_multiline (4 samples, 0.03%)</title><rect x="51.7462%" y="213" width="0.0267%" height="15" fill="rgb(210,56,17)" fg:x="7764" fg:w="4"/><text x="51.9962%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`epaint::text::fonts::Fonts::layout_multiline_with_indentation_and_max_width (4 samples, 0.03%)</title><rect x="51.7462%" y="197" width="0.0267%" height="15" fill="rgb(224,130,29)" fg:x="7764" fg:w="4"/><text x="51.9962%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`epaint::text::fonts::GalleyCache::layout (4 samples, 0.03%)</title><rect x="51.7462%" y="181" width="0.0267%" height="15" fill="rgb(235,212,8)" fg:x="7764" fg:w="4"/><text x="51.9962%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.01%)</title><rect x="51.7595%" y="165" width="0.0133%" height="15" fill="rgb(223,33,50)" fg:x="7766" fg:w="2"/><text x="52.0095%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.01%)</title><rect x="51.7729%" y="213" width="0.0133%" height="15" fill="rgb(219,149,13)" fg:x="7768" fg:w="2"/><text x="52.0229%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (3 samples, 0.02%)</title><rect x="51.7862%" y="213" width="0.0200%" height="15" fill="rgb(250,156,29)" fg:x="7770" fg:w="3"/><text x="52.0362%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.01%)</title><rect x="51.7929%" y="197" width="0.0133%" height="15" fill="rgb(216,193,19)" fg:x="7771" fg:w="2"/><text x="52.0429%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`epaint::shape::Shape::text (15 samples, 0.10%)</title><rect x="51.7129%" y="229" width="0.1000%" height="15" fill="rgb(216,135,14)" fg:x="7759" fg:w="15"/><text x="51.9629%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::widgets::plot::items::rulers_at_value (63 samples, 0.42%)</title><rect x="51.4063%" y="245" width="0.4199%" height="15" fill="rgb(241,47,5)" fg:x="7713" fg:w="63"/><text x="51.6563%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.01%)</title><rect x="51.8128%" y="229" width="0.0133%" height="15" fill="rgb(233,42,35)" fg:x="7774" fg:w="2"/><text x="52.0628%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;f64 as core::num::dec2flt::rawfp::RawFloat&gt;::from_int (5 samples, 0.03%)</title><rect x="52.1728%" y="229" width="0.0333%" height="15" fill="rgb(231,13,6)" fg:x="7828" fg:w="5"/><text x="52.4228%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;f64 as core::num::dec2flt::rawfp::RawFloat&gt;::short_fast_pow10 (3 samples, 0.02%)</title><rect x="52.2061%" y="229" width="0.0200%" height="15" fill="rgb(207,181,40)" fg:x="7833" fg:w="3"/><text x="52.4561%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.01%)</title><rect x="52.5793%" y="213" width="0.0133%" height="15" fill="rgb(254,173,49)" fg:x="7889" fg:w="2"/><text x="52.8293%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::float::_&lt;impl core::fmt::Display for f64&gt;::fmt (4 samples, 0.03%)</title><rect x="52.5926%" y="213" width="0.0267%" height="15" fill="rgb(221,1,38)" fg:x="7891" fg:w="4"/><text x="52.8426%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::float::float_to_decimal_common_exact (10 samples, 0.07%)</title><rect x="52.6193%" y="213" width="0.0666%" height="15" fill="rgb(206,124,46)" fg:x="7895" fg:w="10"/><text x="52.8693%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (40 samples, 0.27%)</title><rect x="53.2391%" y="197" width="0.2666%" height="15" fill="rgb(249,21,11)" fg:x="7988" fg:w="40"/><text x="53.4891%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (21 samples, 0.14%)</title><rect x="53.3658%" y="181" width="0.1400%" height="15" fill="rgb(222,201,40)" fg:x="8007" fg:w="21"/><text x="53.6158%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::float::_&lt;impl core::fmt::Display for f64&gt;::fmt (6 samples, 0.04%)</title><rect x="53.5191%" y="197" width="0.0400%" height="15" fill="rgb(235,61,29)" fg:x="8030" fg:w="6"/><text x="53.7691%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (22 samples, 0.15%)</title><rect x="54.4855%" y="181" width="0.1466%" height="15" fill="rgb(219,207,3)" fg:x="8175" fg:w="22"/><text x="54.7355%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::Formatter::pad_formatted_parts (12 samples, 0.08%)</title><rect x="54.6321%" y="181" width="0.0800%" height="15" fill="rgb(222,56,46)" fg:x="8197" fg:w="12"/><text x="54.8821%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`__rdl_alloc (9 samples, 0.06%)</title><rect x="55.5852%" y="133" width="0.0600%" height="15" fill="rgb(239,76,54)" fg:x="8340" fg:w="9"/><text x="55.8352%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (7 samples, 0.05%)</title><rect x="55.8384%" y="101" width="0.0467%" height="15" fill="rgb(231,124,27)" fg:x="8378" fg:w="7"/><text x="56.0884%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (17 samples, 0.11%)</title><rect x="56.0451%" y="85" width="0.1133%" height="15" fill="rgb(249,195,6)" fg:x="8409" fg:w="17"/><text x="56.2951%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (363 samples, 2.42%)</title><rect x="56.1584%" y="85" width="2.4194%" height="15" fill="rgb(237,174,47)" fg:x="8426" fg:w="363"/><text x="56.4084%" y="95.50">li..</text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (340 samples, 2.27%)</title><rect x="56.3117%" y="69" width="2.2661%" height="15" fill="rgb(206,201,31)" fg:x="8449" fg:w="340"/><text x="56.5617%" y="79.50">l..</text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (408 samples, 2.72%)</title><rect x="55.8851%" y="101" width="2.7193%" height="15" fill="rgb(231,57,52)" fg:x="8385" fg:w="408"/><text x="56.1351%" y="111.50">li..</text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (4 samples, 0.03%)</title><rect x="58.5777%" y="85" width="0.0267%" height="15" fill="rgb(248,177,22)" fg:x="8789" fg:w="4"/><text x="58.8277%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`malloc (435 samples, 2.90%)</title><rect x="55.7451%" y="117" width="2.8992%" height="15" fill="rgb(215,211,37)" fg:x="8364" fg:w="435"/><text x="55.9951%" y="127.50">li..</text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.04%)</title><rect x="58.6044%" y="101" width="0.0400%" height="15" fill="rgb(241,128,51)" fg:x="8793" fg:w="6"/><text x="58.8544%" y="111.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::finish_grow (455 samples, 3.03%)</title><rect x="55.6452%" y="133" width="3.0325%" height="15" fill="rgb(227,165,31)" fg:x="8349" fg:w="455"/><text x="55.8952%" y="143.50">ben..</text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (5 samples, 0.03%)</title><rect x="58.6444%" y="117" width="0.0333%" height="15" fill="rgb(228,167,24)" fg:x="8799" fg:w="5"/><text x="58.8944%" y="127.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (496 samples, 3.31%)</title><rect x="55.4186%" y="149" width="3.3058%" height="15" fill="rgb(228,143,12)" fg:x="8315" fg:w="496"/><text x="55.6686%" y="159.50">ben..</text></g><g><title>libsystem_malloc.dylib`malloc (7 samples, 0.05%)</title><rect x="58.6777%" y="133" width="0.0467%" height="15" fill="rgb(249,149,8)" fg:x="8804" fg:w="7"/><text x="58.9277%" y="143.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::finish_grow (5 samples, 0.03%)</title><rect x="58.7243%" y="149" width="0.0333%" height="15" fill="rgb(243,35,44)" fg:x="8811" fg:w="5"/><text x="58.9743%" y="159.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (611 samples, 4.07%)</title><rect x="55.0120%" y="165" width="4.0722%" height="15" fill="rgb(246,89,9)" fg:x="8254" fg:w="611"/><text x="55.2620%" y="175.50">benc..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (49 samples, 0.33%)</title><rect x="58.7577%" y="149" width="0.3266%" height="15" fill="rgb(233,213,13)" fg:x="8816" fg:w="49"/><text x="59.0077%" y="159.50"></text></g><g><title>benchmark-022a91b58b3cfee0`DYLD-STUB$$memcpy (3 samples, 0.02%)</title><rect x="59.0842%" y="165" width="0.0200%" height="15" fill="rgb(233,141,41)" fg:x="8865" fg:w="3"/><text x="59.3342%" y="175.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.02%)</title><rect x="59.1042%" y="165" width="0.0200%" height="15" fill="rgb(239,167,4)" fg:x="8868" fg:w="3"/><text x="59.3542%" y="175.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::Formatter::write_formatted_parts (665 samples, 4.43%)</title><rect x="54.7121%" y="181" width="4.4322%" height="15" fill="rgb(209,217,16)" fg:x="8209" fg:w="665"/><text x="54.9621%" y="191.50">bench..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.02%)</title><rect x="59.1242%" y="165" width="0.0200%" height="15" fill="rgb(219,88,35)" fg:x="8871" fg:w="3"/><text x="59.3742%" y="175.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::num::flt2dec::strategy::grisu::format_exact_opt (548 samples, 3.65%)</title><rect x="59.1442%" y="181" width="3.6524%" height="15" fill="rgb(220,193,23)" fg:x="8874" fg:w="548"/><text x="59.3942%" y="191.50">benc..</text></g><g><title>benchmark-022a91b58b3cfee0`core::num::flt2dec::strategy::grisu::format_exact_opt::possibly_round (2 samples, 0.01%)</title><rect x="62.7966%" y="181" width="0.0133%" height="15" fill="rgb(230,90,52)" fg:x="9422" fg:w="2"/><text x="63.0466%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::num::flt2dec::strategy::grisu::format_exact_opt::possibly_round (56 samples, 0.37%)</title><rect x="62.8099%" y="165" width="0.3732%" height="15" fill="rgb(252,106,19)" fg:x="9424" fg:w="56"/><text x="63.0599%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (3 samples, 0.02%)</title><rect x="63.1632%" y="149" width="0.0200%" height="15" fill="rgb(206,74,20)" fg:x="9477" fg:w="3"/><text x="63.4132%" y="159.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::float::float_to_decimal_common_exact (1,445 samples, 9.63%)</title><rect x="53.5591%" y="197" width="9.6308%" height="15" fill="rgb(230,138,44)" fg:x="8036" fg:w="1445"/><text x="53.8091%" y="207.50">benchmark-022a..</text></g><g><title>benchmark-022a91b58b3cfee0`core::num::flt2dec::strategy::grisu::format_exact_opt (57 samples, 0.38%)</title><rect x="62.8099%" y="181" width="0.3799%" height="15" fill="rgb(235,182,43)" fg:x="9424" fg:w="57"/><text x="63.0599%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::num::flt2dec::strategy::grisu::format_exact_opt (2 samples, 0.01%)</title><rect x="63.1898%" y="197" width="0.0133%" height="15" fill="rgb(242,16,51)" fg:x="9481" fg:w="2"/><text x="63.4398%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::fmt::format (1,652 samples, 11.01%)</title><rect x="52.2261%" y="229" width="11.0104%" height="15" fill="rgb(248,9,4)" fg:x="7836" fg:w="1652"/><text x="52.4761%" y="239.50">benchmark-022a91..</text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::write (1,583 samples, 10.55%)</title><rect x="52.6860%" y="213" width="10.5505%" height="15" fill="rgb(210,31,22)" fg:x="7905" fg:w="1583"/><text x="52.9360%" y="223.50">benchmark-022a9..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (5 samples, 0.03%)</title><rect x="63.2031%" y="197" width="0.0333%" height="15" fill="rgb(239,54,39)" fg:x="9483" fg:w="5"/><text x="63.4531%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::ArgumentV1::from_usize (6 samples, 0.04%)</title><rect x="63.2365%" y="229" width="0.0400%" height="15" fill="rgb(230,99,41)" fg:x="9488" fg:w="6"/><text x="63.4865%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;f64 as core::num::dec2flt::rawfp::RawFloat&gt;::from_int (10 samples, 0.07%)</title><rect x="64.8160%" y="213" width="0.0666%" height="15" fill="rgb(253,106,12)" fg:x="9725" fg:w="10"/><text x="65.0660%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;f64 as core::num::dec2flt::rawfp::RawFloat&gt;::short_fast_pow10 (5 samples, 0.03%)</title><rect x="64.8827%" y="213" width="0.0333%" height="15" fill="rgb(213,46,41)" fg:x="9735" fg:w="5"/><text x="65.1327%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::num::dec2flt::extract_sign (5 samples, 0.03%)</title><rect x="64.9160%" y="213" width="0.0333%" height="15" fill="rgb(215,133,35)" fg:x="9740" fg:w="5"/><text x="65.1660%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::num::dec2flt::dec2flt (309 samples, 2.06%)</title><rect x="63.2765%" y="229" width="2.0595%" height="15" fill="rgb(213,28,5)" fg:x="9494" fg:w="309"/><text x="63.5265%" y="239.50">b..</text></g><g><title>benchmark-022a91b58b3cfee0`core::num::dec2flt::parse::parse_decimal (58 samples, 0.39%)</title><rect x="64.9493%" y="213" width="0.3866%" height="15" fill="rgb(215,77,49)" fg:x="9745" fg:w="58"/><text x="65.1993%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::num::dec2flt::extract_sign (6 samples, 0.04%)</title><rect x="65.3359%" y="229" width="0.0400%" height="15" fill="rgb(248,100,22)" fg:x="9803" fg:w="6"/><text x="65.5859%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::num::dec2flt::parse::parse_decimal (2 samples, 0.01%)</title><rect x="65.3759%" y="229" width="0.0133%" height="15" fill="rgb(208,67,9)" fg:x="9809" fg:w="2"/><text x="65.6259%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (14 samples, 0.09%)</title><rect x="65.3892%" y="229" width="0.0933%" height="15" fill="rgb(219,133,21)" fg:x="9811" fg:w="14"/><text x="65.6392%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (88 samples, 0.59%)</title><rect x="65.8691%" y="213" width="0.5865%" height="15" fill="rgb(246,46,29)" fg:x="9883" fg:w="88"/><text x="66.1191%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (73 samples, 0.49%)</title><rect x="65.9691%" y="197" width="0.4865%" height="15" fill="rgb(246,185,52)" fg:x="9898" fg:w="73"/><text x="66.2191%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free (154 samples, 1.03%)</title><rect x="65.4825%" y="229" width="1.0264%" height="15" fill="rgb(252,136,11)" fg:x="9825" fg:w="154"/><text x="65.7325%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (8 samples, 0.05%)</title><rect x="66.4556%" y="213" width="0.0533%" height="15" fill="rgb(219,138,53)" fg:x="9971" fg:w="8"/><text x="66.7056%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (194 samples, 1.29%)</title><rect x="66.5089%" y="229" width="1.2930%" height="15" fill="rgb(211,51,23)" fg:x="9979" fg:w="194"/><text x="66.7589%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`emath::round_to_decimals (2,401 samples, 16.00%)</title><rect x="51.8262%" y="245" width="16.0024%" height="15" fill="rgb(247,221,28)" fg:x="7776" fg:w="2401"/><text x="52.0762%" y="255.50">benchmark-022a91b58b3cfee..</text></g><g><title>libsystem_malloc.dylib`szone_size (4 samples, 0.03%)</title><rect x="67.8019%" y="229" width="0.0267%" height="15" fill="rgb(251,222,45)" fg:x="10173" fg:w="4"/><text x="68.0519%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;epaint::text::fonts::LayoutJob as core::hash::Hash&gt;::hash (5 samples, 0.03%)</title><rect x="68.9616%" y="229" width="0.0333%" height="15" fill="rgb(217,162,53)" fg:x="10347" fg:w="5"/><text x="69.2116%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`__rdl_dealloc (6 samples, 0.04%)</title><rect x="68.9949%" y="229" width="0.0400%" height="15" fill="rgb(229,93,14)" fg:x="10352" fg:w="6"/><text x="69.2449%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`__rust_dealloc (2 samples, 0.01%)</title><rect x="69.0349%" y="229" width="0.0133%" height="15" fill="rgb(209,67,49)" fg:x="10358" fg:w="2"/><text x="69.2849%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;epaint::text::fonts::LayoutJob as core::hash::Hash&gt;::hash (46 samples, 0.31%)</title><rect x="70.1346%" y="213" width="0.3066%" height="15" fill="rgb(213,87,29)" fg:x="10523" fg:w="46"/><text x="70.3846%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (145 samples, 0.97%)</title><rect x="70.4412%" y="213" width="0.9664%" height="15" fill="rgb(205,151,52)" fg:x="10569" fg:w="145"/><text x="70.6912%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (42 samples, 0.28%)</title><rect x="71.1277%" y="197" width="0.2799%" height="15" fill="rgb(253,215,39)" fg:x="10672" fg:w="42"/><text x="71.3777%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (15 samples, 0.10%)</title><rect x="71.4076%" y="213" width="0.1000%" height="15" fill="rgb(221,220,41)" fg:x="10714" fg:w="15"/><text x="71.6576%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (69 samples, 0.46%)</title><rect x="71.8075%" y="197" width="0.4599%" height="15" fill="rgb(218,133,21)" fg:x="10774" fg:w="69"/><text x="72.0575%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (64 samples, 0.43%)</title><rect x="71.8408%" y="181" width="0.4266%" height="15" fill="rgb(221,193,43)" fg:x="10779" fg:w="64"/><text x="72.0908%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free (119 samples, 0.79%)</title><rect x="71.5076%" y="213" width="0.7931%" height="15" fill="rgb(240,128,52)" fg:x="10729" fg:w="119"/><text x="71.7576%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (5 samples, 0.03%)</title><rect x="72.2674%" y="197" width="0.0333%" height="15" fill="rgb(253,114,12)" fg:x="10843" fg:w="5"/><text x="72.5174%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (188 samples, 1.25%)</title><rect x="72.3007%" y="213" width="1.2530%" height="15" fill="rgb(215,223,47)" fg:x="10848" fg:w="188"/><text x="72.5507%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`epaint::text::fonts::GalleyCache::layout (678 samples, 4.52%)</title><rect x="69.0483%" y="229" width="4.5188%" height="15" fill="rgb(248,225,23)" fg:x="10360" fg:w="678"/><text x="69.2983%" y="239.50">bench..</text></g><g><title>libsystem_malloc.dylib`szone_size (2 samples, 0.01%)</title><rect x="73.5537%" y="213" width="0.0133%" height="15" fill="rgb(250,108,0)" fg:x="11036" fg:w="2"/><text x="73.8037%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (4 samples, 0.03%)</title><rect x="73.5670%" y="229" width="0.0267%" height="15" fill="rgb(228,208,7)" fg:x="11038" fg:w="4"/><text x="73.8170%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.03%)</title><rect x="73.5937%" y="229" width="0.0333%" height="15" fill="rgb(244,45,10)" fg:x="11042" fg:w="5"/><text x="73.8437%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`epaint::text::fonts::Fonts::layout_single_line (885 samples, 5.90%)</title><rect x="67.8286%" y="245" width="5.8984%" height="15" fill="rgb(207,125,25)" fg:x="10177" fg:w="885"/><text x="68.0786%" y="255.50">benchma..</text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (15 samples, 0.10%)</title><rect x="73.6270%" y="229" width="0.1000%" height="15" fill="rgb(210,195,18)" fg:x="11047" fg:w="15"/><text x="73.8770%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (2 samples, 0.01%)</title><rect x="73.7270%" y="245" width="0.0133%" height="15" fill="rgb(249,80,12)" fg:x="11062" fg:w="2"/><text x="73.9770%" y="255.50"></text></g><g><title>libsystem_m.dylib`0x00007fff6b1acc70 (815 samples, 5.43%)</title><rect x="73.7470%" y="245" width="5.4319%" height="15" fill="rgb(221,65,9)" fg:x="11065" fg:w="815"/><text x="73.9970%" y="255.50">libsyst..</text></g><g><title>libsystem_m.dylib`roundf (221 samples, 1.47%)</title><rect x="79.1789%" y="245" width="1.4729%" height="15" fill="rgb(235,49,36)" fg:x="11880" fg:w="221"/><text x="79.4289%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (8 samples, 0.05%)</title><rect x="80.6518%" y="245" width="0.0533%" height="15" fill="rgb(225,32,20)" fg:x="12101" fg:w="8"/><text x="80.9018%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (3 samples, 0.02%)</title><rect x="80.7051%" y="245" width="0.0200%" height="15" fill="rgb(215,141,46)" fg:x="12109" fg:w="3"/><text x="80.9551%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (16 samples, 0.11%)</title><rect x="80.7318%" y="245" width="0.1066%" height="15" fill="rgb(250,160,47)" fg:x="12113" fg:w="16"/><text x="80.9818%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;egui::widgets::plot::Plot as egui::widgets::Widget&gt;::ui (11,919 samples, 79.44%)</title><rect x="2.3727%" y="261" width="79.4388%" height="15" fill="rgb(216,222,40)" fg:x="356" fg:w="11919"/><text x="2.6227%" y="271.50">benchmark-022a91b58b3cfee0`&lt;egui::widgets::plot::Plot as egui::widgets::Widget&gt;::ui</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (146 samples, 0.97%)</title><rect x="80.8384%" y="245" width="0.9731%" height="15" fill="rgb(234,217,39)" fg:x="12129" fg:w="146"/><text x="81.0884%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;egui::widgets::plot::items::Line as egui::widgets::plot::items::PlotItem&gt;::find_closest_element (4 samples, 0.03%)</title><rect x="81.8115%" y="261" width="0.0267%" height="15" fill="rgb(207,178,40)" fg:x="12275" fg:w="4"/><text x="82.0615%" y="271.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;egui::widgets::plot::items::Line as egui::widgets::plot::items::PlotItem&gt;::get_bounds (2 samples, 0.01%)</title><rect x="81.8382%" y="261" width="0.0133%" height="15" fill="rgb(221,136,13)" fg:x="12279" fg:w="2"/><text x="82.0882%" y="271.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;epaint::color::Color32 as core::convert::From&lt;epaint::color::Rgba&gt;&gt;::from (2 samples, 0.01%)</title><rect x="81.8582%" y="261" width="0.0133%" height="15" fill="rgb(249,199,10)" fg:x="12282" fg:w="2"/><text x="82.1082%" y="271.50"></text></g><g><title>benchmark-022a91b58b3cfee0`DYLD-STUB$$memcpy (3 samples, 0.02%)</title><rect x="81.8715%" y="261" width="0.0200%" height="15" fill="rgb(249,222,13)" fg:x="12284" fg:w="3"/><text x="82.1215%" y="271.50"></text></g><g><title>benchmark-022a91b58b3cfee0`DYLD-STUB$$round (3 samples, 0.02%)</title><rect x="81.8982%" y="261" width="0.0200%" height="15" fill="rgb(244,185,38)" fg:x="12288" fg:w="3"/><text x="82.1482%" y="271.50"></text></g><g><title>benchmark-022a91b58b3cfee0`__rdl_alloc (2 samples, 0.01%)</title><rect x="81.9182%" y="261" width="0.0133%" height="15" fill="rgb(236,202,9)" fg:x="12291" fg:w="2"/><text x="82.1682%" y="271.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;epaint::color::Color32 as core::convert::From&lt;epaint::color::Hsva&gt;&gt;::from (5 samples, 0.03%)</title><rect x="81.9715%" y="245" width="0.0333%" height="15" fill="rgb(250,229,37)" fg:x="12299" fg:w="5"/><text x="82.2215%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`DYLD-STUB$$memcpy (2 samples, 0.01%)</title><rect x="82.0115%" y="245" width="0.0133%" height="15" fill="rgb(206,174,23)" fg:x="12305" fg:w="2"/><text x="82.2615%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;epaint::color::Rgba as core::convert::From&lt;epaint::color::Hsva&gt;&gt;::from (52 samples, 0.35%)</title><rect x="82.2247%" y="213" width="0.3466%" height="15" fill="rgb(211,33,43)" fg:x="12337" fg:w="52"/><text x="82.4747%" y="223.50"></text></g><g><title>libsystem_m.dylib`floorf (6 samples, 0.04%)</title><rect x="82.5713%" y="213" width="0.0400%" height="15" fill="rgb(245,58,50)" fg:x="12389" fg:w="6"/><text x="82.8213%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;epaint::color::Color32 as core::convert::From&lt;epaint::color::Hsva&gt;&gt;::from (62 samples, 0.41%)</title><rect x="82.2181%" y="229" width="0.4132%" height="15" fill="rgb(244,68,36)" fg:x="12336" fg:w="62"/><text x="82.4681%" y="239.50"></text></g><g><title>libsystem_m.dylib`truncf (3 samples, 0.02%)</title><rect x="82.6113%" y="213" width="0.0200%" height="15" fill="rgb(232,229,15)" fg:x="12395" fg:w="3"/><text x="82.8613%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;epaint::color::Color32 as core::convert::From&lt;epaint::color::Rgba&gt;&gt;::from (54 samples, 0.36%)</title><rect x="82.6313%" y="229" width="0.3599%" height="15" fill="rgb(254,30,23)" fg:x="12398" fg:w="54"/><text x="82.8813%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc (2 samples, 0.01%)</title><rect x="83.0112%" y="197" width="0.0133%" height="15" fill="rgb(235,160,14)" fg:x="12455" fg:w="2"/><text x="83.2612%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (2 samples, 0.01%)</title><rect x="83.0112%" y="181" width="0.0133%" height="15" fill="rgb(212,155,44)" fg:x="12455" fg:w="2"/><text x="83.2612%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.01%)</title><rect x="83.0112%" y="165" width="0.0133%" height="15" fill="rgb(226,2,50)" fg:x="12455" fg:w="2"/><text x="83.2612%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.01%)</title><rect x="83.0112%" y="149" width="0.0133%" height="15" fill="rgb(234,177,6)" fg:x="12455" fg:w="2"/><text x="83.2612%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_realloc (2 samples, 0.01%)</title><rect x="83.0379%" y="165" width="0.0133%" height="15" fill="rgb(217,24,9)" fg:x="12459" fg:w="2"/><text x="83.2879%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (4 samples, 0.03%)</title><rect x="83.0712%" y="149" width="0.0267%" height="15" fill="rgb(220,13,46)" fg:x="12464" fg:w="4"/><text x="83.3212%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (3 samples, 0.02%)</title><rect x="83.0778%" y="133" width="0.0200%" height="15" fill="rgb(239,221,27)" fg:x="12465" fg:w="3"/><text x="83.3278%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (4 samples, 0.03%)</title><rect x="83.1045%" y="149" width="0.0267%" height="15" fill="rgb(222,198,25)" fg:x="12469" fg:w="4"/><text x="83.3545%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.01%)</title><rect x="83.1178%" y="133" width="0.0133%" height="15" fill="rgb(211,99,13)" fg:x="12471" fg:w="2"/><text x="83.3678%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (15 samples, 0.10%)</title><rect x="83.0512%" y="165" width="0.1000%" height="15" fill="rgb(232,111,31)" fg:x="12461" fg:w="15"/><text x="83.3012%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (3 samples, 0.02%)</title><rect x="83.1312%" y="149" width="0.0200%" height="15" fill="rgb(245,82,37)" fg:x="12473" fg:w="3"/><text x="83.3812%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (18 samples, 0.12%)</title><rect x="83.0379%" y="181" width="0.1200%" height="15" fill="rgb(227,149,46)" fg:x="12459" fg:w="18"/><text x="83.2879%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (24 samples, 0.16%)</title><rect x="83.0045%" y="229" width="0.1600%" height="15" fill="rgb(218,36,50)" fg:x="12454" fg:w="24"/><text x="83.2545%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::finish_grow (23 samples, 0.15%)</title><rect x="83.0112%" y="213" width="0.1533%" height="15" fill="rgb(226,80,48)" fg:x="12455" fg:w="23"/><text x="83.2612%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`realloc (20 samples, 0.13%)</title><rect x="83.0312%" y="197" width="0.1333%" height="15" fill="rgb(238,224,15)" fg:x="12458" fg:w="20"/><text x="83.2812%" y="207.50"></text></g><g><title>libsystem_m.dylib`0x00007fff6b1acc70 (99 samples, 0.66%)</title><rect x="83.1712%" y="229" width="0.6598%" height="15" fill="rgb(241,136,10)" fg:x="12479" fg:w="99"/><text x="83.4212%" y="239.50"></text></g><g><title>libsystem_m.dylib`roundf (32 samples, 0.21%)</title><rect x="83.8310%" y="229" width="0.2133%" height="15" fill="rgb(208,32,45)" fg:x="12578" fg:w="32"/><text x="84.0810%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.01%)</title><rect x="84.0576%" y="213" width="0.0133%" height="15" fill="rgb(207,135,9)" fg:x="12612" fg:w="2"/><text x="84.3076%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.01%)</title><rect x="84.0909%" y="197" width="0.0133%" height="15" fill="rgb(206,86,44)" fg:x="12617" fg:w="2"/><text x="84.3409%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (10 samples, 0.07%)</title><rect x="84.6907%" y="165" width="0.0666%" height="15" fill="rgb(245,177,15)" fg:x="12707" fg:w="10"/><text x="84.9407%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (144 samples, 0.96%)</title><rect x="84.1042%" y="197" width="0.9597%" height="15" fill="rgb(206,64,50)" fg:x="12619" fg:w="144"/><text x="84.3542%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (139 samples, 0.93%)</title><rect x="84.1376%" y="181" width="0.9264%" height="15" fill="rgb(234,36,40)" fg:x="12624" fg:w="139"/><text x="84.3876%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (46 samples, 0.31%)</title><rect x="84.7574%" y="165" width="0.3066%" height="15" fill="rgb(213,64,8)" fg:x="12717" fg:w="46"/><text x="85.0074%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (6 samples, 0.04%)</title><rect x="85.0240%" y="149" width="0.0400%" height="15" fill="rgb(210,75,36)" fg:x="12757" fg:w="6"/><text x="85.2740%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (151 samples, 1.01%)</title><rect x="84.0709%" y="213" width="1.0064%" height="15" fill="rgb(229,88,21)" fg:x="12614" fg:w="151"/><text x="84.3209%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.01%)</title><rect x="85.0640%" y="197" width="0.0133%" height="15" fill="rgb(252,204,47)" fg:x="12763" fg:w="2"/><text x="85.3140%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc (156 samples, 1.04%)</title><rect x="84.0443%" y="229" width="1.0397%" height="15" fill="rgb(208,77,27)" fg:x="12610" fg:w="156"/><text x="84.2943%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::widgets::plot::Plot::line (492 samples, 3.28%)</title><rect x="82.0315%" y="245" width="3.2791%" height="15" fill="rgb(221,76,26)" fg:x="12308" fg:w="492"/><text x="82.2815%" y="255.50">ben..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (33 samples, 0.22%)</title><rect x="85.0906%" y="229" width="0.2199%" height="15" fill="rgb(225,139,18)" fg:x="12767" fg:w="33"/><text x="85.3406%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::widgets::plot::Plot::new (2 samples, 0.01%)</title><rect x="85.3106%" y="245" width="0.0133%" height="15" fill="rgb(230,137,11)" fg:x="12800" fg:w="2"/><text x="85.5606%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::widgets::plot::items::Line::new (22 samples, 0.15%)</title><rect x="85.3239%" y="245" width="0.1466%" height="15" fill="rgb(212,28,1)" fg:x="12802" fg:w="22"/><text x="85.5739%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (6 samples, 0.04%)</title><rect x="85.5305%" y="213" width="0.0400%" height="15" fill="rgb(248,164,17)" fg:x="12833" fg:w="6"/><text x="85.7805%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (138 samples, 0.92%)</title><rect x="85.5705%" y="213" width="0.9198%" height="15" fill="rgb(222,171,42)" fg:x="12839" fg:w="138"/><text x="85.8205%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (133 samples, 0.89%)</title><rect x="85.6038%" y="197" width="0.8864%" height="15" fill="rgb(243,84,45)" fg:x="12844" fg:w="133"/><text x="85.8538%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (44 samples, 0.29%)</title><rect x="86.1970%" y="181" width="0.2933%" height="15" fill="rgb(252,49,23)" fg:x="12933" fg:w="44"/><text x="86.4470%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (4 samples, 0.03%)</title><rect x="86.4636%" y="165" width="0.0267%" height="15" fill="rgb(215,19,7)" fg:x="12973" fg:w="4"/><text x="86.7136%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (148 samples, 0.99%)</title><rect x="85.5105%" y="229" width="0.9864%" height="15" fill="rgb(238,81,41)" fg:x="12830" fg:w="148"/><text x="85.7605%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc (157 samples, 1.05%)</title><rect x="85.4705%" y="245" width="1.0464%" height="15" fill="rgb(210,199,37)" fg:x="12824" fg:w="157"/><text x="85.7205%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.02%)</title><rect x="86.4969%" y="229" width="0.0200%" height="15" fill="rgb(244,192,49)" fg:x="12978" fg:w="3"/><text x="86.7469%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`benchmark::criterion_benchmark::lines_plot (729 samples, 4.86%)</title><rect x="81.9315%" y="261" width="4.8587%" height="15" fill="rgb(226,211,11)" fg:x="12293" fg:w="729"/><text x="82.1815%" y="271.50">benchm..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (41 samples, 0.27%)</title><rect x="86.5169%" y="245" width="0.2733%" height="15" fill="rgb(236,162,54)" fg:x="12981" fg:w="41"/><text x="86.7669%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::ui::Ui::child_ui (5 samples, 0.03%)</title><rect x="86.7969%" y="245" width="0.0333%" height="15" fill="rgb(220,229,9)" fg:x="13023" fg:w="5"/><text x="87.0469%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::containers::frame::Frame::begin (7 samples, 0.05%)</title><rect x="86.7969%" y="261" width="0.0467%" height="15" fill="rgb(250,87,22)" fg:x="13023" fg:w="7"/><text x="87.0469%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.01%)</title><rect x="86.8302%" y="245" width="0.0133%" height="15" fill="rgb(239,43,17)" fg:x="13028" fg:w="2"/><text x="87.0802%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::context::CtxRef::interact (3 samples, 0.02%)</title><rect x="86.8502%" y="245" width="0.0200%" height="15" fill="rgb(231,177,25)" fg:x="13031" fg:w="3"/><text x="87.1002%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::context::Context::layer_id_at (3 samples, 0.02%)</title><rect x="86.8502%" y="229" width="0.0200%" height="15" fill="rgb(219,179,1)" fg:x="13031" fg:w="3"/><text x="87.1002%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::memory::Memory::layer_id_at (2 samples, 0.01%)</title><rect x="86.8568%" y="213" width="0.0133%" height="15" fill="rgb(238,219,53)" fg:x="13032" fg:w="2"/><text x="87.1068%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::painter::Painter::set (5 samples, 0.03%)</title><rect x="86.8702%" y="245" width="0.0333%" height="15" fill="rgb(232,167,36)" fg:x="13034" fg:w="5"/><text x="87.1202%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::containers::frame::Prepared::end (10 samples, 0.07%)</title><rect x="86.8435%" y="261" width="0.0666%" height="15" fill="rgb(244,19,51)" fg:x="13030" fg:w="10"/><text x="87.0935%" y="271.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::widgets::plot::items::Values::generate_points (2 samples, 0.01%)</title><rect x="86.9235%" y="261" width="0.0133%" height="15" fill="rgb(224,6,22)" fg:x="13042" fg:w="2"/><text x="87.1735%" y="271.50"></text></g><g><title>benchmark-022a91b58b3cfee0`emath::round_to_decimals (7 samples, 0.05%)</title><rect x="86.9368%" y="261" width="0.0467%" height="15" fill="rgb(224,145,5)" fg:x="13044" fg:w="7"/><text x="87.1868%" y="271.50"></text></g><g><title>libsystem_m.dylib`floor (5 samples, 0.03%)</title><rect x="86.9901%" y="261" width="0.0333%" height="15" fill="rgb(234,130,49)" fg:x="13052" fg:w="5"/><text x="87.2401%" y="271.50"></text></g><g><title>libsystem_m.dylib`round (11 samples, 0.07%)</title><rect x="87.0235%" y="261" width="0.0733%" height="15" fill="rgb(254,6,2)" fg:x="13057" fg:w="11"/><text x="87.2735%" y="271.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::containers::frame::Frame::show (12,730 samples, 84.84%)</title><rect x="2.3727%" y="277" width="84.8440%" height="15" fill="rgb(208,96,46)" fg:x="356" fg:w="12730"/><text x="2.6227%" y="287.50">benchmark-022a91b58b3cfee0`egui::containers::frame::Frame::show</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (18 samples, 0.12%)</title><rect x="87.0968%" y="261" width="0.1200%" height="15" fill="rgb(239,3,39)" fg:x="13068" fg:w="18"/><text x="87.3468%" y="271.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::id::Id::with (2 samples, 0.01%)</title><rect x="87.2301%" y="261" width="0.0133%" height="15" fill="rgb(233,210,1)" fg:x="13088" fg:w="2"/><text x="87.4801%" y="271.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::layout::Layout::region_from_max_rect (3 samples, 0.02%)</title><rect x="87.2434%" y="261" width="0.0200%" height="15" fill="rgb(244,137,37)" fg:x="13090" fg:w="3"/><text x="87.4934%" y="271.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::containers::panel::CentralPanel::show (12,740 samples, 84.91%)</title><rect x="2.3594%" y="293" width="84.9107%" height="15" fill="rgb(240,136,2)" fg:x="354" fg:w="12740"/><text x="2.6094%" y="303.50">benchmark-022a91b58b3cfee0`egui::containers::panel::CentralPanel::show</text></g><g><title>benchmark-022a91b58b3cfee0`egui::ui::Ui::new (6 samples, 0.04%)</title><rect x="87.2301%" y="277" width="0.0400%" height="15" fill="rgb(239,18,37)" fg:x="13088" fg:w="6"/><text x="87.4801%" y="287.50"></text></g><g><title>benchmark-022a91b58b3cfee0`DYLD-STUB$$memmove (10 samples, 0.07%)</title><rect x="87.2967%" y="277" width="0.0666%" height="15" fill="rgb(218,185,22)" fg:x="13098" fg:w="10"/><text x="87.5467%" y="287.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::layers::GraphicLayers::drain (136 samples, 0.91%)</title><rect x="87.3700%" y="277" width="0.9064%" height="15" fill="rgb(225,218,4)" fg:x="13109" fg:w="136"/><text x="87.6200%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (119 samples, 0.79%)</title><rect x="87.4833%" y="261" width="0.7931%" height="15" fill="rgb(230,182,32)" fg:x="13126" fg:w="119"/><text x="87.7333%" y="271.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::memory::Memory::end_frame (6 samples, 0.04%)</title><rect x="88.2765%" y="277" width="0.0400%" height="15" fill="rgb(242,56,43)" fg:x="13245" fg:w="6"/><text x="88.5265%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.03%)</title><rect x="88.2831%" y="261" width="0.0333%" height="15" fill="rgb(233,99,24)" fg:x="13246" fg:w="5"/><text x="88.5331%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.03%)</title><rect x="88.2831%" y="245" width="0.0333%" height="15" fill="rgb(234,209,42)" fg:x="13246" fg:w="5"/><text x="88.5331%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (3 samples, 0.02%)</title><rect x="88.2965%" y="229" width="0.0200%" height="15" fill="rgb(227,7,12)" fg:x="13248" fg:w="3"/><text x="88.5465%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`epaint::text::fonts::Fonts::end_frame (13 samples, 0.09%)</title><rect x="88.3164%" y="277" width="0.0866%" height="15" fill="rgb(245,203,43)" fg:x="13251" fg:w="13"/><text x="88.5664%" y="287.50"></text></g><g><title>benchmark-022a91b58b3cfee0`hashbrown::map::HashMap&lt;K,V,S,A&gt;::retain (13 samples, 0.09%)</title><rect x="88.3164%" y="261" width="0.0866%" height="15" fill="rgb(238,205,33)" fg:x="13251" fg:w="13"/><text x="88.5664%" y="271.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::context::Context::end_frame (190 samples, 1.27%)</title><rect x="87.2701%" y="293" width="1.2663%" height="15" fill="rgb(231,56,7)" fg:x="13094" fg:w="190"/><text x="87.5201%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (20 samples, 0.13%)</title><rect x="88.4031%" y="277" width="0.1333%" height="15" fill="rgb(244,186,29)" fg:x="13264" fg:w="20"/><text x="88.6531%" y="287.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;egui::context::Context as core::clone::Clone&gt;::clone (9 samples, 0.06%)</title><rect x="88.6230%" y="277" width="0.0600%" height="15" fill="rgb(234,111,31)" fg:x="13297" fg:w="9"/><text x="88.8730%" y="287.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7 samples, 0.05%)</title><rect x="88.6364%" y="261" width="0.0467%" height="15" fill="rgb(241,149,10)" fg:x="13299" fg:w="7"/><text x="88.8864%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`malloc (6 samples, 0.04%)</title><rect x="88.6430%" y="245" width="0.0400%" height="15" fill="rgb(249,206,44)" fg:x="13300" fg:w="6"/><text x="88.8930%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (6 samples, 0.04%)</title><rect x="88.6430%" y="229" width="0.0400%" height="15" fill="rgb(251,153,30)" fg:x="13300" fg:w="6"/><text x="88.8930%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.04%)</title><rect x="88.6430%" y="213" width="0.0400%" height="15" fill="rgb(239,152,38)" fg:x="13300" fg:w="6"/><text x="88.8930%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.04%)</title><rect x="88.6430%" y="197" width="0.0400%" height="15" fill="rgb(249,139,47)" fg:x="13300" fg:w="6"/><text x="88.8930%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.01%)</title><rect x="88.6697%" y="181" width="0.0133%" height="15" fill="rgb(244,64,35)" fg:x="13304" fg:w="2"/><text x="88.9197%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::ptr::drop_in_place&lt;egui::input_state::InputState&gt; (2 samples, 0.01%)</title><rect x="88.7030%" y="261" width="0.0133%" height="15" fill="rgb(216,46,15)" fg:x="13309" fg:w="2"/><text x="88.9530%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.01%)</title><rect x="88.7030%" y="245" width="0.0133%" height="15" fill="rgb(250,74,19)" fg:x="13309" fg:w="2"/><text x="88.9530%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::sync::Arc&lt;T&gt;::drop_slow (8 samples, 0.05%)</title><rect x="88.6897%" y="277" width="0.0533%" height="15" fill="rgb(249,42,33)" fg:x="13307" fg:w="8"/><text x="88.9397%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (4 samples, 0.03%)</title><rect x="88.7163%" y="261" width="0.0267%" height="15" fill="rgb(242,149,17)" fg:x="13311" fg:w="4"/><text x="88.9663%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (4 samples, 0.03%)</title><rect x="88.7163%" y="245" width="0.0267%" height="15" fill="rgb(244,29,21)" fg:x="13311" fg:w="4"/><text x="88.9663%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (2 samples, 0.01%)</title><rect x="88.7297%" y="229" width="0.0133%" height="15" fill="rgb(220,130,37)" fg:x="13313" fg:w="2"/><text x="88.9797%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::ptr::drop_in_place&lt;egui::input_state::InputState&gt; (4 samples, 0.03%)</title><rect x="88.7497%" y="277" width="0.0267%" height="15" fill="rgb(211,67,2)" fg:x="13316" fg:w="4"/><text x="88.9997%" y="287.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::ptr::drop_in_place&lt;egui::input_state::PointerState&gt; (4 samples, 0.03%)</title><rect x="88.7497%" y="261" width="0.0267%" height="15" fill="rgb(235,68,52)" fg:x="13316" fg:w="4"/><text x="88.9997%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (3 samples, 0.02%)</title><rect x="88.7563%" y="245" width="0.0200%" height="15" fill="rgb(246,142,3)" fg:x="13317" fg:w="3"/><text x="89.0063%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.01%)</title><rect x="88.7630%" y="229" width="0.0133%" height="15" fill="rgb(241,25,7)" fg:x="13318" fg:w="2"/><text x="89.0130%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="88.7830%" y="261" width="0.0133%" height="15" fill="rgb(242,119,39)" fg:x="13321" fg:w="2"/><text x="89.0330%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.03%)</title><rect x="88.8097%" y="261" width="0.0333%" height="15" fill="rgb(241,98,45)" fg:x="13325" fg:w="5"/><text x="89.0597%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (3 samples, 0.02%)</title><rect x="88.8230%" y="245" width="0.0200%" height="15" fill="rgb(254,28,30)" fg:x="13327" fg:w="3"/><text x="89.0730%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::input_state::InputState::begin_frame (12 samples, 0.08%)</title><rect x="88.7763%" y="277" width="0.0800%" height="15" fill="rgb(241,142,54)" fg:x="13320" fg:w="12"/><text x="89.0263%" y="287.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::memory::Areas::set_state (6 samples, 0.04%)</title><rect x="88.8563%" y="277" width="0.0400%" height="15" fill="rgb(222,85,15)" fg:x="13332" fg:w="6"/><text x="89.1063%" y="287.50"></text></g><g><title>benchmark-022a91b58b3cfee0`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6 samples, 0.04%)</title><rect x="88.8563%" y="261" width="0.0400%" height="15" fill="rgb(210,85,47)" fg:x="13332" fg:w="6"/><text x="89.1063%" y="271.50"></text></g><g><title>benchmark-022a91b58b3cfee0`hashbrown::raw::RawTable&lt;T,A&gt;::insert (4 samples, 0.03%)</title><rect x="88.8696%" y="245" width="0.0267%" height="15" fill="rgb(224,206,25)" fg:x="13334" fg:w="4"/><text x="89.1196%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.01%)</title><rect x="88.8830%" y="229" width="0.0133%" height="15" fill="rgb(243,201,19)" fg:x="13336" fg:w="2"/><text x="89.1330%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.01%)</title><rect x="88.8963%" y="277" width="0.0133%" height="15" fill="rgb(236,59,4)" fg:x="13338" fg:w="2"/><text x="89.1463%" y="287.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::context::CtxRef::begin_frame (60 samples, 0.40%)</title><rect x="88.5431%" y="293" width="0.3999%" height="15" fill="rgb(254,179,45)" fg:x="13285" fg:w="60"/><text x="88.7931%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (4 samples, 0.03%)</title><rect x="88.9163%" y="277" width="0.0267%" height="15" fill="rgb(226,14,10)" fg:x="13341" fg:w="4"/><text x="89.1663%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`medium_size (2 samples, 0.01%)</title><rect x="88.9629%" y="277" width="0.0133%" height="15" fill="rgb(244,27,41)" fg:x="13348" fg:w="2"/><text x="89.2129%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free (6 samples, 0.04%)</title><rect x="88.9429%" y="293" width="0.0400%" height="15" fill="rgb(235,35,32)" fg:x="13345" fg:w="6"/><text x="89.1929%" y="303.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (13,354 samples, 89.00%)</title><rect x="0.0133%" y="325" width="89.0029%" height="15" fill="rgb(218,68,31)" fg:x="2" fg:w="13354"/><text x="0.2633%" y="335.50">benchmark-022a91b58b3cfee0`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold</text></g><g><title>benchmark-022a91b58b3cfee0`criterion::bencher::Bencher&lt;M&gt;::iter (13,353 samples, 89.00%)</title><rect x="0.0200%" y="309" width="88.9963%" height="15" fill="rgb(207,120,37)" fg:x="3" fg:w="13353"/><text x="0.2700%" y="319.50">benchmark-022a91b58b3cfee0`criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (4 samples, 0.03%)</title><rect x="88.9896%" y="293" width="0.0267%" height="15" fill="rgb(227,98,0)" fg:x="13352" fg:w="4"/><text x="89.2396%" y="303.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::ptr::drop_in_place&lt;epaint::shape::Shape&gt; (18 samples, 0.12%)</title><rect x="89.0363%" y="277" width="0.1200%" height="15" fill="rgb(207,7,3)" fg:x="13359" fg:w="18"/><text x="89.2863%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (2 samples, 0.01%)</title><rect x="89.1562%" y="277" width="0.0133%" height="15" fill="rgb(206,98,19)" fg:x="13377" fg:w="2"/><text x="89.4062%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.03%)</title><rect x="89.1696%" y="277" width="0.0333%" height="15" fill="rgb(217,5,26)" fg:x="13379" fg:w="5"/><text x="89.4196%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (2 samples, 0.01%)</title><rect x="89.1895%" y="261" width="0.0133%" height="15" fill="rgb(235,190,38)" fg:x="13382" fg:w="2"/><text x="89.4395%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.01%)</title><rect x="89.1895%" y="245" width="0.0133%" height="15" fill="rgb(247,86,24)" fg:x="13382" fg:w="2"/><text x="89.4395%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (5 samples, 0.03%)</title><rect x="89.2962%" y="245" width="0.0333%" height="15" fill="rgb(205,101,16)" fg:x="13398" fg:w="5"/><text x="89.5462%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::ptr::drop_in_place&lt;(egui::data::output::Output,alloc::vec::Vec&lt;epaint::ClippedShape&gt;)&gt; (51 samples, 0.34%)</title><rect x="89.0229%" y="293" width="0.3399%" height="15" fill="rgb(246,168,33)" fg:x="13357" fg:w="51"/><text x="89.2729%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (24 samples, 0.16%)</title><rect x="89.2029%" y="277" width="0.1600%" height="15" fill="rgb(231,114,1)" fg:x="13384" fg:w="24"/><text x="89.4529%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (16 samples, 0.11%)</title><rect x="89.2562%" y="261" width="0.1066%" height="15" fill="rgb(207,184,53)" fg:x="13392" fg:w="16"/><text x="89.5062%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (5 samples, 0.03%)</title><rect x="89.3295%" y="245" width="0.0333%" height="15" fill="rgb(224,95,51)" fg:x="13403" fg:w="5"/><text x="89.5795%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;egui::widgets::plot::items::Line as egui::widgets::plot::items::PlotItem&gt;::find_closest_element (171 samples, 1.14%)</title><rect x="89.6428%" y="245" width="1.1397%" height="15" fill="rgb(212,188,45)" fg:x="13450" fg:w="171"/><text x="89.8928%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::widgets::plot::transform::ScreenTransform::position_from_value (129 samples, 0.86%)</title><rect x="90.9624%" y="213" width="0.8598%" height="15" fill="rgb(223,154,38)" fg:x="13648" fg:w="129"/><text x="91.2124%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (161 samples, 1.07%)</title><rect x="90.8158%" y="229" width="1.0730%" height="15" fill="rgb(251,22,52)" fg:x="13626" fg:w="161"/><text x="91.0658%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc (10 samples, 0.07%)</title><rect x="91.8222%" y="213" width="0.0666%" height="15" fill="rgb(229,209,22)" fg:x="13777" fg:w="10"/><text x="92.0722%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (10 samples, 0.07%)</title><rect x="91.8222%" y="197" width="0.0666%" height="15" fill="rgb(234,138,34)" fg:x="13777" fg:w="10"/><text x="92.0722%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (10 samples, 0.07%)</title><rect x="91.8222%" y="181" width="0.0666%" height="15" fill="rgb(212,95,11)" fg:x="13777" fg:w="10"/><text x="92.0722%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (10 samples, 0.07%)</title><rect x="91.8222%" y="165" width="0.0666%" height="15" fill="rgb(240,179,47)" fg:x="13777" fg:w="10"/><text x="92.0722%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (4 samples, 0.03%)</title><rect x="91.8622%" y="149" width="0.0267%" height="15" fill="rgb(240,163,11)" fg:x="13783" fg:w="4"/><text x="92.1122%" y="159.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::widgets::plot::transform::ScreenTransform::position_from_value (13 samples, 0.09%)</title><rect x="91.8888%" y="229" width="0.0866%" height="15" fill="rgb(236,37,12)" fg:x="13787" fg:w="13"/><text x="92.1388%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;egui::widgets::plot::items::Line as egui::widgets::plot::items::PlotItem&gt;::get_shapes (181 samples, 1.21%)</title><rect x="90.7891%" y="245" width="1.2063%" height="15" fill="rgb(232,164,16)" fg:x="13622" fg:w="181"/><text x="91.0391%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.02%)</title><rect x="91.9755%" y="229" width="0.0200%" height="15" fill="rgb(244,205,15)" fg:x="13800" fg:w="3"/><text x="92.2255%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;epaint::color::Color32 as core::convert::From&lt;epaint::color::Rgba&gt;&gt;::from (51 samples, 0.34%)</title><rect x="91.9955%" y="245" width="0.3399%" height="15" fill="rgb(223,117,47)" fg:x="13803" fg:w="51"/><text x="92.2455%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`DYLD-STUB$$roundf (2 samples, 0.01%)</title><rect x="92.3354%" y="245" width="0.0133%" height="15" fill="rgb(244,107,35)" fg:x="13854" fg:w="2"/><text x="92.5854%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`small_try_realloc_in_place (2 samples, 0.01%)</title><rect x="92.3554%" y="165" width="0.0133%" height="15" fill="rgb(205,140,8)" fg:x="13857" fg:w="2"/><text x="92.6054%" y="175.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.03%)</title><rect x="92.3554%" y="245" width="0.0333%" height="15" fill="rgb(228,84,46)" fg:x="13857" fg:w="5"/><text x="92.6054%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::finish_grow (5 samples, 0.03%)</title><rect x="92.3554%" y="229" width="0.0333%" height="15" fill="rgb(254,188,9)" fg:x="13857" fg:w="5"/><text x="92.6054%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`realloc (5 samples, 0.03%)</title><rect x="92.3554%" y="213" width="0.0333%" height="15" fill="rgb(206,112,54)" fg:x="13857" fg:w="5"/><text x="92.6054%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (5 samples, 0.03%)</title><rect x="92.3554%" y="197" width="0.0333%" height="15" fill="rgb(216,84,49)" fg:x="13857" fg:w="5"/><text x="92.6054%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (5 samples, 0.03%)</title><rect x="92.3554%" y="181" width="0.0333%" height="15" fill="rgb(214,194,35)" fg:x="13857" fg:w="5"/><text x="92.6054%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.02%)</title><rect x="92.3687%" y="165" width="0.0200%" height="15" fill="rgb(249,28,3)" fg:x="13859" fg:w="3"/><text x="92.6187%" y="175.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::vec::Vec&lt;T,A&gt;::retain (6 samples, 0.04%)</title><rect x="92.3954%" y="245" width="0.0400%" height="15" fill="rgb(222,56,52)" fg:x="13863" fg:w="6"/><text x="92.6454%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (5 samples, 0.03%)</title><rect x="92.4020%" y="229" width="0.0333%" height="15" fill="rgb(245,217,50)" fg:x="13864" fg:w="5"/><text x="92.6520%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.01%)</title><rect x="92.4753%" y="229" width="0.0133%" height="15" fill="rgb(213,201,24)" fg:x="13875" fg:w="2"/><text x="92.7253%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::Formatter::pad_formatted_parts (2 samples, 0.01%)</title><rect x="92.4887%" y="229" width="0.0133%" height="15" fill="rgb(248,116,28)" fg:x="13877" fg:w="2"/><text x="92.7387%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (6 samples, 0.04%)</title><rect x="92.6220%" y="213" width="0.0400%" height="15" fill="rgb(219,72,43)" fg:x="13897" fg:w="6"/><text x="92.8720%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::Formatter::pad_formatted_parts (3 samples, 0.02%)</title><rect x="92.6620%" y="213" width="0.0200%" height="15" fill="rgb(209,138,14)" fg:x="13903" fg:w="3"/><text x="92.9120%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (3 samples, 0.02%)</title><rect x="92.8619%" y="117" width="0.0200%" height="15" fill="rgb(222,18,33)" fg:x="13933" fg:w="3"/><text x="93.1119%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (38 samples, 0.25%)</title><rect x="92.8819%" y="117" width="0.2533%" height="15" fill="rgb(213,199,7)" fg:x="13936" fg:w="38"/><text x="93.1319%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (34 samples, 0.23%)</title><rect x="92.9086%" y="101" width="0.2266%" height="15" fill="rgb(250,110,10)" fg:x="13940" fg:w="34"/><text x="93.1586%" y="111.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (55 samples, 0.37%)</title><rect x="92.7753%" y="181" width="0.3666%" height="15" fill="rgb(248,123,6)" fg:x="13920" fg:w="55"/><text x="93.0253%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::finish_grow (52 samples, 0.35%)</title><rect x="92.7953%" y="165" width="0.3466%" height="15" fill="rgb(206,91,31)" fg:x="13923" fg:w="52"/><text x="93.0453%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc (49 samples, 0.33%)</title><rect x="92.8152%" y="149" width="0.3266%" height="15" fill="rgb(211,154,13)" fg:x="13926" fg:w="49"/><text x="93.0652%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (45 samples, 0.30%)</title><rect x="92.8419%" y="133" width="0.2999%" height="15" fill="rgb(225,148,7)" fg:x="13930" fg:w="45"/><text x="93.0919%" y="143.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (70 samples, 0.47%)</title><rect x="92.7286%" y="197" width="0.4665%" height="15" fill="rgb(220,160,43)" fg:x="13913" fg:w="70"/><text x="92.9786%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (8 samples, 0.05%)</title><rect x="93.1418%" y="181" width="0.0533%" height="15" fill="rgb(213,52,39)" fg:x="13975" fg:w="8"/><text x="93.3918%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::Formatter::write_formatted_parts (79 samples, 0.53%)</title><rect x="92.6820%" y="213" width="0.5265%" height="15" fill="rgb(243,137,7)" fg:x="13906" fg:w="79"/><text x="92.9320%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::write (190 samples, 1.27%)</title><rect x="92.4487%" y="245" width="1.2663%" height="15" fill="rgb(230,79,13)" fg:x="13871" fg:w="190"/><text x="92.6987%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::float::float_to_decimal_common_shortest (181 samples, 1.21%)</title><rect x="92.5087%" y="229" width="1.2063%" height="15" fill="rgb(247,105,23)" fg:x="13880" fg:w="181"/><text x="92.7587%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::num::flt2dec::strategy::grisu::format_shortest_opt (76 samples, 0.51%)</title><rect x="93.2085%" y="213" width="0.5065%" height="15" fill="rgb(223,179,41)" fg:x="13985" fg:w="76"/><text x="93.4585%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (6 samples, 0.04%)</title><rect x="93.7350%" y="213" width="0.0400%" height="15" fill="rgb(218,9,34)" fg:x="14064" fg:w="6"/><text x="93.9850%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`small_size (4 samples, 0.03%)</title><rect x="93.7483%" y="197" width="0.0267%" height="15" fill="rgb(222,106,8)" fg:x="14066" fg:w="4"/><text x="93.9983%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (3 samples, 0.02%)</title><rect x="93.8216%" y="197" width="0.0200%" height="15" fill="rgb(211,220,0)" fg:x="14077" fg:w="3"/><text x="94.0716%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::ptr::drop_in_place&lt;egui::widgets::plot::items::Line&gt; (19 samples, 0.13%)</title><rect x="93.7283%" y="229" width="0.1266%" height="15" fill="rgb(229,52,16)" fg:x="14063" fg:w="19"/><text x="93.9783%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_small (12 samples, 0.08%)</title><rect x="93.7750%" y="213" width="0.0800%" height="15" fill="rgb(212,155,18)" fg:x="14070" fg:w="12"/><text x="94.0250%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (2 samples, 0.01%)</title><rect x="93.8683%" y="213" width="0.0133%" height="15" fill="rgb(242,21,14)" fg:x="14084" fg:w="2"/><text x="94.1183%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.01%)</title><rect x="93.8683%" y="197" width="0.0133%" height="15" fill="rgb(222,19,48)" fg:x="14084" fg:w="2"/><text x="94.1183%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.03%)</title><rect x="93.8550%" y="229" width="0.0333%" height="15" fill="rgb(232,45,27)" fg:x="14082" fg:w="5"/><text x="94.1050%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (6 samples, 0.04%)</title><rect x="93.9683%" y="197" width="0.0400%" height="15" fill="rgb(249,103,42)" fg:x="14099" fg:w="6"/><text x="94.2183%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (24 samples, 0.16%)</title><rect x="93.8883%" y="229" width="0.1600%" height="15" fill="rgb(246,81,33)" fg:x="14087" fg:w="24"/><text x="94.1383%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (17 samples, 0.11%)</title><rect x="93.9350%" y="213" width="0.1133%" height="15" fill="rgb(252,33,42)" fg:x="14094" fg:w="17"/><text x="94.1850%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (6 samples, 0.04%)</title><rect x="94.0083%" y="197" width="0.0400%" height="15" fill="rgb(209,212,41)" fg:x="14105" fg:w="6"/><text x="94.2583%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::ptr::drop_in_place&lt;egui::widgets::plot::Prepared&gt; (51 samples, 0.34%)</title><rect x="93.7217%" y="245" width="0.3399%" height="15" fill="rgb(207,154,6)" fg:x="14062" fg:w="51"/><text x="93.9717%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::painter::Painter::extend (60 samples, 0.40%)</title><rect x="94.0682%" y="245" width="0.3999%" height="15" fill="rgb(223,64,47)" fg:x="14114" fg:w="60"/><text x="94.3182%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::layers::PaintList::extend (60 samples, 0.40%)</title><rect x="94.0682%" y="229" width="0.3999%" height="15" fill="rgb(211,161,38)" fg:x="14114" fg:w="60"/><text x="94.3182%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (60 samples, 0.40%)</title><rect x="94.0682%" y="213" width="0.3999%" height="15" fill="rgb(219,138,40)" fg:x="14114" fg:w="60"/><text x="94.3182%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`benchmark::criterion_benchmark::lines_plot::_{{closure}} (18 samples, 0.12%)</title><rect x="94.8880%" y="213" width="0.1200%" height="15" fill="rgb(241,228,46)" fg:x="14237" fg:w="18"/><text x="95.1380%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (97 samples, 0.65%)</title><rect x="94.5215%" y="229" width="0.6465%" height="15" fill="rgb(223,209,38)" fg:x="14182" fg:w="97"/><text x="94.7715%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc (24 samples, 0.16%)</title><rect x="95.0080%" y="213" width="0.1600%" height="15" fill="rgb(236,164,45)" fg:x="14255" fg:w="24"/><text x="95.2580%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (23 samples, 0.15%)</title><rect x="95.0147%" y="197" width="0.1533%" height="15" fill="rgb(231,15,5)" fg:x="14256" fg:w="23"/><text x="95.2647%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (21 samples, 0.14%)</title><rect x="95.0280%" y="181" width="0.1400%" height="15" fill="rgb(252,35,15)" fg:x="14258" fg:w="21"/><text x="95.2780%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (21 samples, 0.14%)</title><rect x="95.0280%" y="165" width="0.1400%" height="15" fill="rgb(248,181,18)" fg:x="14258" fg:w="21"/><text x="95.2780%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (6 samples, 0.04%)</title><rect x="95.1280%" y="149" width="0.0400%" height="15" fill="rgb(233,39,42)" fg:x="14273" fg:w="6"/><text x="95.3780%" y="159.50"></text></g><g><title>benchmark-022a91b58b3cfee0`benchmark::criterion_benchmark::lines_plot::_{{closure}} (11 samples, 0.07%)</title><rect x="95.1746%" y="229" width="0.0733%" height="15" fill="rgb(238,110,33)" fg:x="14280" fg:w="11"/><text x="95.4246%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.01%)</title><rect x="95.2479%" y="229" width="0.0133%" height="15" fill="rgb(233,195,10)" fg:x="14291" fg:w="2"/><text x="95.4979%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (2 samples, 0.01%)</title><rect x="95.2479%" y="213" width="0.0133%" height="15" fill="rgb(254,105,3)" fg:x="14291" fg:w="2"/><text x="95.4979%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.01%)</title><rect x="95.2479%" y="197" width="0.0133%" height="15" fill="rgb(221,225,9)" fg:x="14291" fg:w="2"/><text x="95.4979%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (6 samples, 0.04%)</title><rect x="95.3546%" y="197" width="0.0400%" height="15" fill="rgb(224,227,45)" fg:x="14307" fg:w="6"/><text x="95.6046%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (21 samples, 0.14%)</title><rect x="95.2613%" y="229" width="0.1400%" height="15" fill="rgb(229,198,43)" fg:x="14293" fg:w="21"/><text x="95.5113%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (11 samples, 0.07%)</title><rect x="95.3279%" y="213" width="0.0733%" height="15" fill="rgb(206,209,35)" fg:x="14303" fg:w="11"/><text x="95.5779%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::widgets::plot::items::Values::generate_points (140 samples, 0.93%)</title><rect x="94.4748%" y="245" width="0.9331%" height="15" fill="rgb(245,195,53)" fg:x="14175" fg:w="140"/><text x="94.7248%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::num::flt2dec::strategy::dragon::format_exact (2 samples, 0.01%)</title><rect x="95.4212%" y="181" width="0.0133%" height="15" fill="rgb(240,92,26)" fg:x="14317" fg:w="2"/><text x="95.6712%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::fmt::format (5 samples, 0.03%)</title><rect x="95.4079%" y="229" width="0.0333%" height="15" fill="rgb(207,40,23)" fg:x="14315" fg:w="5"/><text x="95.6579%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::write (4 samples, 0.03%)</title><rect x="95.4146%" y="213" width="0.0267%" height="15" fill="rgb(223,111,35)" fg:x="14316" fg:w="4"/><text x="95.6646%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::float::float_to_decimal_common_exact (3 samples, 0.02%)</title><rect x="95.4212%" y="197" width="0.0200%" height="15" fill="rgb(229,147,28)" fg:x="14317" fg:w="3"/><text x="95.6712%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::widgets::plot::items::rulers_at_value (6 samples, 0.04%)</title><rect x="95.4079%" y="245" width="0.0400%" height="15" fill="rgb(211,29,28)" fg:x="14315" fg:w="6"/><text x="95.6579%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (5 samples, 0.03%)</title><rect x="95.6012%" y="197" width="0.0333%" height="15" fill="rgb(228,72,33)" fg:x="14344" fg:w="5"/><text x="95.8512%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.01%)</title><rect x="95.6212%" y="181" width="0.0133%" height="15" fill="rgb(205,214,31)" fg:x="14347" fg:w="2"/><text x="95.8712%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::Formatter::pad_formatted_parts (4 samples, 0.03%)</title><rect x="95.7211%" y="181" width="0.0267%" height="15" fill="rgb(224,111,15)" fg:x="14362" fg:w="4"/><text x="95.9711%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (3 samples, 0.02%)</title><rect x="95.9411%" y="85" width="0.0200%" height="15" fill="rgb(253,21,26)" fg:x="14395" fg:w="3"/><text x="96.1911%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (41 samples, 0.27%)</title><rect x="95.9611%" y="85" width="0.2733%" height="15" fill="rgb(245,139,43)" fg:x="14398" fg:w="41"/><text x="96.2111%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (37 samples, 0.25%)</title><rect x="95.9877%" y="69" width="0.2466%" height="15" fill="rgb(252,170,7)" fg:x="14402" fg:w="37"/><text x="96.2377%" y="79.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (59 samples, 0.39%)</title><rect x="95.8478%" y="149" width="0.3932%" height="15" fill="rgb(231,118,14)" fg:x="14381" fg:w="59"/><text x="96.0978%" y="159.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::finish_grow (53 samples, 0.35%)</title><rect x="95.8878%" y="133" width="0.3532%" height="15" fill="rgb(238,83,0)" fg:x="14387" fg:w="53"/><text x="96.1378%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc (50 samples, 0.33%)</title><rect x="95.9078%" y="117" width="0.3332%" height="15" fill="rgb(221,39,39)" fg:x="14390" fg:w="50"/><text x="96.1578%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (48 samples, 0.32%)</title><rect x="95.9211%" y="101" width="0.3199%" height="15" fill="rgb(222,119,46)" fg:x="14392" fg:w="48"/><text x="96.1711%" y="111.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::finish_grow (4 samples, 0.03%)</title><rect x="96.2410%" y="149" width="0.0267%" height="15" fill="rgb(222,165,49)" fg:x="14440" fg:w="4"/><text x="96.4910%" y="159.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (71 samples, 0.47%)</title><rect x="95.8211%" y="165" width="0.4732%" height="15" fill="rgb(219,113,52)" fg:x="14377" fg:w="71"/><text x="96.0711%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (4 samples, 0.03%)</title><rect x="96.2677%" y="149" width="0.0267%" height="15" fill="rgb(214,7,15)" fg:x="14444" fg:w="4"/><text x="96.5177%" y="159.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::Formatter::write_formatted_parts (84 samples, 0.56%)</title><rect x="95.7478%" y="181" width="0.5599%" height="15" fill="rgb(235,32,4)" fg:x="14366" fg:w="84"/><text x="95.9978%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::num::flt2dec::strategy::grisu::format_exact_opt::possibly_round (7 samples, 0.05%)</title><rect x="96.7475%" y="165" width="0.0467%" height="15" fill="rgb(238,90,54)" fg:x="14516" fg:w="7"/><text x="96.9975%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (3 samples, 0.02%)</title><rect x="96.7742%" y="149" width="0.0200%" height="15" fill="rgb(213,208,19)" fg:x="14520" fg:w="3"/><text x="97.0242%" y="159.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::fmt::format (197 samples, 1.31%)</title><rect x="95.4879%" y="229" width="1.3130%" height="15" fill="rgb(233,156,4)" fg:x="14327" fg:w="197"/><text x="95.7379%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::write (189 samples, 1.26%)</title><rect x="95.5412%" y="213" width="1.2597%" height="15" fill="rgb(207,194,5)" fg:x="14335" fg:w="189"/><text x="95.7912%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::float::float_to_decimal_common_exact (174 samples, 1.16%)</title><rect x="95.6412%" y="197" width="1.1597%" height="15" fill="rgb(206,111,30)" fg:x="14350" fg:w="174"/><text x="95.8912%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::num::flt2dec::strategy::grisu::format_exact_opt (74 samples, 0.49%)</title><rect x="96.3077%" y="181" width="0.4932%" height="15" fill="rgb(243,70,54)" fg:x="14450" fg:w="74"/><text x="96.5577%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;f64 as core::num::dec2flt::rawfp::RawFloat&gt;::short_fast_pow10 (3 samples, 0.02%)</title><rect x="96.9541%" y="213" width="0.0200%" height="15" fill="rgb(242,28,8)" fg:x="14547" fg:w="3"/><text x="97.2041%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::num::dec2flt::dec2flt (37 samples, 0.25%)</title><rect x="96.8009%" y="229" width="0.2466%" height="15" fill="rgb(219,106,18)" fg:x="14524" fg:w="37"/><text x="97.0509%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::num::dec2flt::parse::parse_decimal (10 samples, 0.07%)</title><rect x="96.9808%" y="213" width="0.0666%" height="15" fill="rgb(244,222,10)" fg:x="14551" fg:w="10"/><text x="97.2308%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::num::dec2flt::extract_sign (2 samples, 0.01%)</title><rect x="97.0475%" y="229" width="0.0133%" height="15" fill="rgb(236,179,52)" fg:x="14561" fg:w="2"/><text x="97.2975%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (5 samples, 0.03%)</title><rect x="97.0608%" y="229" width="0.0333%" height="15" fill="rgb(213,23,39)" fg:x="14563" fg:w="5"/><text x="97.3108%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (17 samples, 0.11%)</title><rect x="97.0941%" y="229" width="0.1133%" height="15" fill="rgb(238,48,10)" fg:x="14568" fg:w="17"/><text x="97.3441%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (11 samples, 0.07%)</title><rect x="97.1341%" y="213" width="0.0733%" height="15" fill="rgb(251,196,23)" fg:x="14574" fg:w="11"/><text x="97.3841%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (11 samples, 0.07%)</title><rect x="97.1341%" y="197" width="0.0733%" height="15" fill="rgb(250,152,24)" fg:x="14574" fg:w="11"/><text x="97.3841%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`emath::round_to_decimals (287 samples, 1.91%)</title><rect x="95.4479%" y="245" width="1.9128%" height="15" fill="rgb(209,150,17)" fg:x="14321" fg:w="287"/><text x="95.6979%" y="255.50">b..</text></g><g><title>libsystem_malloc.dylib`free_tiny (23 samples, 0.15%)</title><rect x="97.2074%" y="229" width="0.1533%" height="15" fill="rgb(234,202,34)" fg:x="14585" fg:w="23"/><text x="97.4574%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`__rdl_dealloc (2 samples, 0.01%)</title><rect x="97.5273%" y="229" width="0.0133%" height="15" fill="rgb(253,148,53)" fg:x="14633" fg:w="2"/><text x="97.7773%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;epaint::text::fonts::LayoutJob as core::hash::Hash&gt;::hash (5 samples, 0.03%)</title><rect x="97.6473%" y="213" width="0.0333%" height="15" fill="rgb(218,129,16)" fg:x="14651" fg:w="5"/><text x="97.8973%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (15 samples, 0.10%)</title><rect x="97.6873%" y="213" width="0.1000%" height="15" fill="rgb(216,85,19)" fg:x="14657" fg:w="15"/><text x="97.9373%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (5 samples, 0.03%)</title><rect x="97.7539%" y="197" width="0.0333%" height="15" fill="rgb(235,228,7)" fg:x="14667" fg:w="5"/><text x="98.0039%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (5 samples, 0.03%)</title><rect x="97.8406%" y="197" width="0.0333%" height="15" fill="rgb(245,175,0)" fg:x="14680" fg:w="5"/><text x="98.0906%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (5 samples, 0.03%)</title><rect x="97.8406%" y="181" width="0.0333%" height="15" fill="rgb(208,168,36)" fg:x="14680" fg:w="5"/><text x="98.0906%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free (14 samples, 0.09%)</title><rect x="97.7939%" y="213" width="0.0933%" height="15" fill="rgb(246,171,24)" fg:x="14673" fg:w="14"/><text x="98.0439%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.01%)</title><rect x="97.8739%" y="197" width="0.0133%" height="15" fill="rgb(215,142,24)" fg:x="14685" fg:w="2"/><text x="98.1239%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (14 samples, 0.09%)</title><rect x="97.8872%" y="213" width="0.0933%" height="15" fill="rgb(250,187,7)" fg:x="14687" fg:w="14"/><text x="98.1372%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`epaint::text::fonts::GalleyCache::layout (66 samples, 0.44%)</title><rect x="97.5473%" y="229" width="0.4399%" height="15" fill="rgb(228,66,33)" fg:x="14636" fg:w="66"/><text x="97.7973%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`epaint::text::fonts::Fonts::layout_single_line (96 samples, 0.64%)</title><rect x="97.3607%" y="245" width="0.6398%" height="15" fill="rgb(234,215,21)" fg:x="14608" fg:w="96"/><text x="97.6107%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (2 samples, 0.01%)</title><rect x="97.9872%" y="229" width="0.0133%" height="15" fill="rgb(222,191,20)" fg:x="14702" fg:w="2"/><text x="98.2372%" y="239.50"></text></g><g><title>libsystem_m.dylib`0x00007fff6b1acc70 (97 samples, 0.65%)</title><rect x="98.0005%" y="245" width="0.6465%" height="15" fill="rgb(245,79,54)" fg:x="14704" fg:w="97"/><text x="98.2505%" y="255.50"></text></g><g><title>libsystem_m.dylib`roundf (32 samples, 0.21%)</title><rect x="98.6470%" y="245" width="0.2133%" height="15" fill="rgb(240,10,37)" fg:x="14801" fg:w="32"/><text x="98.8970%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (2 samples, 0.01%)</title><rect x="98.8603%" y="245" width="0.0133%" height="15" fill="rgb(214,192,32)" fg:x="14833" fg:w="2"/><text x="99.1103%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;egui::widgets::plot::Plot as egui::widgets::Widget&gt;::ui (1,449 samples, 9.66%)</title><rect x="89.3762%" y="261" width="9.6574%" height="15" fill="rgb(209,36,54)" fg:x="13410" fg:w="1449"/><text x="89.6262%" y="271.50">benchmark-022a..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (24 samples, 0.16%)</title><rect x="98.8736%" y="245" width="0.1600%" height="15" fill="rgb(220,10,11)" fg:x="14835" fg:w="24"/><text x="99.1236%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;epaint::color::Rgba as core::convert::From&lt;epaint::color::Hsva&gt;&gt;::from (3 samples, 0.02%)</title><rect x="99.0869%" y="213" width="0.0200%" height="15" fill="rgb(221,106,17)" fg:x="14867" fg:w="3"/><text x="99.3369%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;epaint::color::Color32 as core::convert::From&lt;epaint::color::Hsva&gt;&gt;::from (4 samples, 0.03%)</title><rect x="99.0869%" y="229" width="0.0267%" height="15" fill="rgb(251,142,44)" fg:x="14867" fg:w="4"/><text x="99.3369%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;epaint::color::Color32 as core::convert::From&lt;epaint::color::Rgba&gt;&gt;::from (5 samples, 0.03%)</title><rect x="99.1136%" y="229" width="0.0333%" height="15" fill="rgb(238,13,15)" fg:x="14871" fg:w="5"/><text x="99.3636%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.02%)</title><rect x="99.1536%" y="229" width="0.0200%" height="15" fill="rgb(208,107,27)" fg:x="14877" fg:w="3"/><text x="99.4036%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::finish_grow (3 samples, 0.02%)</title><rect x="99.1536%" y="213" width="0.0200%" height="15" fill="rgb(205,136,37)" fg:x="14877" fg:w="3"/><text x="99.4036%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`realloc (3 samples, 0.02%)</title><rect x="99.1536%" y="197" width="0.0200%" height="15" fill="rgb(250,205,27)" fg:x="14877" fg:w="3"/><text x="99.4036%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (3 samples, 0.02%)</title><rect x="99.1536%" y="181" width="0.0200%" height="15" fill="rgb(210,80,43)" fg:x="14877" fg:w="3"/><text x="99.4036%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (2 samples, 0.01%)</title><rect x="99.1602%" y="165" width="0.0133%" height="15" fill="rgb(247,160,36)" fg:x="14878" fg:w="2"/><text x="99.4102%" y="175.50"></text></g><g><title>libsystem_m.dylib`0x00007fff6b1acc70 (12 samples, 0.08%)</title><rect x="99.1736%" y="229" width="0.0800%" height="15" fill="rgb(234,13,49)" fg:x="14880" fg:w="12"/><text x="99.4236%" y="239.50"></text></g><g><title>libsystem_m.dylib`roundf (5 samples, 0.03%)</title><rect x="99.2535%" y="229" width="0.0333%" height="15" fill="rgb(234,122,0)" fg:x="14892" fg:w="5"/><text x="99.5035%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (2 samples, 0.01%)</title><rect x="99.3602%" y="165" width="0.0133%" height="15" fill="rgb(207,146,38)" fg:x="14908" fg:w="2"/><text x="99.6102%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc (20 samples, 0.13%)</title><rect x="99.2869%" y="229" width="0.1333%" height="15" fill="rgb(207,177,25)" fg:x="14897" fg:w="20"/><text x="99.5369%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (20 samples, 0.13%)</title><rect x="99.2869%" y="213" width="0.1333%" height="15" fill="rgb(211,178,42)" fg:x="14897" fg:w="20"/><text x="99.5369%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (19 samples, 0.13%)</title><rect x="99.2935%" y="197" width="0.1266%" height="15" fill="rgb(230,69,54)" fg:x="14898" fg:w="19"/><text x="99.5435%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (19 samples, 0.13%)</title><rect x="99.2935%" y="181" width="0.1266%" height="15" fill="rgb(214,135,41)" fg:x="14898" fg:w="19"/><text x="99.5435%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (7 samples, 0.05%)</title><rect x="99.3735%" y="165" width="0.0467%" height="15" fill="rgb(237,67,25)" fg:x="14910" fg:w="7"/><text x="99.6235%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.01%)</title><rect x="99.4068%" y="149" width="0.0133%" height="15" fill="rgb(222,189,50)" fg:x="14915" fg:w="2"/><text x="99.6568%" y="159.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::widgets::plot::Plot::line (60 samples, 0.40%)</title><rect x="99.0603%" y="245" width="0.3999%" height="15" fill="rgb(245,148,34)" fg:x="14863" fg:w="60"/><text x="99.3103%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (6 samples, 0.04%)</title><rect x="99.4202%" y="229" width="0.0400%" height="15" fill="rgb(222,29,6)" fg:x="14917" fg:w="6"/><text x="99.6702%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::widgets::plot::items::Line::new (4 samples, 0.03%)</title><rect x="99.4601%" y="245" width="0.0267%" height="15" fill="rgb(221,189,43)" fg:x="14923" fg:w="4"/><text x="99.7101%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc (18 samples, 0.12%)</title><rect x="99.4868%" y="245" width="0.1200%" height="15" fill="rgb(207,36,27)" fg:x="14927" fg:w="18"/><text x="99.7368%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (18 samples, 0.12%)</title><rect x="99.4868%" y="229" width="0.1200%" height="15" fill="rgb(217,90,24)" fg:x="14927" fg:w="18"/><text x="99.7368%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (18 samples, 0.12%)</title><rect x="99.4868%" y="213" width="0.1200%" height="15" fill="rgb(224,66,35)" fg:x="14927" fg:w="18"/><text x="99.7368%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (17 samples, 0.11%)</title><rect x="99.4935%" y="197" width="0.1133%" height="15" fill="rgb(221,13,50)" fg:x="14928" fg:w="17"/><text x="99.7435%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (6 samples, 0.04%)</title><rect x="99.5668%" y="181" width="0.0400%" height="15" fill="rgb(236,68,49)" fg:x="14939" fg:w="6"/><text x="99.8168%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`benchmark::criterion_benchmark::lines_plot (95 samples, 0.63%)</title><rect x="99.0403%" y="261" width="0.6332%" height="15" fill="rgb(229,146,28)" fg:x="14860" fg:w="95"/><text x="99.2903%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (10 samples, 0.07%)</title><rect x="99.6068%" y="245" width="0.0666%" height="15" fill="rgb(225,31,38)" fg:x="14945" fg:w="10"/><text x="99.8568%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::containers::frame::Frame::begin (2 samples, 0.01%)</title><rect x="99.6801%" y="261" width="0.0133%" height="15" fill="rgb(250,208,3)" fg:x="14956" fg:w="2"/><text x="99.9301%" y="271.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::painter::Painter::add (2 samples, 0.01%)</title><rect x="99.6801%" y="245" width="0.0133%" height="15" fill="rgb(246,54,23)" fg:x="14956" fg:w="2"/><text x="99.9301%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::containers::frame::Prepared::end (2 samples, 0.01%)</title><rect x="99.6934%" y="261" width="0.0133%" height="15" fill="rgb(243,76,11)" fg:x="14958" fg:w="2"/><text x="99.9434%" y="271.50"></text></g><g><title>benchmark-022a91b58b3cfee0`emath::round_to_decimals (3 samples, 0.02%)</title><rect x="99.7134%" y="261" width="0.0200%" height="15" fill="rgb(245,21,50)" fg:x="14961" fg:w="3"/><text x="99.9634%" y="271.50"></text></g><g><title>libsystem_m.dylib`floor (2 samples, 0.01%)</title><rect x="99.7401%" y="261" width="0.0133%" height="15" fill="rgb(228,9,43)" fg:x="14965" fg:w="2"/><text x="99.9901%" y="271.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::containers::frame::Frame::show (1,562 samples, 10.41%)</title><rect x="89.3695%" y="277" width="10.4106%" height="15" fill="rgb(208,100,47)" fg:x="13409" fg:w="1562"/><text x="89.6195%" y="287.50">benchmark-022a9..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.02%)</title><rect x="99.7601%" y="261" width="0.0200%" height="15" fill="rgb(232,26,8)" fg:x="14968" fg:w="3"/><text x="100.0101%" y="271.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::containers::panel::CentralPanel::show (1,563 samples, 10.42%)</title><rect x="89.3695%" y="293" width="10.4172%" height="15" fill="rgb(216,166,38)" fg:x="13409" fg:w="1563"/><text x="89.6195%" y="303.50">benchmark-022a9..</text></g><g><title>benchmark-022a91b58b3cfee0`egui::layers::GraphicLayers::drain (12 samples, 0.08%)</title><rect x="99.7867%" y="277" width="0.0800%" height="15" fill="rgb(251,202,51)" fg:x="14972" fg:w="12"/><text x="100.0367%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (9 samples, 0.06%)</title><rect x="99.8067%" y="261" width="0.0600%" height="15" fill="rgb(254,216,34)" fg:x="14975" fg:w="9"/><text x="100.0567%" y="271.50"></text></g><g><title>benchmark-022a91b58b3cfee0`epaint::text::fonts::Fonts::end_frame (2 samples, 0.01%)</title><rect x="99.8667%" y="277" width="0.0133%" height="15" fill="rgb(251,32,27)" fg:x="14984" fg:w="2"/><text x="100.1167%" y="287.50"></text></g><g><title>benchmark-022a91b58b3cfee0`hashbrown::map::HashMap&lt;K,V,S,A&gt;::retain (2 samples, 0.01%)</title><rect x="99.8667%" y="261" width="0.0133%" height="15" fill="rgb(208,127,28)" fg:x="14984" fg:w="2"/><text x="100.1167%" y="271.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::context::Context::end_frame (16 samples, 0.11%)</title><rect x="99.7867%" y="293" width="0.1066%" height="15" fill="rgb(224,137,22)" fg:x="14972" fg:w="16"/><text x="100.0367%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.01%)</title><rect x="99.8800%" y="277" width="0.0133%" height="15" fill="rgb(254,70,32)" fg:x="14986" fg:w="2"/><text x="100.1300%" y="287.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;egui::context::Context as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="99.8934%" y="277" width="0.0133%" height="15" fill="rgb(229,75,37)" fg:x="14988" fg:w="2"/><text x="100.1434%" y="287.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::sync::Arc&lt;T&gt;::drop_slow (3 samples, 0.02%)</title><rect x="99.9067%" y="277" width="0.0200%" height="15" fill="rgb(252,64,23)" fg:x="14990" fg:w="3"/><text x="100.1567%" y="287.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::ptr::drop_in_place&lt;egui::input_state::InputState&gt; (2 samples, 0.01%)</title><rect x="99.9134%" y="261" width="0.0133%" height="15" fill="rgb(232,162,48)" fg:x="14991" fg:w="2"/><text x="100.1634%" y="271.50"></text></g><g><title>benchmark-022a91b58b3cfee0`criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (14,996 samples, 99.95%)</title><rect x="0.0133%" y="357" width="99.9467%" height="15" fill="rgb(246,160,12)" fg:x="2" fg:w="14996"/><text x="0.2633%" y="367.50">benchmark-022a91b58b3cfee0`criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>benchmark-022a91b58b3cfee0`criterion::routine::Routine::profile (14,996 samples, 99.95%)</title><rect x="0.0133%" y="341" width="99.9467%" height="15" fill="rgb(247,166,0)" fg:x="2" fg:w="14996"/><text x="0.2633%" y="351.50">benchmark-022a91b58b3cfee0`criterion::routine::Routine::profile</text></g><g><title>benchmark-022a91b58b3cfee0`&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (1,642 samples, 10.94%)</title><rect x="89.0163%" y="325" width="10.9437%" height="15" fill="rgb(249,219,21)" fg:x="13356" fg:w="1642"/><text x="89.2663%" y="335.50">benchmark-022a91..</text></g><g><title>benchmark-022a91b58b3cfee0`criterion::bencher::Bencher&lt;M&gt;::iter (1,642 samples, 10.94%)</title><rect x="89.0163%" y="309" width="10.9437%" height="15" fill="rgb(205,209,3)" fg:x="13356" fg:w="1642"/><text x="89.2663%" y="319.50">benchmark-022a91..</text></g><g><title>benchmark-022a91b58b3cfee0`egui::context::CtxRef::begin_frame (10 samples, 0.07%)</title><rect x="99.8934%" y="293" width="0.0666%" height="15" fill="rgb(243,44,1)" fg:x="14988" fg:w="10"/><text x="100.1434%" y="303.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::context::CtxRef::begin_frame (2 samples, 0.01%)</title><rect x="99.9600%" y="357" width="0.0133%" height="15" fill="rgb(206,159,16)" fg:x="14998" fg:w="2"/><text x="100.2100%" y="367.50"></text></g><g><title>benchmark-022a91b58b3cfee0`epaint::text::fonts::Fonts::from_definitions (2 samples, 0.01%)</title><rect x="99.9600%" y="341" width="0.0133%" height="15" fill="rgb(244,77,30)" fg:x="14998" fg:w="2"/><text x="100.2100%" y="351.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.01%)</title><rect x="99.9600%" y="325" width="0.0133%" height="15" fill="rgb(218,69,12)" fg:x="14998" fg:w="2"/><text x="100.2100%" y="335.50"></text></g><g><title>benchmark-022a91b58b3cfee0`epaint::text::font::Font::new (2 samples, 0.01%)</title><rect x="99.9600%" y="309" width="0.0133%" height="15" fill="rgb(212,87,7)" fg:x="14998" fg:w="2"/><text x="100.2100%" y="319.50"></text></g><g><title>benchmark-022a91b58b3cfee0`epaint::text::font::Font::glyph_info (2 samples, 0.01%)</title><rect x="99.9600%" y="293" width="0.0133%" height="15" fill="rgb(245,114,25)" fg:x="14998" fg:w="2"/><text x="100.2100%" y="303.50"></text></g><g><title>benchmark-022a91b58b3cfee0`epaint::text::font::Font::glyph_info_no_cache_or_fallback (2 samples, 0.01%)</title><rect x="99.9600%" y="277" width="0.0133%" height="15" fill="rgb(210,61,42)" fg:x="14998" fg:w="2"/><text x="100.2100%" y="287.50"></text></g><g><title>benchmark-022a91b58b3cfee0`epaint::text::font::FontImpl::glyph_info (2 samples, 0.01%)</title><rect x="99.9600%" y="261" width="0.0133%" height="15" fill="rgb(211,52,33)" fg:x="14998" fg:w="2"/><text x="100.2100%" y="271.50"></text></g><g><title>benchmark-022a91b58b3cfee0`rusttype::PositionedGlyph::draw (2 samples, 0.01%)</title><rect x="99.9600%" y="245" width="0.0133%" height="15" fill="rgb(234,58,33)" fg:x="14998" fg:w="2"/><text x="100.2100%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`ttf_parser::tables::glyf::outline_impl (2 samples, 0.01%)</title><rect x="99.9600%" y="229" width="0.0133%" height="15" fill="rgb(220,115,36)" fg:x="14998" fg:w="2"/><text x="100.2100%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`main (15,003 samples, 99.99%)</title><rect x="0.0000%" y="437" width="99.9933%" height="15" fill="rgb(243,153,54)" fg:x="0" fg:w="15003"/><text x="0.2500%" y="447.50">benchmark-022a91b58b3cfee0`main</text></g><g><title>benchmark-022a91b58b3cfee0`std::rt::lang_start_internal (15,003 samples, 99.99%)</title><rect x="0.0000%" y="421" width="99.9933%" height="15" fill="rgb(251,47,18)" fg:x="0" fg:w="15003"/><text x="0.2500%" y="431.50">benchmark-022a91b58b3cfee0`std::rt::lang_start_internal</text></g><g><title>benchmark-022a91b58b3cfee0`std::rt::lang_start::_{{closure}} (15,003 samples, 99.99%)</title><rect x="0.0000%" y="405" width="99.9933%" height="15" fill="rgb(242,102,42)" fg:x="0" fg:w="15003"/><text x="0.2500%" y="415.50">benchmark-022a91b58b3cfee0`std::rt::lang_start::_{{closure}}</text></g><g><title>benchmark-022a91b58b3cfee0`std::sys_common::backtrace::__rust_begin_short_backtrace (15,003 samples, 99.99%)</title><rect x="0.0000%" y="389" width="99.9933%" height="15" fill="rgb(234,31,38)" fg:x="0" fg:w="15003"/><text x="0.2500%" y="399.50">benchmark-022a91b58b3cfee0`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>benchmark-022a91b58b3cfee0`benchmark::main (15,003 samples, 99.99%)</title><rect x="0.0000%" y="373" width="99.9933%" height="15" fill="rgb(221,117,51)" fg:x="0" fg:w="15003"/><text x="0.2500%" y="383.50">benchmark-022a91b58b3cfee0`benchmark::main</text></g><g><title>all (15,004 samples, 100%)</title><rect x="0.0000%" y="485" width="100.0000%" height="15" fill="rgb(212,20,18)" fg:x="0" fg:w="15004"/><text x="0.2500%" y="495.50"></text></g><g><title>benchmark-022a91b58b3cfee0`0x5 (15,004 samples, 100.00%)</title><rect x="0.0000%" y="469" width="100.0000%" height="15" fill="rgb(245,133,36)" fg:x="0" fg:w="15004"/><text x="0.2500%" y="479.50">benchmark-022a91b58b3cfee0`0x5</text></g><g><title>libdyld.dylib`start (15,004 samples, 100.00%)</title><rect x="0.0000%" y="453" width="100.0000%" height="15" fill="rgb(212,6,19)" fg:x="0" fg:w="15004"/><text x="0.2500%" y="463.50">libdyld.dylib`start</text></g></svg></svg>