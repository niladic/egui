<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="518" onload="init(evt)" viewBox="0 0 1200 518" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="518" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="501.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="501.00"> </text><svg id="frames" x="10" width="1180" total_samples="15164"><g><title>libsystem_malloc.dylib`malloc (3 samples, 0.02%)</title><rect x="0.0264%" y="245" width="0.0198%" height="15" fill="rgb(227,0,7)" fg:x="4" fg:w="3"/><text x="0.2764%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (3 samples, 0.02%)</title><rect x="0.0264%" y="229" width="0.0198%" height="15" fill="rgb(217,0,24)" fg:x="4" fg:w="3"/><text x="0.2764%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.02%)</title><rect x="0.0264%" y="213" width="0.0198%" height="15" fill="rgb(221,193,54)" fg:x="4" fg:w="3"/><text x="0.2764%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (3 samples, 0.02%)</title><rect x="0.0264%" y="197" width="0.0198%" height="15" fill="rgb(248,212,6)" fg:x="4" fg:w="3"/><text x="0.2764%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.01%)</title><rect x="0.0330%" y="181" width="0.0132%" height="15" fill="rgb(208,68,35)" fg:x="5" fg:w="2"/><text x="0.2830%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::finish_grow (4 samples, 0.03%)</title><rect x="0.0264%" y="261" width="0.0264%" height="15" fill="rgb(232,128,0)" fg:x="4" fg:w="4"/><text x="0.2764%" y="271.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.03%)</title><rect x="0.0264%" y="277" width="0.0330%" height="15" fill="rgb(207,160,47)" fg:x="4" fg:w="5"/><text x="0.2764%" y="287.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::ptr::drop_in_place&lt;(egui::data::output::Output,alloc::vec::Vec&lt;epaint::ClippedShape&gt;)&gt; (497 samples, 3.28%)</title><rect x="0.0594%" y="277" width="3.2775%" height="15" fill="rgb(228,23,34)" fg:x="9" fg:w="497"/><text x="0.3094%" y="287.50">ben..</text></g><g><title>benchmark-022a91b58b3cfee0`core::ptr::drop_in_place&lt;epaint::shape::Shape&gt; (441 samples, 2.91%)</title><rect x="0.4286%" y="261" width="2.9082%" height="15" fill="rgb(218,30,26)" fg:x="65" fg:w="441"/><text x="0.6786%" y="271.50">be..</text></g><g><title>benchmark-022a91b58b3cfee0`core::ptr::drop_in_place&lt;epaint::shape::Shape&gt; (56 samples, 0.37%)</title><rect x="3.3369%" y="277" width="0.3693%" height="15" fill="rgb(220,122,19)" fg:x="506" fg:w="56"/><text x="3.5869%" y="287.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;&amp;T as core::fmt::Display&gt;::fmt (3 samples, 0.02%)</title><rect x="6.8452%" y="229" width="0.0198%" height="15" fill="rgb(250,228,42)" fg:x="1038" fg:w="3"/><text x="7.0952%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.01%)</title><rect x="6.8649%" y="229" width="0.0132%" height="15" fill="rgb(240,193,28)" fg:x="1041" fg:w="2"/><text x="7.1149%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;egui::widgets::plot::items::Line as egui::widgets::plot::items::PlotItem&gt;::find_closest_element (796 samples, 5.25%)</title><rect x="6.8847%" y="229" width="5.2493%" height="15" fill="rgb(216,20,37)" fg:x="1044" fg:w="796"/><text x="7.1347%" y="239.50">benchm..</text></g><g><title>benchmark-022a91b58b3cfee0`&lt;egui::widgets::plot::items::Line as egui::widgets::plot::items::PlotItem&gt;::get_bounds (454 samples, 2.99%)</title><rect x="12.1340%" y="229" width="2.9939%" height="15" fill="rgb(206,188,39)" fg:x="1840" fg:w="454"/><text x="12.3840%" y="239.50">ben..</text></g><g><title>libsystem_malloc.dylib`medium_try_realloc_in_place (5 samples, 0.03%)</title><rect x="20.7993%" y="117" width="0.0330%" height="15" fill="rgb(217,207,13)" fg:x="3154" fg:w="5"/><text x="21.0493%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`medium_free_list_add_ptr (2 samples, 0.01%)</title><rect x="20.8190%" y="101" width="0.0132%" height="15" fill="rgb(231,73,38)" fg:x="3157" fg:w="2"/><text x="21.0690%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (20 samples, 0.13%)</title><rect x="20.7993%" y="149" width="0.1319%" height="15" fill="rgb(225,20,46)" fg:x="3154" fg:w="20"/><text x="21.0493%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (20 samples, 0.13%)</title><rect x="20.7993%" y="133" width="0.1319%" height="15" fill="rgb(210,31,41)" fg:x="3154" fg:w="20"/><text x="21.0493%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (15 samples, 0.10%)</title><rect x="20.8322%" y="117" width="0.0989%" height="15" fill="rgb(221,200,47)" fg:x="3159" fg:w="15"/><text x="21.0822%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`realloc (22 samples, 0.15%)</title><rect x="20.7993%" y="165" width="0.1451%" height="15" fill="rgb(226,26,5)" fg:x="3154" fg:w="22"/><text x="21.0493%" y="175.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (23 samples, 0.15%)</title><rect x="20.7993%" y="197" width="0.1517%" height="15" fill="rgb(249,33,26)" fg:x="3154" fg:w="23"/><text x="21.0493%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::finish_grow (23 samples, 0.15%)</title><rect x="20.7993%" y="181" width="0.1517%" height="15" fill="rgb(235,183,28)" fg:x="3154" fg:w="23"/><text x="21.0493%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,882 samples, 12.41%)</title><rect x="15.1477%" y="213" width="12.4110%" height="15" fill="rgb(221,5,38)" fg:x="2297" fg:w="1882"/><text x="15.3977%" y="223.50">benchmark-022a91b58..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1,002 samples, 6.61%)</title><rect x="20.9509%" y="197" width="6.6078%" height="15" fill="rgb(247,18,42)" fg:x="3177" fg:w="1002"/><text x="21.2009%" y="207.50">libsystem..</text></g><g><title>benchmark-022a91b58b3cfee0`&lt;egui::widgets::plot::items::Points as egui::widgets::plot::items::PlotItem&gt;::get_shapes (2,019 samples, 13.31%)</title><rect x="15.1279%" y="229" width="13.3144%" height="15" fill="rgb(241,131,45)" fg:x="2294" fg:w="2019"/><text x="15.3779%" y="239.50">benchmark-022a91b58b..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (133 samples, 0.88%)</title><rect x="27.5653%" y="213" width="0.8771%" height="15" fill="rgb(249,31,29)" fg:x="4180" fg:w="133"/><text x="27.8153%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;egui::widgets::plot::items::Points as egui::widgets::plot::items::PlotItem&gt;::highlighted (4 samples, 0.03%)</title><rect x="28.4424%" y="229" width="0.0264%" height="15" fill="rgb(225,111,53)" fg:x="4313" fg:w="4"/><text x="28.6924%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;epaint::color::Color32 as core::convert::From&lt;epaint::color::Rgba&gt;&gt;::from (363 samples, 2.39%)</title><rect x="28.4687%" y="229" width="2.3938%" height="15" fill="rgb(238,160,17)" fg:x="4317" fg:w="363"/><text x="28.7187%" y="239.50">be..</text></g><g><title>libsystem_m.dylib`roundf (9 samples, 0.06%)</title><rect x="30.8032%" y="213" width="0.0594%" height="15" fill="rgb(214,148,48)" fg:x="4671" fg:w="9"/><text x="31.0532%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`DYLD-STUB$$powf (4 samples, 0.03%)</title><rect x="30.8626%" y="229" width="0.0264%" height="15" fill="rgb(232,36,49)" fg:x="4680" fg:w="4"/><text x="31.1126%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`DYLD-STUB$$roundf (24 samples, 0.16%)</title><rect x="30.8889%" y="229" width="0.1583%" height="15" fill="rgb(209,103,24)" fg:x="4684" fg:w="24"/><text x="31.1389%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`__rdl_dealloc (3 samples, 0.02%)</title><rect x="31.0472%" y="229" width="0.0198%" height="15" fill="rgb(229,88,8)" fg:x="4708" fg:w="3"/><text x="31.2972%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`__rust_dealloc (2 samples, 0.01%)</title><rect x="31.0670%" y="229" width="0.0132%" height="15" fill="rgb(213,181,19)" fg:x="4711" fg:w="2"/><text x="31.3170%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc (3 samples, 0.02%)</title><rect x="31.0934%" y="197" width="0.0198%" height="15" fill="rgb(254,191,54)" fg:x="4715" fg:w="3"/><text x="31.3434%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (3 samples, 0.02%)</title><rect x="31.0934%" y="181" width="0.0198%" height="15" fill="rgb(241,83,37)" fg:x="4715" fg:w="3"/><text x="31.3434%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.02%)</title><rect x="31.0934%" y="165" width="0.0198%" height="15" fill="rgb(233,36,39)" fg:x="4715" fg:w="3"/><text x="31.3434%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (3 samples, 0.02%)</title><rect x="31.0934%" y="149" width="0.0198%" height="15" fill="rgb(226,3,54)" fg:x="4715" fg:w="3"/><text x="31.3434%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`medium_try_realloc_in_place (3 samples, 0.02%)</title><rect x="31.1461%" y="149" width="0.0198%" height="15" fill="rgb(245,192,40)" fg:x="4723" fg:w="3"/><text x="31.3961%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`small_try_realloc_in_place (3 samples, 0.02%)</title><rect x="31.1725%" y="149" width="0.0198%" height="15" fill="rgb(238,167,29)" fg:x="4727" fg:w="3"/><text x="31.4225%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`medium_malloc_should_clear (4 samples, 0.03%)</title><rect x="31.1989%" y="133" width="0.0264%" height="15" fill="rgb(232,182,51)" fg:x="4731" fg:w="4"/><text x="31.4489%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`medium_malloc_from_free_list (3 samples, 0.02%)</title><rect x="31.2055%" y="117" width="0.0198%" height="15" fill="rgb(231,60,39)" fg:x="4732" fg:w="3"/><text x="31.4555%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.05%)</title><rect x="31.1923%" y="149" width="0.0462%" height="15" fill="rgb(208,69,12)" fg:x="4730" fg:w="7"/><text x="31.4423%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (2 samples, 0.01%)</title><rect x="31.2253%" y="133" width="0.0132%" height="15" fill="rgb(235,93,37)" fg:x="4735" fg:w="2"/><text x="31.4753%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (24 samples, 0.16%)</title><rect x="31.1198%" y="165" width="0.1583%" height="15" fill="rgb(213,116,39)" fg:x="4719" fg:w="24"/><text x="31.3698%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (6 samples, 0.04%)</title><rect x="31.2385%" y="149" width="0.0396%" height="15" fill="rgb(222,207,29)" fg:x="4737" fg:w="6"/><text x="31.4885%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (26 samples, 0.17%)</title><rect x="31.1132%" y="181" width="0.1715%" height="15" fill="rgb(206,96,30)" fg:x="4718" fg:w="26"/><text x="31.3632%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (33 samples, 0.22%)</title><rect x="31.0868%" y="229" width="0.2176%" height="15" fill="rgb(218,138,4)" fg:x="4714" fg:w="33"/><text x="31.3368%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::finish_grow (32 samples, 0.21%)</title><rect x="31.0934%" y="213" width="0.2110%" height="15" fill="rgb(250,191,14)" fg:x="4715" fg:w="32"/><text x="31.3434%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`realloc (29 samples, 0.19%)</title><rect x="31.1132%" y="197" width="0.1912%" height="15" fill="rgb(239,60,40)" fg:x="4718" fg:w="29"/><text x="31.3632%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.01%)</title><rect x="31.3110%" y="213" width="0.0132%" height="15" fill="rgb(206,27,48)" fg:x="4748" fg:w="2"/><text x="31.5610%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::slice::merge_sort (6 samples, 0.04%)</title><rect x="31.3044%" y="229" width="0.0396%" height="15" fill="rgb(225,35,8)" fg:x="4747" fg:w="6"/><text x="31.5544%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc (3 samples, 0.02%)</title><rect x="31.3242%" y="213" width="0.0198%" height="15" fill="rgb(250,213,24)" fg:x="4750" fg:w="3"/><text x="31.5742%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (3 samples, 0.02%)</title><rect x="31.3242%" y="197" width="0.0198%" height="15" fill="rgb(247,123,22)" fg:x="4750" fg:w="3"/><text x="31.5742%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.02%)</title><rect x="31.3242%" y="181" width="0.0198%" height="15" fill="rgb(231,138,38)" fg:x="4750" fg:w="3"/><text x="31.5742%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (3 samples, 0.02%)</title><rect x="31.3242%" y="165" width="0.0198%" height="15" fill="rgb(231,145,46)" fg:x="4750" fg:w="3"/><text x="31.5742%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.01%)</title><rect x="31.3308%" y="149" width="0.0132%" height="15" fill="rgb(251,118,11)" fg:x="4751" fg:w="2"/><text x="31.5808%" y="159.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="31.3506%" y="213" width="0.0132%" height="15" fill="rgb(217,147,25)" fg:x="4754" fg:w="2"/><text x="31.6006%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::vec::Vec&lt;T,A&gt;::retain (25 samples, 0.16%)</title><rect x="31.3440%" y="229" width="0.1649%" height="15" fill="rgb(247,81,37)" fg:x="4753" fg:w="25"/><text x="31.5940%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (22 samples, 0.15%)</title><rect x="31.3638%" y="213" width="0.1451%" height="15" fill="rgb(209,12,38)" fg:x="4756" fg:w="22"/><text x="31.6138%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.02%)</title><rect x="31.4891%" y="197" width="0.0198%" height="15" fill="rgb(227,1,9)" fg:x="4775" fg:w="3"/><text x="31.7391%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::ArgumentV1::from_usize (4 samples, 0.03%)</title><rect x="31.5088%" y="229" width="0.0264%" height="15" fill="rgb(248,47,43)" fg:x="4778" fg:w="4"/><text x="31.7588%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::float::_&lt;impl core::fmt::Display for f64&gt;::fmt (6 samples, 0.04%)</title><rect x="31.5352%" y="229" width="0.0396%" height="15" fill="rgb(221,10,30)" fg:x="4782" fg:w="6"/><text x="31.7852%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;&amp;T as core::fmt::Display&gt;::fmt (3 samples, 0.02%)</title><rect x="31.6737%" y="213" width="0.0198%" height="15" fill="rgb(210,229,1)" fg:x="4803" fg:w="3"/><text x="31.9237%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (15 samples, 0.10%)</title><rect x="31.6935%" y="213" width="0.0989%" height="15" fill="rgb(222,148,37)" fg:x="4806" fg:w="15"/><text x="31.9435%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (6 samples, 0.04%)</title><rect x="31.7528%" y="197" width="0.0396%" height="15" fill="rgb(234,67,33)" fg:x="4815" fg:w="6"/><text x="32.0028%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`DYLD-STUB$$memcpy (6 samples, 0.04%)</title><rect x="31.7924%" y="213" width="0.0396%" height="15" fill="rgb(247,98,35)" fg:x="4821" fg:w="6"/><text x="32.0424%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::Formatter::pad_formatted_parts (3 samples, 0.02%)</title><rect x="31.8320%" y="213" width="0.0198%" height="15" fill="rgb(247,138,52)" fg:x="4827" fg:w="3"/><text x="32.0820%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::float::_&lt;impl core::fmt::Display for f64&gt;::fmt (7 samples, 0.05%)</title><rect x="31.8518%" y="213" width="0.0462%" height="15" fill="rgb(213,79,30)" fg:x="4830" fg:w="7"/><text x="32.1018%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::Formatter::pad_formatted_parts (6 samples, 0.04%)</title><rect x="32.2804%" y="197" width="0.0396%" height="15" fill="rgb(246,177,23)" fg:x="4895" fg:w="6"/><text x="32.5304%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`__rdl_alloc (2 samples, 0.01%)</title><rect x="32.6299%" y="149" width="0.0132%" height="15" fill="rgb(230,62,27)" fg:x="4948" fg:w="2"/><text x="32.8799%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (3 samples, 0.02%)</title><rect x="32.7816%" y="117" width="0.0198%" height="15" fill="rgb(216,154,8)" fg:x="4971" fg:w="3"/><text x="33.0316%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (11 samples, 0.07%)</title><rect x="32.8673%" y="101" width="0.0725%" height="15" fill="rgb(244,35,45)" fg:x="4984" fg:w="11"/><text x="33.1173%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (184 samples, 1.21%)</title><rect x="32.9399%" y="101" width="1.2134%" height="15" fill="rgb(251,115,12)" fg:x="4995" fg:w="184"/><text x="33.1899%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (172 samples, 1.13%)</title><rect x="33.0190%" y="85" width="1.1343%" height="15" fill="rgb(240,54,50)" fg:x="5007" fg:w="172"/><text x="33.2690%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (207 samples, 1.37%)</title><rect x="32.8014%" y="117" width="1.3651%" height="15" fill="rgb(233,84,52)" fg:x="4974" fg:w="207"/><text x="33.0514%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.01%)</title><rect x="34.1533%" y="101" width="0.0132%" height="15" fill="rgb(207,117,47)" fg:x="5179" fg:w="2"/><text x="34.4033%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`malloc (221 samples, 1.46%)</title><rect x="32.7354%" y="133" width="1.4574%" height="15" fill="rgb(249,43,39)" fg:x="4964" fg:w="221"/><text x="32.9854%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (4 samples, 0.03%)</title><rect x="34.1664%" y="117" width="0.0264%" height="15" fill="rgb(209,38,44)" fg:x="5181" fg:w="4"/><text x="34.4164%" y="127.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::finish_grow (235 samples, 1.55%)</title><rect x="32.6497%" y="149" width="1.5497%" height="15" fill="rgb(236,212,23)" fg:x="4951" fg:w="235"/><text x="32.8997%" y="159.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (252 samples, 1.66%)</title><rect x="32.5442%" y="165" width="1.6618%" height="15" fill="rgb(242,79,21)" fg:x="4935" fg:w="252"/><text x="32.7942%" y="175.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::finish_grow (4 samples, 0.03%)</title><rect x="34.2060%" y="165" width="0.0264%" height="15" fill="rgb(211,96,35)" fg:x="5187" fg:w="4"/><text x="34.4560%" y="175.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (279 samples, 1.84%)</title><rect x="32.4387%" y="181" width="1.8399%" height="15" fill="rgb(253,215,40)" fg:x="4919" fg:w="279"/><text x="32.6887%" y="191.50">b..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (7 samples, 0.05%)</title><rect x="34.2324%" y="165" width="0.0462%" height="15" fill="rgb(211,81,21)" fg:x="5191" fg:w="7"/><text x="34.4824%" y="175.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::Formatter::write_formatted_parts (298 samples, 1.97%)</title><rect x="32.3200%" y="197" width="1.9652%" height="15" fill="rgb(208,190,38)" fg:x="4901" fg:w="298"/><text x="32.5700%" y="207.50">b..</text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::float::float_to_decimal_common_shortest (600 samples, 3.96%)</title><rect x="31.8979%" y="213" width="3.9567%" height="15" fill="rgb(235,213,38)" fg:x="4837" fg:w="600"/><text x="32.1479%" y="223.50">benc..</text></g><g><title>benchmark-022a91b58b3cfee0`core::num::flt2dec::strategy::grisu::format_shortest_opt (238 samples, 1.57%)</title><rect x="34.2851%" y="197" width="1.5695%" height="15" fill="rgb(237,122,38)" fg:x="5199" fg:w="238"/><text x="34.5351%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::write (652 samples, 4.30%)</title><rect x="31.5748%" y="229" width="4.2997%" height="15" fill="rgb(244,218,35)" fg:x="4788" fg:w="652"/><text x="31.8248%" y="239.50">bench..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.01%)</title><rect x="35.8613%" y="213" width="0.0132%" height="15" fill="rgb(240,68,47)" fg:x="5438" fg:w="2"/><text x="36.1113%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`__rdl_dealloc (4 samples, 0.03%)</title><rect x="35.9272%" y="213" width="0.0264%" height="15" fill="rgb(210,16,53)" fg:x="5448" fg:w="4"/><text x="36.1772%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (3 samples, 0.02%)</title><rect x="35.9734%" y="197" width="0.0198%" height="15" fill="rgb(235,124,12)" fg:x="5455" fg:w="3"/><text x="36.2234%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`small_size (5 samples, 0.03%)</title><rect x="36.0327%" y="181" width="0.0330%" height="15" fill="rgb(224,169,11)" fg:x="5464" fg:w="5"/><text x="36.2827%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free (16 samples, 0.11%)</title><rect x="35.9931%" y="197" width="0.1055%" height="15" fill="rgb(250,166,2)" fg:x="5458" fg:w="16"/><text x="36.2431%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (5 samples, 0.03%)</title><rect x="36.0657%" y="181" width="0.0330%" height="15" fill="rgb(242,216,29)" fg:x="5469" fg:w="5"/><text x="36.3157%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (3 samples, 0.02%)</title><rect x="36.0789%" y="165" width="0.0198%" height="15" fill="rgb(230,116,27)" fg:x="5471" fg:w="3"/><text x="36.3289%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (14 samples, 0.09%)</title><rect x="36.2833%" y="181" width="0.0923%" height="15" fill="rgb(228,99,48)" fg:x="5502" fg:w="14"/><text x="36.5333%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_find_by_ptr (2 samples, 0.01%)</title><rect x="36.3756%" y="181" width="0.0132%" height="15" fill="rgb(253,11,6)" fg:x="5516" fg:w="2"/><text x="36.6256%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr (4 samples, 0.03%)</title><rect x="36.3888%" y="181" width="0.0264%" height="15" fill="rgb(247,143,39)" fg:x="5518" fg:w="4"/><text x="36.6388%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_small (60 samples, 0.40%)</title><rect x="36.0987%" y="197" width="0.3957%" height="15" fill="rgb(236,97,10)" fg:x="5474" fg:w="60"/><text x="36.3487%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (12 samples, 0.08%)</title><rect x="36.4152%" y="181" width="0.0791%" height="15" fill="rgb(233,208,19)" fg:x="5522" fg:w="12"/><text x="36.6652%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::ptr::drop_in_place&lt;egui::widgets::plot::items::Line&gt; (85 samples, 0.56%)</title><rect x="35.9536%" y="213" width="0.5605%" height="15" fill="rgb(216,164,2)" fg:x="5452" fg:w="85"/><text x="36.2036%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (2 samples, 0.01%)</title><rect x="36.5009%" y="197" width="0.0132%" height="15" fill="rgb(220,129,5)" fg:x="5535" fg:w="2"/><text x="36.7509%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (10 samples, 0.07%)</title><rect x="36.5405%" y="197" width="0.0659%" height="15" fill="rgb(242,17,10)" fg:x="5541" fg:w="10"/><text x="36.7905%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (10 samples, 0.07%)</title><rect x="36.5405%" y="181" width="0.0659%" height="15" fill="rgb(242,107,0)" fg:x="5541" fg:w="10"/><text x="36.7905%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free (15 samples, 0.10%)</title><rect x="36.5207%" y="213" width="0.0989%" height="15" fill="rgb(251,28,31)" fg:x="5538" fg:w="15"/><text x="36.7707%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.01%)</title><rect x="36.6064%" y="197" width="0.0132%" height="15" fill="rgb(233,223,10)" fg:x="5551" fg:w="2"/><text x="36.8564%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_small (2 samples, 0.01%)</title><rect x="36.6196%" y="213" width="0.0132%" height="15" fill="rgb(215,21,27)" fg:x="5553" fg:w="2"/><text x="36.8696%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (15 samples, 0.10%)</title><rect x="36.9098%" y="181" width="0.0989%" height="15" fill="rgb(232,23,21)" fg:x="5597" fg:w="15"/><text x="37.1598%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (74 samples, 0.49%)</title><rect x="36.6328%" y="213" width="0.4880%" height="15" fill="rgb(244,5,23)" fg:x="5555" fg:w="74"/><text x="36.8828%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (50 samples, 0.33%)</title><rect x="36.7911%" y="197" width="0.3297%" height="15" fill="rgb(226,81,46)" fg:x="5579" fg:w="50"/><text x="37.0411%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (17 samples, 0.11%)</title><rect x="37.0087%" y="181" width="0.1121%" height="15" fill="rgb(247,70,30)" fg:x="5612" fg:w="17"/><text x="37.2587%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::ptr::drop_in_place&lt;egui::widgets::plot::Prepared&gt; (190 samples, 1.25%)</title><rect x="35.8876%" y="229" width="1.2530%" height="15" fill="rgb(212,68,19)" fg:x="5442" fg:w="190"/><text x="36.1376%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (3 samples, 0.02%)</title><rect x="37.1208%" y="213" width="0.0198%" height="15" fill="rgb(240,187,13)" fg:x="5629" fg:w="3"/><text x="37.3708%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::any::serializable::any_map::AnyMap&lt;Key&gt;::insert (3 samples, 0.02%)</title><rect x="37.1472%" y="229" width="0.0198%" height="15" fill="rgb(223,113,26)" fg:x="5633" fg:w="3"/><text x="37.3972%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc (2 samples, 0.01%)</title><rect x="37.1538%" y="213" width="0.0132%" height="15" fill="rgb(206,192,2)" fg:x="5634" fg:w="2"/><text x="37.4038%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3,315 samples, 21.86%)</title><rect x="37.1736%" y="197" width="21.8610%" height="15" fill="rgb(241,108,4)" fg:x="5637" fg:w="3315"/><text x="37.4236%" y="207.50">benchmark-022a91b58b3cfee0`&lt;alloc::..</text></g><g><title>libsystem_kernel.dylib`madvise (18 samples, 0.12%)</title><rect x="59.0543%" y="181" width="0.1187%" height="15" fill="rgb(247,173,49)" fg:x="8955" fg:w="18"/><text x="59.3043%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (21 samples, 0.14%)</title><rect x="59.0412%" y="197" width="0.1385%" height="15" fill="rgb(224,114,35)" fg:x="8953" fg:w="21"/><text x="59.2912%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::painter::Painter::extend (3,340 samples, 22.03%)</title><rect x="37.1670%" y="229" width="22.0259%" height="15" fill="rgb(245,159,27)" fg:x="5636" fg:w="3340"/><text x="37.4170%" y="239.50">benchmark-022a91b58b3cfee0`egui::pa..</text></g><g><title>benchmark-022a91b58b3cfee0`egui::layers::PaintList::extend (3,339 samples, 22.02%)</title><rect x="37.1736%" y="213" width="22.0193%" height="15" fill="rgb(245,172,44)" fg:x="5637" fg:w="3339"/><text x="37.4236%" y="223.50">benchmark-022a91b58b3cfee0`egui::la..</text></g><g><title>libsystem_malloc.dylib`szone_size (2 samples, 0.01%)</title><rect x="59.1796%" y="197" width="0.0132%" height="15" fill="rgb(236,23,11)" fg:x="8974" fg:w="2"/><text x="59.4296%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::ui::Ui::allocate_exact_size (3 samples, 0.02%)</title><rect x="59.1928%" y="229" width="0.0198%" height="15" fill="rgb(205,117,38)" fg:x="8976" fg:w="3"/><text x="59.4428%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::ui::Ui::allocate_space (2 samples, 0.01%)</title><rect x="59.1994%" y="213" width="0.0132%" height="15" fill="rgb(237,72,25)" fg:x="8977" fg:w="2"/><text x="59.4494%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::widgets::plot::items::Values::generate_points (2 samples, 0.01%)</title><rect x="59.2126%" y="229" width="0.0132%" height="15" fill="rgb(244,70,9)" fg:x="8979" fg:w="2"/><text x="59.4626%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (3 samples, 0.02%)</title><rect x="59.2522%" y="101" width="0.0198%" height="15" fill="rgb(217,125,39)" fg:x="8985" fg:w="3"/><text x="59.5022%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (5 samples, 0.03%)</title><rect x="59.2522%" y="117" width="0.0330%" height="15" fill="rgb(235,36,10)" fg:x="8985" fg:w="5"/><text x="59.5022%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.01%)</title><rect x="59.2720%" y="101" width="0.0132%" height="15" fill="rgb(251,123,47)" fg:x="8988" fg:w="2"/><text x="59.5220%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.01%)</title><rect x="59.2720%" y="85" width="0.0132%" height="15" fill="rgb(221,13,13)" fg:x="8988" fg:w="2"/><text x="59.5220%" y="95.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (7 samples, 0.05%)</title><rect x="59.2456%" y="165" width="0.0462%" height="15" fill="rgb(238,131,9)" fg:x="8984" fg:w="7"/><text x="59.4956%" y="175.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::finish_grow (6 samples, 0.04%)</title><rect x="59.2522%" y="149" width="0.0396%" height="15" fill="rgb(211,50,8)" fg:x="8985" fg:w="6"/><text x="59.5022%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc (6 samples, 0.04%)</title><rect x="59.2522%" y="133" width="0.0396%" height="15" fill="rgb(245,182,24)" fg:x="8985" fg:w="6"/><text x="59.5022%" y="143.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (8 samples, 0.05%)</title><rect x="59.2456%" y="181" width="0.0528%" height="15" fill="rgb(242,14,37)" fg:x="8984" fg:w="8"/><text x="59.4956%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::fmt::format (12 samples, 0.08%)</title><rect x="59.2390%" y="213" width="0.0791%" height="15" fill="rgb(246,228,12)" fg:x="8983" fg:w="12"/><text x="59.4890%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::write (12 samples, 0.08%)</title><rect x="59.2390%" y="197" width="0.0791%" height="15" fill="rgb(213,55,15)" fg:x="8983" fg:w="12"/><text x="59.4890%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::float::float_to_decimal_common_exact (3 samples, 0.02%)</title><rect x="59.2983%" y="181" width="0.0198%" height="15" fill="rgb(209,9,3)" fg:x="8992" fg:w="3"/><text x="59.5483%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::num::flt2dec::strategy::grisu::format_exact_opt (2 samples, 0.01%)</title><rect x="59.3049%" y="165" width="0.0132%" height="15" fill="rgb(230,59,30)" fg:x="8993" fg:w="2"/><text x="59.5549%" y="175.50"></text></g><g><title>benchmark-022a91b58b3cfee0`epaint::shape::Shape::text (2 samples, 0.01%)</title><rect x="59.3181%" y="213" width="0.0132%" height="15" fill="rgb(209,121,21)" fg:x="8995" fg:w="2"/><text x="59.5681%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::widgets::plot::items::rulers_at_value (17 samples, 0.11%)</title><rect x="59.2258%" y="229" width="0.1121%" height="15" fill="rgb(220,109,13)" fg:x="8981" fg:w="17"/><text x="59.4758%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;f64 as core::num::dec2flt::rawfp::RawFloat&gt;::from_int (3 samples, 0.02%)</title><rect x="59.5094%" y="213" width="0.0198%" height="15" fill="rgb(232,18,1)" fg:x="9024" fg:w="3"/><text x="59.7594%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;f64 as core::num::dec2flt::rawfp::RawFloat&gt;::short_fast_pow10 (4 samples, 0.03%)</title><rect x="59.5291%" y="213" width="0.0264%" height="15" fill="rgb(215,41,42)" fg:x="9027" fg:w="4"/><text x="59.7791%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::float::_&lt;impl core::fmt::Display for f64&gt;::fmt (4 samples, 0.03%)</title><rect x="59.6610%" y="197" width="0.0264%" height="15" fill="rgb(224,123,36)" fg:x="9047" fg:w="4"/><text x="59.9110%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (18 samples, 0.12%)</title><rect x="59.9314%" y="181" width="0.1187%" height="15" fill="rgb(240,125,3)" fg:x="9088" fg:w="18"/><text x="60.1814%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (7 samples, 0.05%)</title><rect x="60.0040%" y="165" width="0.0462%" height="15" fill="rgb(205,98,50)" fg:x="9099" fg:w="7"/><text x="60.2540%" y="175.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::Formatter::write_formatted_parts (2 samples, 0.01%)</title><rect x="60.0501%" y="181" width="0.0132%" height="15" fill="rgb(205,185,37)" fg:x="9106" fg:w="2"/><text x="60.3001%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::float::_&lt;impl core::fmt::Display for f64&gt;::fmt (4 samples, 0.03%)</title><rect x="60.0633%" y="181" width="0.0264%" height="15" fill="rgb(238,207,15)" fg:x="9108" fg:w="4"/><text x="60.3133%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (7 samples, 0.05%)</title><rect x="60.6238%" y="165" width="0.0462%" height="15" fill="rgb(213,199,42)" fg:x="9193" fg:w="7"/><text x="60.8738%" y="175.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::Formatter::pad_formatted_parts (9 samples, 0.06%)</title><rect x="60.6700%" y="165" width="0.0594%" height="15" fill="rgb(235,201,11)" fg:x="9200" fg:w="9"/><text x="60.9200%" y="175.50"></text></g><g><title>benchmark-022a91b58b3cfee0`__rdl_alloc (3 samples, 0.02%)</title><rect x="61.2569%" y="117" width="0.0198%" height="15" fill="rgb(207,46,11)" fg:x="9289" fg:w="3"/><text x="61.5069%" y="127.50"></text></g><g><title>benchmark-022a91b58b3cfee0`__rdl_realloc (3 samples, 0.02%)</title><rect x="61.3624%" y="101" width="0.0198%" height="15" fill="rgb(241,35,35)" fg:x="9305" fg:w="3"/><text x="61.6124%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (9 samples, 0.06%)</title><rect x="61.4614%" y="69" width="0.0594%" height="15" fill="rgb(243,32,47)" fg:x="9320" fg:w="9"/><text x="61.7114%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (168 samples, 1.11%)</title><rect x="61.5207%" y="69" width="1.1079%" height="15" fill="rgb(247,202,23)" fg:x="9329" fg:w="168"/><text x="61.7707%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (160 samples, 1.06%)</title><rect x="61.5735%" y="53" width="1.0551%" height="15" fill="rgb(219,102,11)" fg:x="9337" fg:w="160"/><text x="61.8235%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (182 samples, 1.20%)</title><rect x="61.4350%" y="85" width="1.2002%" height="15" fill="rgb(243,110,44)" fg:x="9316" fg:w="182"/><text x="61.6850%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`malloc (194 samples, 1.28%)</title><rect x="61.3822%" y="101" width="1.2793%" height="15" fill="rgb(222,74,54)" fg:x="9308" fg:w="194"/><text x="61.6322%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (4 samples, 0.03%)</title><rect x="62.6352%" y="85" width="0.0264%" height="15" fill="rgb(216,99,12)" fg:x="9498" fg:w="4"/><text x="62.8852%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_realloc (2 samples, 0.01%)</title><rect x="62.7671%" y="69" width="0.0132%" height="15" fill="rgb(226,22,26)" fg:x="9518" fg:w="2"/><text x="63.0171%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (32 samples, 0.21%)</title><rect x="62.7275%" y="85" width="0.2110%" height="15" fill="rgb(217,163,10)" fg:x="9512" fg:w="32"/><text x="62.9775%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (23 samples, 0.15%)</title><rect x="62.7869%" y="69" width="0.1517%" height="15" fill="rgb(213,25,53)" fg:x="9521" fg:w="23"/><text x="63.0369%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (14 samples, 0.09%)</title><rect x="62.8462%" y="53" width="0.0923%" height="15" fill="rgb(252,105,26)" fg:x="9530" fg:w="14"/><text x="63.0962%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (13 samples, 0.09%)</title><rect x="62.8528%" y="37" width="0.0857%" height="15" fill="rgb(220,39,43)" fg:x="9531" fg:w="13"/><text x="63.1028%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (3 samples, 0.02%)</title><rect x="62.9385%" y="85" width="0.0198%" height="15" fill="rgb(229,68,48)" fg:x="9544" fg:w="3"/><text x="63.1885%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (11 samples, 0.07%)</title><rect x="62.9583%" y="85" width="0.0725%" height="15" fill="rgb(252,8,32)" fg:x="9547" fg:w="11"/><text x="63.2083%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (8 samples, 0.05%)</title><rect x="62.9781%" y="69" width="0.0528%" height="15" fill="rgb(223,20,43)" fg:x="9550" fg:w="8"/><text x="63.2281%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`realloc (55 samples, 0.36%)</title><rect x="62.6748%" y="101" width="0.3627%" height="15" fill="rgb(229,81,49)" fg:x="9504" fg:w="55"/><text x="62.9248%" y="111.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::finish_grow (269 samples, 1.77%)</title><rect x="61.2767%" y="117" width="1.7739%" height="15" fill="rgb(236,28,36)" fg:x="9292" fg:w="269"/><text x="61.5267%" y="127.50">b..</text></g><g><title>libsystem_malloc.dylib`szone_size (2 samples, 0.01%)</title><rect x="63.0375%" y="101" width="0.0132%" height="15" fill="rgb(249,185,26)" fg:x="9559" fg:w="2"/><text x="63.2875%" y="111.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (298 samples, 1.97%)</title><rect x="61.1118%" y="133" width="1.9652%" height="15" fill="rgb(249,174,33)" fg:x="9267" fg:w="298"/><text x="61.3618%" y="143.50">b..</text></g><g><title>libsystem_malloc.dylib`malloc (4 samples, 0.03%)</title><rect x="63.0506%" y="117" width="0.0264%" height="15" fill="rgb(233,201,37)" fg:x="9561" fg:w="4"/><text x="63.3006%" y="127.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::finish_grow (6 samples, 0.04%)</title><rect x="63.0770%" y="133" width="0.0396%" height="15" fill="rgb(221,78,26)" fg:x="9565" fg:w="6"/><text x="63.3270%" y="143.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (372 samples, 2.45%)</title><rect x="60.8678%" y="149" width="2.4532%" height="15" fill="rgb(250,127,30)" fg:x="9230" fg:w="372"/><text x="61.1178%" y="159.50">be..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (31 samples, 0.20%)</title><rect x="63.1166%" y="133" width="0.2044%" height="15" fill="rgb(230,49,44)" fg:x="9571" fg:w="31"/><text x="63.3666%" y="143.50"></text></g><g><title>benchmark-022a91b58b3cfee0`DYLD-STUB$$memcpy (3 samples, 0.02%)</title><rect x="63.3210%" y="149" width="0.0198%" height="15" fill="rgb(229,67,23)" fg:x="9602" fg:w="3"/><text x="63.5710%" y="159.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::Formatter::write_formatted_parts (407 samples, 2.68%)</title><rect x="60.7294%" y="165" width="2.6840%" height="15" fill="rgb(249,83,47)" fg:x="9209" fg:w="407"/><text x="60.9794%" y="175.50">be..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (10 samples, 0.07%)</title><rect x="63.3474%" y="149" width="0.0659%" height="15" fill="rgb(215,43,3)" fg:x="9606" fg:w="10"/><text x="63.5974%" y="159.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::num::flt2dec::strategy::grisu::format_exact_opt (344 samples, 2.27%)</title><rect x="63.4133%" y="165" width="2.2685%" height="15" fill="rgb(238,154,13)" fg:x="9616" fg:w="344"/><text x="63.6633%" y="175.50">b..</text></g><g><title>benchmark-022a91b58b3cfee0`core::num::flt2dec::strategy::grisu::format_exact_opt::possibly_round (2 samples, 0.01%)</title><rect x="65.6819%" y="165" width="0.0132%" height="15" fill="rgb(219,56,2)" fg:x="9960" fg:w="2"/><text x="65.9319%" y="175.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::float::float_to_decimal_common_exact (868 samples, 5.72%)</title><rect x="60.0897%" y="181" width="5.7241%" height="15" fill="rgb(233,0,4)" fg:x="9112" fg:w="868"/><text x="60.3397%" y="191.50">benchma..</text></g><g><title>benchmark-022a91b58b3cfee0`core::num::flt2dec::strategy::grisu::format_exact_opt (18 samples, 0.12%)</title><rect x="65.6951%" y="165" width="0.1187%" height="15" fill="rgb(235,30,7)" fg:x="9962" fg:w="18"/><text x="65.9451%" y="175.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::num::flt2dec::strategy::grisu::format_exact_opt::possibly_round (18 samples, 0.12%)</title><rect x="65.6951%" y="149" width="0.1187%" height="15" fill="rgb(250,79,13)" fg:x="9962" fg:w="18"/><text x="65.9451%" y="159.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::num::flt2dec::strategy::grisu::format_exact_opt (2 samples, 0.01%)</title><rect x="65.8138%" y="181" width="0.0132%" height="15" fill="rgb(211,146,34)" fg:x="9980" fg:w="2"/><text x="66.0638%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::fmt::format (954 samples, 6.29%)</title><rect x="59.5555%" y="213" width="6.2912%" height="15" fill="rgb(228,22,38)" fg:x="9031" fg:w="954"/><text x="59.8055%" y="223.50">benchmar..</text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::write (933 samples, 6.15%)</title><rect x="59.6940%" y="197" width="6.1527%" height="15" fill="rgb(235,168,5)" fg:x="9052" fg:w="933"/><text x="59.9440%" y="207.50">benchmar..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.02%)</title><rect x="65.8270%" y="181" width="0.0198%" height="15" fill="rgb(221,155,16)" fg:x="9982" fg:w="3"/><text x="66.0770%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;f64 as core::num::dec2flt::rawfp::RawFloat&gt;::from_int (8 samples, 0.05%)</title><rect x="66.4337%" y="197" width="0.0528%" height="15" fill="rgb(215,215,53)" fg:x="10074" fg:w="8"/><text x="66.6837%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::num::dec2flt::extract_sign (3 samples, 0.02%)</title><rect x="66.4864%" y="197" width="0.0198%" height="15" fill="rgb(223,4,10)" fg:x="10082" fg:w="3"/><text x="66.7364%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::num::dec2flt::dec2flt (133 samples, 0.88%)</title><rect x="65.8533%" y="213" width="0.8771%" height="15" fill="rgb(234,103,6)" fg:x="9986" fg:w="133"/><text x="66.1033%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::num::dec2flt::parse::parse_decimal (34 samples, 0.22%)</title><rect x="66.5062%" y="197" width="0.2242%" height="15" fill="rgb(227,97,0)" fg:x="10085" fg:w="34"/><text x="66.7562%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::num::dec2flt::extract_sign (3 samples, 0.02%)</title><rect x="66.7304%" y="213" width="0.0198%" height="15" fill="rgb(234,150,53)" fg:x="10119" fg:w="3"/><text x="66.9804%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::num::dec2flt::parse::parse_decimal (4 samples, 0.03%)</title><rect x="66.7502%" y="213" width="0.0264%" height="15" fill="rgb(228,201,54)" fg:x="10122" fg:w="4"/><text x="67.0002%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (10 samples, 0.07%)</title><rect x="66.7766%" y="213" width="0.0659%" height="15" fill="rgb(222,22,37)" fg:x="10126" fg:w="10"/><text x="67.0266%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (49 samples, 0.32%)</title><rect x="66.9612%" y="197" width="0.3231%" height="15" fill="rgb(237,53,32)" fg:x="10154" fg:w="49"/><text x="67.2112%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (44 samples, 0.29%)</title><rect x="66.9942%" y="181" width="0.2902%" height="15" fill="rgb(233,25,53)" fg:x="10159" fg:w="44"/><text x="67.2442%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free (69 samples, 0.46%)</title><rect x="66.8425%" y="213" width="0.4550%" height="15" fill="rgb(210,40,34)" fg:x="10136" fg:w="69"/><text x="67.0925%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.01%)</title><rect x="67.2844%" y="197" width="0.0132%" height="15" fill="rgb(241,220,44)" fg:x="10203" fg:w="2"/><text x="67.5344%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (76 samples, 0.50%)</title><rect x="67.2975%" y="213" width="0.5012%" height="15" fill="rgb(235,28,35)" fg:x="10205" fg:w="76"/><text x="67.5475%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`emath::round_to_decimals (1,285 samples, 8.47%)</title><rect x="59.3379%" y="229" width="8.4740%" height="15" fill="rgb(210,56,17)" fg:x="8998" fg:w="1285"/><text x="59.5879%" y="239.50">benchmark-02..</text></g><g><title>libsystem_malloc.dylib`szone_size (2 samples, 0.01%)</title><rect x="67.7987%" y="213" width="0.0132%" height="15" fill="rgb(224,130,29)" fg:x="10281" fg:w="2"/><text x="68.0487%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`__rust_dealloc (2 samples, 0.01%)</title><rect x="68.3395%" y="213" width="0.0132%" height="15" fill="rgb(235,212,8)" fg:x="10363" fg:w="2"/><text x="68.5895%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;epaint::text::fonts::LayoutJob as core::hash::Hash&gt;::hash (23 samples, 0.15%)</title><rect x="68.7484%" y="197" width="0.1517%" height="15" fill="rgb(223,33,50)" fg:x="10425" fg:w="23"/><text x="68.9984%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (83 samples, 0.55%)</title><rect x="68.9000%" y="197" width="0.5473%" height="15" fill="rgb(219,149,13)" fg:x="10448" fg:w="83"/><text x="69.1500%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (11 samples, 0.07%)</title><rect x="69.3748%" y="181" width="0.0725%" height="15" fill="rgb(250,156,29)" fg:x="10520" fg:w="11"/><text x="69.6248%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (13 samples, 0.09%)</title><rect x="69.4474%" y="197" width="0.0857%" height="15" fill="rgb(216,193,19)" fg:x="10531" fg:w="13"/><text x="69.6974%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (36 samples, 0.24%)</title><rect x="69.6518%" y="181" width="0.2374%" height="15" fill="rgb(216,135,14)" fg:x="10562" fg:w="36"/><text x="69.9018%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (28 samples, 0.18%)</title><rect x="69.7046%" y="165" width="0.1846%" height="15" fill="rgb(241,47,5)" fg:x="10570" fg:w="28"/><text x="69.9546%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free (56 samples, 0.37%)</title><rect x="69.5331%" y="197" width="0.3693%" height="15" fill="rgb(233,42,35)" fg:x="10544" fg:w="56"/><text x="69.7831%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.01%)</title><rect x="69.8892%" y="181" width="0.0132%" height="15" fill="rgb(231,13,6)" fg:x="10598" fg:w="2"/><text x="70.1392%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (101 samples, 0.67%)</title><rect x="69.9024%" y="197" width="0.6661%" height="15" fill="rgb(207,181,40)" fg:x="10600" fg:w="101"/><text x="70.1524%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`epaint::text::fonts::GalleyCache::layout (338 samples, 2.23%)</title><rect x="68.3527%" y="213" width="2.2290%" height="15" fill="rgb(254,173,49)" fg:x="10365" fg:w="338"/><text x="68.6027%" y="223.50">b..</text></g><g><title>libsystem_platform.dylib`_platform_memcmp (2 samples, 0.01%)</title><rect x="70.5685%" y="197" width="0.0132%" height="15" fill="rgb(221,1,38)" fg:x="10701" fg:w="2"/><text x="70.8185%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.02%)</title><rect x="70.5882%" y="213" width="0.0198%" height="15" fill="rgb(206,124,46)" fg:x="10704" fg:w="3"/><text x="70.8382%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`epaint::text::fonts::Fonts::layout_single_line (429 samples, 2.83%)</title><rect x="67.8119%" y="229" width="2.8291%" height="15" fill="rgb(249,21,11)" fg:x="10283" fg:w="429"/><text x="68.0619%" y="239.50">be..</text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (5 samples, 0.03%)</title><rect x="70.6080%" y="213" width="0.0330%" height="15" fill="rgb(222,201,40)" fg:x="10707" fg:w="5"/><text x="70.8580%" y="223.50"></text></g><g><title>libsystem_m.dylib`0x00007fff6b1acc70 (465 samples, 3.07%)</title><rect x="70.6476%" y="229" width="3.0665%" height="15" fill="rgb(235,61,29)" fg:x="10713" fg:w="465"/><text x="70.8976%" y="239.50">lib..</text></g><g><title>libsystem_m.dylib`roundf (216 samples, 1.42%)</title><rect x="73.7141%" y="229" width="1.4244%" height="15" fill="rgb(219,207,3)" fg:x="11178" fg:w="216"/><text x="73.9641%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (4 samples, 0.03%)</title><rect x="75.1385%" y="229" width="0.0264%" height="15" fill="rgb(222,56,46)" fg:x="11394" fg:w="4"/><text x="75.3885%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (7 samples, 0.05%)</title><rect x="75.1715%" y="229" width="0.0462%" height="15" fill="rgb(239,76,54)" fg:x="11399" fg:w="7"/><text x="75.4215%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;egui::widgets::plot::Plot as egui::widgets::Widget&gt;::ui (11,020 samples, 72.67%)</title><rect x="3.7325%" y="245" width="72.6721%" height="15" fill="rgb(231,124,27)" fg:x="566" fg:w="11020"/><text x="3.9825%" y="255.50">benchmark-022a91b58b3cfee0`&lt;egui::widgets::plot::Plot as egui::widgets::Widget&gt;::ui</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (180 samples, 1.19%)</title><rect x="75.2176%" y="229" width="1.1870%" height="15" fill="rgb(249,195,6)" fg:x="11406" fg:w="180"/><text x="75.4676%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;egui::widgets::plot::items::Line as egui::widgets::plot::items::PlotItem&gt;::get_bounds (2 samples, 0.01%)</title><rect x="76.4112%" y="245" width="0.0132%" height="15" fill="rgb(237,174,47)" fg:x="11587" fg:w="2"/><text x="76.6612%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;epaint::color::Color32 as core::convert::From&lt;epaint::color::Rgba&gt;&gt;::from (2 samples, 0.01%)</title><rect x="76.4310%" y="245" width="0.0132%" height="15" fill="rgb(206,201,31)" fg:x="11590" fg:w="2"/><text x="76.6810%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`DYLD-STUB$$round (3 samples, 0.02%)</title><rect x="76.4508%" y="245" width="0.0198%" height="15" fill="rgb(231,57,52)" fg:x="11593" fg:w="3"/><text x="76.7008%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::widgets::plot::Plot::new (2 samples, 0.01%)</title><rect x="78.1060%" y="229" width="0.0132%" height="15" fill="rgb(248,177,22)" fg:x="11844" fg:w="2"/><text x="78.3560%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::write (2 samples, 0.01%)</title><rect x="78.1060%" y="213" width="0.0132%" height="15" fill="rgb(215,211,37)" fg:x="11844" fg:w="2"/><text x="78.3560%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;epaint::color::Rgba as core::convert::From&lt;epaint::color::Hsva&gt;&gt;::from (38 samples, 0.25%)</title><rect x="78.2973%" y="197" width="0.2506%" height="15" fill="rgb(241,128,51)" fg:x="11873" fg:w="38"/><text x="78.5473%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;epaint::color::Color32 as core::convert::From&lt;epaint::color::Hsva&gt;&gt;::from (40 samples, 0.26%)</title><rect x="78.2973%" y="213" width="0.2638%" height="15" fill="rgb(227,165,31)" fg:x="11873" fg:w="40"/><text x="78.5473%" y="223.50"></text></g><g><title>libsystem_m.dylib`floorf (2 samples, 0.01%)</title><rect x="78.5479%" y="197" width="0.0132%" height="15" fill="rgb(228,167,24)" fg:x="11911" fg:w="2"/><text x="78.7979%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;epaint::color::Color32 as core::convert::From&lt;epaint::color::Rgba&gt;&gt;::from (43 samples, 0.28%)</title><rect x="78.5611%" y="213" width="0.2836%" height="15" fill="rgb(228,143,12)" fg:x="11913" fg:w="43"/><text x="78.8111%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`DYLD-STUB$$roundf (4 samples, 0.03%)</title><rect x="78.8446%" y="213" width="0.0264%" height="15" fill="rgb(249,149,8)" fg:x="11956" fg:w="4"/><text x="79.0946%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (4 samples, 0.03%)</title><rect x="78.8974%" y="133" width="0.0264%" height="15" fill="rgb(243,35,44)" fg:x="11964" fg:w="4"/><text x="79.1474%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.01%)</title><rect x="78.9106%" y="117" width="0.0132%" height="15" fill="rgb(246,89,9)" fg:x="11966" fg:w="2"/><text x="79.1606%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (2 samples, 0.01%)</title><rect x="78.9304%" y="117" width="0.0132%" height="15" fill="rgb(233,213,13)" fg:x="11969" fg:w="2"/><text x="79.1804%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.02%)</title><rect x="78.9304%" y="133" width="0.0198%" height="15" fill="rgb(233,141,41)" fg:x="11969" fg:w="3"/><text x="79.1804%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (12 samples, 0.08%)</title><rect x="78.8908%" y="149" width="0.0791%" height="15" fill="rgb(239,167,4)" fg:x="11963" fg:w="12"/><text x="79.1408%" y="159.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (2 samples, 0.01%)</title><rect x="78.9699%" y="149" width="0.0132%" height="15" fill="rgb(209,217,16)" fg:x="11975" fg:w="2"/><text x="79.2199%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (16 samples, 0.11%)</title><rect x="78.8842%" y="165" width="0.1055%" height="15" fill="rgb(219,88,35)" fg:x="11962" fg:w="16"/><text x="79.1342%" y="175.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (19 samples, 0.13%)</title><rect x="78.8710%" y="213" width="0.1253%" height="15" fill="rgb(220,193,23)" fg:x="11960" fg:w="19"/><text x="79.1210%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::finish_grow (19 samples, 0.13%)</title><rect x="78.8710%" y="197" width="0.1253%" height="15" fill="rgb(230,90,52)" fg:x="11960" fg:w="19"/><text x="79.1210%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`realloc (18 samples, 0.12%)</title><rect x="78.8776%" y="181" width="0.1187%" height="15" fill="rgb(252,106,19)" fg:x="11961" fg:w="18"/><text x="79.1276%" y="191.50"></text></g><g><title>libsystem_m.dylib`0x00007fff6b1acc70 (45 samples, 0.30%)</title><rect x="78.9963%" y="213" width="0.2968%" height="15" fill="rgb(206,74,20)" fg:x="11979" fg:w="45"/><text x="79.2463%" y="223.50"></text></g><g><title>libsystem_m.dylib`roundf (18 samples, 0.12%)</title><rect x="79.2931%" y="213" width="0.1187%" height="15" fill="rgb(230,138,44)" fg:x="12024" fg:w="18"/><text x="79.5431%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (3 samples, 0.02%)</title><rect x="79.4645%" y="181" width="0.0198%" height="15" fill="rgb(235,182,43)" fg:x="12050" fg:w="3"/><text x="79.7145%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (9 samples, 0.06%)</title><rect x="79.7679%" y="149" width="0.0594%" height="15" fill="rgb(242,16,51)" fg:x="12096" fg:w="9"/><text x="80.0179%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (87 samples, 0.57%)</title><rect x="79.4250%" y="197" width="0.5737%" height="15" fill="rgb(248,9,4)" fg:x="12044" fg:w="87"/><text x="79.6750%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (78 samples, 0.51%)</title><rect x="79.4843%" y="181" width="0.5144%" height="15" fill="rgb(210,31,22)" fg:x="12053" fg:w="78"/><text x="79.7343%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (76 samples, 0.50%)</title><rect x="79.4975%" y="165" width="0.5012%" height="15" fill="rgb(239,54,39)" fg:x="12055" fg:w="76"/><text x="79.7475%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (26 samples, 0.17%)</title><rect x="79.8272%" y="149" width="0.1715%" height="15" fill="rgb(230,99,41)" fg:x="12105" fg:w="26"/><text x="80.0772%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (5 samples, 0.03%)</title><rect x="79.9657%" y="133" width="0.0330%" height="15" fill="rgb(253,106,12)" fg:x="12126" fg:w="5"/><text x="80.2157%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc (90 samples, 0.59%)</title><rect x="79.4118%" y="213" width="0.5935%" height="15" fill="rgb(213,46,41)" fg:x="12042" fg:w="90"/><text x="79.6618%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::widgets::plot::Plot::points (302 samples, 1.99%)</title><rect x="78.1192%" y="229" width="1.9916%" height="15" fill="rgb(215,133,35)" fg:x="11846" fg:w="302"/><text x="78.3692%" y="239.50">b..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (16 samples, 0.11%)</title><rect x="80.0053%" y="213" width="0.1055%" height="15" fill="rgb(213,28,5)" fg:x="12132" fg:w="16"/><text x="80.2553%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::widgets::plot::items::Points::new (8 samples, 0.05%)</title><rect x="80.1108%" y="229" width="0.0528%" height="15" fill="rgb(215,77,49)" fg:x="12148" fg:w="8"/><text x="80.3608%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::widgets::plot::items::Values::from_values (2 samples, 0.01%)</title><rect x="80.1635%" y="229" width="0.0132%" height="15" fill="rgb(248,100,22)" fg:x="12156" fg:w="2"/><text x="80.4135%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (5 samples, 0.03%)</title><rect x="80.2229%" y="197" width="0.0330%" height="15" fill="rgb(208,67,9)" fg:x="12165" fg:w="5"/><text x="80.4729%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (16 samples, 0.11%)</title><rect x="80.6054%" y="149" width="0.1055%" height="15" fill="rgb(219,133,21)" fg:x="12223" fg:w="16"/><text x="80.8554%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr (5 samples, 0.03%)</title><rect x="80.7109%" y="149" width="0.0330%" height="15" fill="rgb(246,46,29)" fg:x="12239" fg:w="5"/><text x="80.9609%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (96 samples, 0.63%)</title><rect x="80.1833%" y="213" width="0.6331%" height="15" fill="rgb(246,185,52)" fg:x="12159" fg:w="96"/><text x="80.4333%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (85 samples, 0.56%)</title><rect x="80.2559%" y="197" width="0.5605%" height="15" fill="rgb(252,136,11)" fg:x="12170" fg:w="85"/><text x="80.5059%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (83 samples, 0.55%)</title><rect x="80.2691%" y="181" width="0.5473%" height="15" fill="rgb(219,138,53)" fg:x="12172" fg:w="83"/><text x="80.5191%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (43 samples, 0.28%)</title><rect x="80.5328%" y="165" width="0.2836%" height="15" fill="rgb(211,51,23)" fg:x="12212" fg:w="43"/><text x="80.7828%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (11 samples, 0.07%)</title><rect x="80.7439%" y="149" width="0.0725%" height="15" fill="rgb(247,221,28)" fg:x="12244" fg:w="11"/><text x="80.9939%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc (99 samples, 0.65%)</title><rect x="80.1767%" y="229" width="0.6529%" height="15" fill="rgb(251,222,45)" fg:x="12158" fg:w="99"/><text x="80.4267%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.01%)</title><rect x="80.8164%" y="213" width="0.0132%" height="15" fill="rgb(217,162,53)" fg:x="12255" fg:w="2"/><text x="81.0664%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`benchmark::criterion_benchmark::points_plot (676 samples, 4.46%)</title><rect x="76.4838%" y="245" width="4.4579%" height="15" fill="rgb(229,93,14)" fg:x="11598" fg:w="676"/><text x="76.7338%" y="255.50">bench..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (17 samples, 0.11%)</title><rect x="80.8296%" y="229" width="0.1121%" height="15" fill="rgb(209,67,49)" fg:x="12257" fg:w="17"/><text x="81.0796%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::context::CtxRef::interact (2 samples, 0.01%)</title><rect x="80.9615%" y="229" width="0.0132%" height="15" fill="rgb(213,87,29)" fg:x="12277" fg:w="2"/><text x="81.2115%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::painter::Painter::set (2 samples, 0.01%)</title><rect x="80.9747%" y="229" width="0.0132%" height="15" fill="rgb(205,151,52)" fg:x="12279" fg:w="2"/><text x="81.2247%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::containers::frame::Prepared::end (7 samples, 0.05%)</title><rect x="80.9549%" y="245" width="0.0462%" height="15" fill="rgb(253,215,39)" fg:x="12276" fg:w="7"/><text x="81.2049%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::widgets::plot::items::Values::generate_points (2 samples, 0.01%)</title><rect x="81.0076%" y="245" width="0.0132%" height="15" fill="rgb(221,220,41)" fg:x="12284" fg:w="2"/><text x="81.2576%" y="255.50"></text></g><g><title>libsystem_m.dylib`floor (8 samples, 0.05%)</title><rect x="81.0340%" y="245" width="0.0528%" height="15" fill="rgb(218,133,21)" fg:x="12288" fg:w="8"/><text x="81.2840%" y="255.50"></text></g><g><title>libsystem_m.dylib`round (39 samples, 0.26%)</title><rect x="81.0868%" y="245" width="0.2572%" height="15" fill="rgb(221,193,43)" fg:x="12296" fg:w="39"/><text x="81.3368%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::containers::panel::CentralPanel::show (11,797 samples, 77.80%)</title><rect x="3.7193%" y="277" width="77.7961%" height="15" fill="rgb(240,128,52)" fg:x="564" fg:w="11797"/><text x="3.9693%" y="287.50">benchmark-022a91b58b3cfee0`egui::containers::panel::CentralPanel::show</text></g><g><title>benchmark-022a91b58b3cfee0`egui::containers::frame::Frame::show (11,795 samples, 77.78%)</title><rect x="3.7325%" y="261" width="77.7829%" height="15" fill="rgb(253,114,12)" fg:x="566" fg:w="11795"/><text x="3.9825%" y="271.50">benchmark-022a91b58b3cfee0`egui::containers::frame::Frame::show</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (26 samples, 0.17%)</title><rect x="81.3440%" y="245" width="0.1715%" height="15" fill="rgb(215,223,47)" fg:x="12335" fg:w="26"/><text x="81.5940%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`DYLD-STUB$$memmove (26 samples, 0.17%)</title><rect x="81.5220%" y="261" width="0.1715%" height="15" fill="rgb(248,225,23)" fg:x="12362" fg:w="26"/><text x="81.7720%" y="271.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.01%)</title><rect x="82.9267%" y="245" width="0.0132%" height="15" fill="rgb(250,108,0)" fg:x="12575" fg:w="2"/><text x="83.1767%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::finish_grow (2 samples, 0.01%)</title><rect x="82.9267%" y="229" width="0.0132%" height="15" fill="rgb(228,208,7)" fg:x="12575" fg:w="2"/><text x="83.1767%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`hashbrown::map::HashMap&lt;K,V,S,A&gt;::retain (2 samples, 0.01%)</title><rect x="82.9399%" y="245" width="0.0132%" height="15" fill="rgb(244,45,10)" fg:x="12577" fg:w="2"/><text x="83.1899%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::layers::GraphicLayers::drain (1,130 samples, 7.45%)</title><rect x="81.6935%" y="261" width="7.4519%" height="15" fill="rgb(207,125,25)" fg:x="12388" fg:w="1130"/><text x="81.9435%" y="271.50">benchmark-..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (939 samples, 6.19%)</title><rect x="82.9530%" y="245" width="6.1923%" height="15" fill="rgb(210,195,18)" fg:x="12579" fg:w="939"/><text x="83.2030%" y="255.50">libsyste..</text></g><g><title>benchmark-022a91b58b3cfee0`egui::memory::Memory::end_frame (3 samples, 0.02%)</title><rect x="89.1453%" y="261" width="0.0198%" height="15" fill="rgb(249,80,12)" fg:x="13518" fg:w="3"/><text x="89.3953%" y="271.50"></text></g><g><title>benchmark-022a91b58b3cfee0`epaint::text::fonts::Fonts::end_frame (5 samples, 0.03%)</title><rect x="89.1651%" y="261" width="0.0330%" height="15" fill="rgb(221,65,9)" fg:x="13521" fg:w="5"/><text x="89.4151%" y="271.50"></text></g><g><title>benchmark-022a91b58b3cfee0`hashbrown::map::HashMap&lt;K,V,S,A&gt;::retain (5 samples, 0.03%)</title><rect x="89.1651%" y="245" width="0.0330%" height="15" fill="rgb(235,49,36)" fg:x="13521" fg:w="5"/><text x="89.4151%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::context::Context::end_frame (1,308 samples, 8.63%)</title><rect x="81.5154%" y="277" width="8.6257%" height="15" fill="rgb(225,32,20)" fg:x="12361" fg:w="1308"/><text x="81.7654%" y="287.50">benchmark-02..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (143 samples, 0.94%)</title><rect x="89.1981%" y="261" width="0.9430%" height="15" fill="rgb(215,141,46)" fg:x="13526" fg:w="143"/><text x="89.4481%" y="271.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;egui::context::Context as core::clone::Clone&gt;::clone (10 samples, 0.07%)</title><rect x="90.1609%" y="261" width="0.0659%" height="15" fill="rgb(250,160,47)" fg:x="13672" fg:w="10"/><text x="90.4109%" y="271.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7 samples, 0.05%)</title><rect x="90.1807%" y="245" width="0.0462%" height="15" fill="rgb(216,222,40)" fg:x="13675" fg:w="7"/><text x="90.4307%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc (7 samples, 0.05%)</title><rect x="90.1807%" y="229" width="0.0462%" height="15" fill="rgb(234,217,39)" fg:x="13675" fg:w="7"/><text x="90.4307%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (7 samples, 0.05%)</title><rect x="90.1807%" y="213" width="0.0462%" height="15" fill="rgb(207,178,40)" fg:x="13675" fg:w="7"/><text x="90.4307%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.05%)</title><rect x="90.1807%" y="197" width="0.0462%" height="15" fill="rgb(221,136,13)" fg:x="13675" fg:w="7"/><text x="90.4307%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.04%)</title><rect x="90.1873%" y="181" width="0.0396%" height="15" fill="rgb(249,199,10)" fg:x="13676" fg:w="6"/><text x="90.4373%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.01%)</title><rect x="90.2137%" y="165" width="0.0132%" height="15" fill="rgb(249,222,13)" fg:x="13680" fg:w="2"/><text x="90.4637%" y="175.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.02%)</title><rect x="90.2400%" y="245" width="0.0198%" height="15" fill="rgb(244,185,38)" fg:x="13684" fg:w="3"/><text x="90.4900%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc (3 samples, 0.02%)</title><rect x="90.2400%" y="229" width="0.0198%" height="15" fill="rgb(236,202,9)" fg:x="13684" fg:w="3"/><text x="90.4900%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (3 samples, 0.02%)</title><rect x="90.2400%" y="213" width="0.0198%" height="15" fill="rgb(250,229,37)" fg:x="13684" fg:w="3"/><text x="90.4900%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.02%)</title><rect x="90.2400%" y="197" width="0.0198%" height="15" fill="rgb(206,174,23)" fg:x="13684" fg:w="3"/><text x="90.4900%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.01%)</title><rect x="90.2466%" y="181" width="0.0132%" height="15" fill="rgb(211,33,43)" fg:x="13685" fg:w="2"/><text x="90.4966%" y="191.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (2 samples, 0.01%)</title><rect x="90.2598%" y="245" width="0.0132%" height="15" fill="rgb(245,58,50)" fg:x="13687" fg:w="2"/><text x="90.5098%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;egui::input_state::InputState as core::default::Default&gt;::default (8 samples, 0.05%)</title><rect x="90.2269%" y="261" width="0.0528%" height="15" fill="rgb(244,68,36)" fg:x="13682" fg:w="8"/><text x="90.4769%" y="271.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::sync::Arc&lt;T&gt;::drop_slow (4 samples, 0.03%)</title><rect x="90.2796%" y="261" width="0.0264%" height="15" fill="rgb(232,229,15)" fg:x="13690" fg:w="4"/><text x="90.5296%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.01%)</title><rect x="90.2928%" y="245" width="0.0132%" height="15" fill="rgb(254,30,23)" fg:x="13692" fg:w="2"/><text x="90.5428%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::ptr::drop_in_place&lt;egui::input_state::InputState&gt; (3 samples, 0.02%)</title><rect x="90.3060%" y="261" width="0.0198%" height="15" fill="rgb(235,160,14)" fg:x="13694" fg:w="3"/><text x="90.5560%" y="271.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::ptr::drop_in_place&lt;egui::input_state::PointerState&gt; (3 samples, 0.02%)</title><rect x="90.3060%" y="245" width="0.0198%" height="15" fill="rgb(212,155,44)" fg:x="13694" fg:w="3"/><text x="90.5560%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (3 samples, 0.02%)</title><rect x="90.3060%" y="229" width="0.0198%" height="15" fill="rgb(226,2,50)" fg:x="13694" fg:w="3"/><text x="90.5560%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.01%)</title><rect x="90.3126%" y="213" width="0.0132%" height="15" fill="rgb(234,177,6)" fg:x="13695" fg:w="2"/><text x="90.5626%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="90.3258%" y="245" width="0.0132%" height="15" fill="rgb(217,24,9)" fg:x="13697" fg:w="2"/><text x="90.5758%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc (2 samples, 0.01%)</title><rect x="90.3258%" y="229" width="0.0132%" height="15" fill="rgb(220,13,46)" fg:x="13697" fg:w="2"/><text x="90.5758%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::util::history::History&lt;T&gt;::add (3 samples, 0.02%)</title><rect x="90.3390%" y="245" width="0.0198%" height="15" fill="rgb(239,221,27)" fg:x="13699" fg:w="3"/><text x="90.5890%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::input_state::InputState::begin_frame (8 samples, 0.05%)</title><rect x="90.3258%" y="261" width="0.0528%" height="15" fill="rgb(222,198,25)" fg:x="13697" fg:w="8"/><text x="90.5758%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.01%)</title><rect x="90.3653%" y="245" width="0.0132%" height="15" fill="rgb(211,99,13)" fg:x="13703" fg:w="2"/><text x="90.6153%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.01%)</title><rect x="90.3653%" y="229" width="0.0132%" height="15" fill="rgb(232,111,31)" fg:x="13703" fg:w="2"/><text x="90.6153%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.01%)</title><rect x="90.3653%" y="213" width="0.0132%" height="15" fill="rgb(245,82,37)" fg:x="13703" fg:w="2"/><text x="90.6153%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::memory::Areas::set_state (5 samples, 0.03%)</title><rect x="90.3785%" y="261" width="0.0330%" height="15" fill="rgb(227,149,46)" fg:x="13705" fg:w="5"/><text x="90.6285%" y="271.50"></text></g><g><title>benchmark-022a91b58b3cfee0`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.03%)</title><rect x="90.3851%" y="245" width="0.0264%" height="15" fill="rgb(218,36,50)" fg:x="13706" fg:w="4"/><text x="90.6351%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.01%)</title><rect x="90.3983%" y="229" width="0.0132%" height="15" fill="rgb(226,80,48)" fg:x="13708" fg:w="2"/><text x="90.6483%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.01%)</title><rect x="90.3983%" y="213" width="0.0132%" height="15" fill="rgb(238,224,15)" fg:x="13708" fg:w="2"/><text x="90.6483%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::context::CtxRef::begin_frame (44 samples, 0.29%)</title><rect x="90.1411%" y="277" width="0.2902%" height="15" fill="rgb(241,136,10)" fg:x="13669" fg:w="44"/><text x="90.3911%" y="287.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (13,714 samples, 90.44%)</title><rect x="0.0132%" y="309" width="90.4379%" height="15" fill="rgb(208,32,45)" fg:x="2" fg:w="13714"/><text x="0.2632%" y="319.50">benchmark-022a91b58b3cfee0`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold</text></g><g><title>benchmark-022a91b58b3cfee0`criterion::bencher::Bencher&lt;M&gt;::iter (13,714 samples, 90.44%)</title><rect x="0.0132%" y="293" width="90.4379%" height="15" fill="rgb(207,135,9)" fg:x="2" fg:w="13714"/><text x="0.2632%" y="303.50">benchmark-022a91b58b3cfee0`criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>libsystem_malloc.dylib`free_medium (3 samples, 0.02%)</title><rect x="90.4313%" y="277" width="0.0198%" height="15" fill="rgb(206,86,44)" fg:x="13713" fg:w="3"/><text x="90.6813%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`medium_free_list_add_ptr (2 samples, 0.01%)</title><rect x="90.4379%" y="261" width="0.0132%" height="15" fill="rgb(245,177,15)" fg:x="13714" fg:w="2"/><text x="90.6879%" y="271.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::ptr::drop_in_place&lt;(egui::data::output::Output,alloc::vec::Vec&lt;epaint::ClippedShape&gt;)&gt; (54 samples, 0.36%)</title><rect x="90.4511%" y="277" width="0.3561%" height="15" fill="rgb(206,64,50)" fg:x="13716" fg:w="54"/><text x="90.7011%" y="287.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::ptr::drop_in_place&lt;epaint::shape::Shape&gt; (46 samples, 0.30%)</title><rect x="90.5038%" y="261" width="0.3034%" height="15" fill="rgb(234,36,40)" fg:x="13724" fg:w="46"/><text x="90.7538%" y="271.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::ptr::drop_in_place&lt;epaint::shape::Shape&gt; (5 samples, 0.03%)</title><rect x="90.8072%" y="277" width="0.0330%" height="15" fill="rgb(213,64,8)" fg:x="13770" fg:w="5"/><text x="91.0572%" y="287.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;egui::widgets::plot::items::Line as egui::widgets::plot::items::PlotItem&gt;::find_closest_element (102 samples, 0.67%)</title><rect x="91.1963%" y="229" width="0.6726%" height="15" fill="rgb(210,75,36)" fg:x="13829" fg:w="102"/><text x="91.4463%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;egui::widgets::plot::items::Line as egui::widgets::plot::items::PlotItem&gt;::get_bounds (44 samples, 0.29%)</title><rect x="91.8689%" y="229" width="0.2902%" height="15" fill="rgb(229,88,21)" fg:x="13931" fg:w="44"/><text x="92.1189%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.01%)</title><rect x="92.6734%" y="197" width="0.0132%" height="15" fill="rgb(252,204,47)" fg:x="14053" fg:w="2"/><text x="92.9234%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::finish_grow (2 samples, 0.01%)</title><rect x="92.6734%" y="181" width="0.0132%" height="15" fill="rgb(208,77,27)" fg:x="14053" fg:w="2"/><text x="92.9234%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`realloc (2 samples, 0.01%)</title><rect x="92.6734%" y="165" width="0.0132%" height="15" fill="rgb(221,76,26)" fg:x="14053" fg:w="2"/><text x="92.9234%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (2 samples, 0.01%)</title><rect x="92.6734%" y="149" width="0.0132%" height="15" fill="rgb(225,139,18)" fg:x="14053" fg:w="2"/><text x="92.9234%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (2 samples, 0.01%)</title><rect x="92.6734%" y="133" width="0.0132%" height="15" fill="rgb(230,137,11)" fg:x="14053" fg:w="2"/><text x="92.9234%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`medium_try_realloc_in_place (2 samples, 0.01%)</title><rect x="92.6734%" y="117" width="0.0132%" height="15" fill="rgb(212,28,1)" fg:x="14053" fg:w="2"/><text x="92.9234%" y="127.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (172 samples, 1.13%)</title><rect x="92.1591%" y="213" width="1.1343%" height="15" fill="rgb(248,164,17)" fg:x="13975" fg:w="172"/><text x="92.4091%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (92 samples, 0.61%)</title><rect x="92.6866%" y="197" width="0.6067%" height="15" fill="rgb(222,171,42)" fg:x="14055" fg:w="92"/><text x="92.9366%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;egui::widgets::plot::items::Points as egui::widgets::plot::items::PlotItem&gt;::get_shapes (186 samples, 1.23%)</title><rect x="92.1591%" y="229" width="1.2266%" height="15" fill="rgb(243,84,45)" fg:x="13975" fg:w="186"/><text x="92.4091%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (14 samples, 0.09%)</title><rect x="93.2933%" y="213" width="0.0923%" height="15" fill="rgb(252,49,23)" fg:x="14147" fg:w="14"/><text x="93.5433%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;epaint::color::Color32 as core::convert::From&lt;epaint::color::Rgba&gt;&gt;::from (45 samples, 0.30%)</title><rect x="93.3922%" y="229" width="0.2968%" height="15" fill="rgb(215,19,7)" fg:x="14162" fg:w="45"/><text x="93.6422%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`DYLD-STUB$$roundf (4 samples, 0.03%)</title><rect x="93.6890%" y="229" width="0.0264%" height="15" fill="rgb(238,81,41)" fg:x="14207" fg:w="4"/><text x="93.9390%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.03%)</title><rect x="93.7220%" y="229" width="0.0264%" height="15" fill="rgb(210,199,37)" fg:x="14212" fg:w="4"/><text x="93.9720%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::finish_grow (3 samples, 0.02%)</title><rect x="93.7286%" y="213" width="0.0198%" height="15" fill="rgb(244,192,49)" fg:x="14213" fg:w="3"/><text x="93.9786%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`realloc (2 samples, 0.01%)</title><rect x="93.7352%" y="197" width="0.0132%" height="15" fill="rgb(226,211,11)" fg:x="14214" fg:w="2"/><text x="93.9852%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (2 samples, 0.01%)</title><rect x="93.7352%" y="181" width="0.0132%" height="15" fill="rgb(236,162,54)" fg:x="14214" fg:w="2"/><text x="93.9852%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (2 samples, 0.01%)</title><rect x="93.7352%" y="165" width="0.0132%" height="15" fill="rgb(220,229,9)" fg:x="14214" fg:w="2"/><text x="93.9852%" y="175.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::Formatter::pad_formatted_parts (2 samples, 0.01%)</title><rect x="93.7945%" y="213" width="0.0132%" height="15" fill="rgb(250,87,22)" fg:x="14223" fg:w="2"/><text x="94.0445%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::Formatter::pad_formatted_parts (2 samples, 0.01%)</title><rect x="93.8736%" y="197" width="0.0132%" height="15" fill="rgb(239,43,17)" fg:x="14235" fg:w="2"/><text x="94.1236%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (18 samples, 0.12%)</title><rect x="93.9000%" y="165" width="0.1187%" height="15" fill="rgb(231,177,25)" fg:x="14239" fg:w="18"/><text x="94.1500%" y="175.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::finish_grow (15 samples, 0.10%)</title><rect x="93.9198%" y="149" width="0.0989%" height="15" fill="rgb(219,179,1)" fg:x="14242" fg:w="15"/><text x="94.1698%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc (15 samples, 0.10%)</title><rect x="93.9198%" y="133" width="0.0989%" height="15" fill="rgb(238,219,53)" fg:x="14242" fg:w="15"/><text x="94.1698%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (13 samples, 0.09%)</title><rect x="93.9330%" y="117" width="0.0857%" height="15" fill="rgb(232,167,36)" fg:x="14244" fg:w="13"/><text x="94.1830%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (11 samples, 0.07%)</title><rect x="93.9462%" y="101" width="0.0725%" height="15" fill="rgb(244,19,51)" fg:x="14246" fg:w="11"/><text x="94.1962%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.06%)</title><rect x="93.9594%" y="85" width="0.0594%" height="15" fill="rgb(224,6,22)" fg:x="14248" fg:w="9"/><text x="94.2094%" y="95.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::Formatter::write_formatted_parts (22 samples, 0.15%)</title><rect x="93.8868%" y="197" width="0.1451%" height="15" fill="rgb(224,145,5)" fg:x="14237" fg:w="22"/><text x="94.1368%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (21 samples, 0.14%)</title><rect x="93.8934%" y="181" width="0.1385%" height="15" fill="rgb(234,130,49)" fg:x="14238" fg:w="21"/><text x="94.1434%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.01%)</title><rect x="94.0187%" y="165" width="0.0132%" height="15" fill="rgb(254,6,2)" fg:x="14257" fg:w="2"/><text x="94.2687%" y="175.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::write (65 samples, 0.43%)</title><rect x="93.7549%" y="229" width="0.4286%" height="15" fill="rgb(208,96,46)" fg:x="14217" fg:w="65"/><text x="94.0049%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::float::float_to_decimal_common_shortest (56 samples, 0.37%)</title><rect x="93.8143%" y="213" width="0.3693%" height="15" fill="rgb(239,3,39)" fg:x="14226" fg:w="56"/><text x="94.0643%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::num::flt2dec::strategy::grisu::format_shortest_opt (23 samples, 0.15%)</title><rect x="94.0319%" y="197" width="0.1517%" height="15" fill="rgb(233,210,1)" fg:x="14259" fg:w="23"/><text x="94.2819%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_find_by_ptr (2 samples, 0.01%)</title><rect x="94.2166%" y="181" width="0.0132%" height="15" fill="rgb(244,137,37)" fg:x="14287" fg:w="2"/><text x="94.4666%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_small (7 samples, 0.05%)</title><rect x="94.1968%" y="197" width="0.0462%" height="15" fill="rgb(240,136,2)" fg:x="14284" fg:w="7"/><text x="94.4468%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (2 samples, 0.01%)</title><rect x="94.2298%" y="181" width="0.0132%" height="15" fill="rgb(239,18,37)" fg:x="14289" fg:w="2"/><text x="94.4798%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::ptr::drop_in_place&lt;egui::widgets::plot::items::Line&gt; (10 samples, 0.07%)</title><rect x="94.1836%" y="213" width="0.0659%" height="15" fill="rgb(218,185,22)" fg:x="14282" fg:w="10"/><text x="94.4336%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.01%)</title><rect x="94.2693%" y="181" width="0.0132%" height="15" fill="rgb(225,218,4)" fg:x="14295" fg:w="2"/><text x="94.5193%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::ptr::drop_in_place&lt;egui::widgets::plot::Prepared&gt; (17 samples, 0.11%)</title><rect x="94.1836%" y="229" width="0.1121%" height="15" fill="rgb(230,182,32)" fg:x="14282" fg:w="17"/><text x="94.4336%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.05%)</title><rect x="94.2495%" y="213" width="0.0462%" height="15" fill="rgb(242,56,43)" fg:x="14292" fg:w="7"/><text x="94.4995%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.03%)</title><rect x="94.2627%" y="197" width="0.0330%" height="15" fill="rgb(233,99,24)" fg:x="14294" fg:w="5"/><text x="94.5127%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (2 samples, 0.01%)</title><rect x="94.2825%" y="181" width="0.0132%" height="15" fill="rgb(234,209,42)" fg:x="14297" fg:w="2"/><text x="94.5325%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::painter::Painter::extend (365 samples, 2.41%)</title><rect x="94.2957%" y="229" width="2.4070%" height="15" fill="rgb(227,7,12)" fg:x="14299" fg:w="365"/><text x="94.5457%" y="239.50">be..</text></g><g><title>benchmark-022a91b58b3cfee0`egui::layers::PaintList::extend (365 samples, 2.41%)</title><rect x="94.2957%" y="213" width="2.4070%" height="15" fill="rgb(245,203,43)" fg:x="14299" fg:w="365"/><text x="94.5457%" y="223.50">be..</text></g><g><title>benchmark-022a91b58b3cfee0`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (365 samples, 2.41%)</title><rect x="94.2957%" y="197" width="2.4070%" height="15" fill="rgb(238,205,33)" fg:x="14299" fg:w="365"/><text x="94.5457%" y="207.50">be..</text></g><g><title>benchmark-022a91b58b3cfee0`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.01%)</title><rect x="96.7225%" y="181" width="0.0132%" height="15" fill="rgb(231,56,7)" fg:x="14667" fg:w="2"/><text x="96.9725%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.01%)</title><rect x="96.7225%" y="165" width="0.0132%" height="15" fill="rgb(244,186,29)" fg:x="14667" fg:w="2"/><text x="96.9725%" y="175.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::finish_grow (2 samples, 0.01%)</title><rect x="96.7225%" y="149" width="0.0132%" height="15" fill="rgb(234,111,31)" fg:x="14667" fg:w="2"/><text x="96.9725%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc (2 samples, 0.01%)</title><rect x="96.7225%" y="133" width="0.0132%" height="15" fill="rgb(241,149,10)" fg:x="14667" fg:w="2"/><text x="96.9725%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (2 samples, 0.01%)</title><rect x="96.7225%" y="117" width="0.0132%" height="15" fill="rgb(249,206,44)" fg:x="14667" fg:w="2"/><text x="96.9725%" y="127.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::Formatter::write_formatted_parts (2 samples, 0.01%)</title><rect x="96.7357%" y="165" width="0.0132%" height="15" fill="rgb(251,153,30)" fg:x="14669" fg:w="2"/><text x="96.9857%" y="175.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.01%)</title><rect x="96.7357%" y="149" width="0.0132%" height="15" fill="rgb(239,152,38)" fg:x="14669" fg:w="2"/><text x="96.9857%" y="159.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.01%)</title><rect x="96.7357%" y="133" width="0.0132%" height="15" fill="rgb(249,139,47)" fg:x="14669" fg:w="2"/><text x="96.9857%" y="143.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::finish_grow (2 samples, 0.01%)</title><rect x="96.7357%" y="117" width="0.0132%" height="15" fill="rgb(244,64,35)" fg:x="14669" fg:w="2"/><text x="96.9857%" y="127.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::fmt::format (6 samples, 0.04%)</title><rect x="96.7159%" y="213" width="0.0396%" height="15" fill="rgb(216,46,15)" fg:x="14666" fg:w="6"/><text x="96.9659%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::write (6 samples, 0.04%)</title><rect x="96.7159%" y="197" width="0.0396%" height="15" fill="rgb(250,74,19)" fg:x="14666" fg:w="6"/><text x="96.9659%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::float::float_to_decimal_common_exact (3 samples, 0.02%)</title><rect x="96.7357%" y="181" width="0.0198%" height="15" fill="rgb(249,42,33)" fg:x="14669" fg:w="3"/><text x="96.9857%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::widgets::plot::items::rulers_at_value (11 samples, 0.07%)</title><rect x="96.7027%" y="229" width="0.0725%" height="15" fill="rgb(242,149,17)" fg:x="14664" fg:w="11"/><text x="96.9527%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`epaint::shape::Shape::text (3 samples, 0.02%)</title><rect x="96.7555%" y="213" width="0.0198%" height="15" fill="rgb(244,29,21)" fg:x="14672" fg:w="3"/><text x="97.0055%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::float::float_to_decimal_common_exact (2 samples, 0.01%)</title><rect x="96.7950%" y="197" width="0.0132%" height="15" fill="rgb(220,130,37)" fg:x="14678" fg:w="2"/><text x="97.0450%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.01%)</title><rect x="96.8940%" y="165" width="0.0132%" height="15" fill="rgb(211,67,2)" fg:x="14693" fg:w="2"/><text x="97.1440%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.01%)</title><rect x="97.0127%" y="69" width="0.0132%" height="15" fill="rgb(235,68,52)" fg:x="14711" fg:w="2"/><text x="97.2627%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (20 samples, 0.13%)</title><rect x="97.0259%" y="69" width="0.1319%" height="15" fill="rgb(246,142,3)" fg:x="14713" fg:w="20"/><text x="97.2759%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (19 samples, 0.13%)</title><rect x="97.0324%" y="53" width="0.1253%" height="15" fill="rgb(241,25,7)" fg:x="14714" fg:w="19"/><text x="97.2824%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (24 samples, 0.16%)</title><rect x="97.0061%" y="85" width="0.1583%" height="15" fill="rgb(242,119,39)" fg:x="14710" fg:w="24"/><text x="97.2561%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`malloc (28 samples, 0.18%)</title><rect x="96.9929%" y="101" width="0.1846%" height="15" fill="rgb(241,98,45)" fg:x="14708" fg:w="28"/><text x="97.2429%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.01%)</title><rect x="97.1643%" y="85" width="0.0132%" height="15" fill="rgb(254,28,30)" fg:x="14734" fg:w="2"/><text x="97.4143%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (6 samples, 0.04%)</title><rect x="97.1775%" y="85" width="0.0396%" height="15" fill="rgb(241,142,54)" fg:x="14736" fg:w="6"/><text x="97.4275%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (4 samples, 0.03%)</title><rect x="97.1907%" y="69" width="0.0264%" height="15" fill="rgb(222,85,15)" fg:x="14738" fg:w="4"/><text x="97.4407%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (4 samples, 0.03%)</title><rect x="97.1907%" y="53" width="0.0264%" height="15" fill="rgb(210,85,47)" fg:x="14738" fg:w="4"/><text x="97.4407%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (4 samples, 0.03%)</title><rect x="97.1907%" y="37" width="0.0264%" height="15" fill="rgb(224,206,25)" fg:x="14738" fg:w="4"/><text x="97.4407%" y="47.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (41 samples, 0.27%)</title><rect x="96.9599%" y="133" width="0.2704%" height="15" fill="rgb(243,201,19)" fg:x="14703" fg:w="41"/><text x="97.2099%" y="143.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::finish_grow (39 samples, 0.26%)</title><rect x="96.9731%" y="117" width="0.2572%" height="15" fill="rgb(236,59,4)" fg:x="14705" fg:w="39"/><text x="97.2231%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`realloc (8 samples, 0.05%)</title><rect x="97.1775%" y="101" width="0.0528%" height="15" fill="rgb(254,179,45)" fg:x="14736" fg:w="8"/><text x="97.4275%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (2 samples, 0.01%)</title><rect x="97.2171%" y="85" width="0.0132%" height="15" fill="rgb(226,14,10)" fg:x="14742" fg:w="2"/><text x="97.4671%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.01%)</title><rect x="97.2171%" y="69" width="0.0132%" height="15" fill="rgb(244,27,41)" fg:x="14742" fg:w="2"/><text x="97.4671%" y="79.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (47 samples, 0.31%)</title><rect x="96.9401%" y="149" width="0.3099%" height="15" fill="rgb(235,35,32)" fg:x="14700" fg:w="47"/><text x="97.1901%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.02%)</title><rect x="97.2303%" y="133" width="0.0198%" height="15" fill="rgb(218,68,31)" fg:x="14744" fg:w="3"/><text x="97.4803%" y="143.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::Formatter::write_formatted_parts (53 samples, 0.35%)</title><rect x="96.9071%" y="165" width="0.3495%" height="15" fill="rgb(207,120,37)" fg:x="14695" fg:w="53"/><text x="97.1571%" y="175.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::fmt::format (113 samples, 0.75%)</title><rect x="96.7884%" y="213" width="0.7452%" height="15" fill="rgb(227,98,0)" fg:x="14677" fg:w="113"/><text x="97.0384%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::write (110 samples, 0.73%)</title><rect x="96.8082%" y="197" width="0.7254%" height="15" fill="rgb(207,7,3)" fg:x="14680" fg:w="110"/><text x="97.0582%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::fmt::float::float_to_decimal_common_exact (104 samples, 0.69%)</title><rect x="96.8478%" y="181" width="0.6858%" height="15" fill="rgb(206,98,19)" fg:x="14686" fg:w="104"/><text x="97.0978%" y="191.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::num::flt2dec::strategy::grisu::format_exact_opt (42 samples, 0.28%)</title><rect x="97.2567%" y="165" width="0.2770%" height="15" fill="rgb(217,5,26)" fg:x="14748" fg:w="42"/><text x="97.5067%" y="175.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::num::flt2dec::strategy::grisu::format_exact_opt::possibly_round (2 samples, 0.01%)</title><rect x="97.5204%" y="149" width="0.0132%" height="15" fill="rgb(235,190,38)" fg:x="14788" fg:w="2"/><text x="97.7704%" y="159.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;f64 as core::num::dec2flt::rawfp::RawFloat&gt;::from_int (2 samples, 0.01%)</title><rect x="97.5864%" y="197" width="0.0132%" height="15" fill="rgb(247,86,24)" fg:x="14798" fg:w="2"/><text x="97.8364%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::num::dec2flt::dec2flt (13 samples, 0.09%)</title><rect x="97.5336%" y="213" width="0.0857%" height="15" fill="rgb(205,101,16)" fg:x="14790" fg:w="13"/><text x="97.7836%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`core::num::dec2flt::parse::parse_decimal (3 samples, 0.02%)</title><rect x="97.5996%" y="197" width="0.0198%" height="15" fill="rgb(246,168,33)" fg:x="14800" fg:w="3"/><text x="97.8496%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free (12 samples, 0.08%)</title><rect x="97.6260%" y="213" width="0.0791%" height="15" fill="rgb(231,114,1)" fg:x="14804" fg:w="12"/><text x="97.8760%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (9 samples, 0.06%)</title><rect x="97.6457%" y="197" width="0.0594%" height="15" fill="rgb(207,184,53)" fg:x="14807" fg:w="9"/><text x="97.8957%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (8 samples, 0.05%)</title><rect x="97.6523%" y="181" width="0.0528%" height="15" fill="rgb(224,95,51)" fg:x="14808" fg:w="8"/><text x="97.9023%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (9 samples, 0.06%)</title><rect x="97.7051%" y="213" width="0.0594%" height="15" fill="rgb(212,188,45)" fg:x="14816" fg:w="9"/><text x="97.9551%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`emath::round_to_decimals (151 samples, 1.00%)</title><rect x="96.7753%" y="229" width="0.9958%" height="15" fill="rgb(223,154,38)" fg:x="14675" fg:w="151"/><text x="97.0253%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`__rust_dealloc (2 samples, 0.01%)</title><rect x="97.8106%" y="213" width="0.0132%" height="15" fill="rgb(251,22,52)" fg:x="14832" fg:w="2"/><text x="98.0606%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;epaint::text::fonts::LayoutJob as core::hash::Hash&gt;::hash (3 samples, 0.02%)</title><rect x="97.8897%" y="197" width="0.0198%" height="15" fill="rgb(229,209,22)" fg:x="14844" fg:w="3"/><text x="98.1397%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (10 samples, 0.07%)</title><rect x="97.9095%" y="197" width="0.0659%" height="15" fill="rgb(234,138,34)" fg:x="14847" fg:w="10"/><text x="98.1595%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free (13 samples, 0.09%)</title><rect x="97.9821%" y="197" width="0.0857%" height="15" fill="rgb(212,95,11)" fg:x="14858" fg:w="13"/><text x="98.2321%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (10 samples, 0.07%)</title><rect x="98.0018%" y="181" width="0.0659%" height="15" fill="rgb(240,179,47)" fg:x="14861" fg:w="10"/><text x="98.2518%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (8 samples, 0.05%)</title><rect x="98.0150%" y="165" width="0.0528%" height="15" fill="rgb(240,163,11)" fg:x="14863" fg:w="8"/><text x="98.2650%" y="175.50"></text></g><g><title>benchmark-022a91b58b3cfee0`epaint::text::fonts::GalleyCache::layout (44 samples, 0.29%)</title><rect x="97.8238%" y="213" width="0.2902%" height="15" fill="rgb(236,37,12)" fg:x="14834" fg:w="44"/><text x="98.0738%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.05%)</title><rect x="98.0678%" y="197" width="0.0462%" height="15" fill="rgb(232,164,16)" fg:x="14871" fg:w="7"/><text x="98.3178%" y="207.50"></text></g><g><title>benchmark-022a91b58b3cfee0`epaint::text::fonts::Fonts::layout_single_line (53 samples, 0.35%)</title><rect x="97.7710%" y="229" width="0.3495%" height="15" fill="rgb(244,205,15)" fg:x="14826" fg:w="53"/><text x="98.0210%" y="239.50"></text></g><g><title>libsystem_m.dylib`0x00007fff6b1acc70 (54 samples, 0.36%)</title><rect x="98.1271%" y="229" width="0.3561%" height="15" fill="rgb(223,117,47)" fg:x="14880" fg:w="54"/><text x="98.3771%" y="239.50"></text></g><g><title>libsystem_m.dylib`roundf (24 samples, 0.16%)</title><rect x="98.4832%" y="229" width="0.1583%" height="15" fill="rgb(244,107,35)" fg:x="14934" fg:w="24"/><text x="98.7332%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;egui::widgets::plot::Plot as egui::widgets::Widget&gt;::ui (1,204 samples, 7.94%)</title><rect x="90.8401%" y="245" width="7.9399%" height="15" fill="rgb(205,140,8)" fg:x="13775" fg:w="1204"/><text x="91.0901%" y="255.50">benchmark-0..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (20 samples, 0.13%)</title><rect x="98.6481%" y="229" width="0.1319%" height="15" fill="rgb(228,84,46)" fg:x="14959" fg:w="20"/><text x="98.8981%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;epaint::color::Color32 as core::convert::From&lt;epaint::color::Hsva&gt;&gt;::from (3 samples, 0.02%)</title><rect x="98.9053%" y="213" width="0.0198%" height="15" fill="rgb(254,188,9)" fg:x="14998" fg:w="3"/><text x="99.1553%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;epaint::color::Color32 as core::convert::From&lt;epaint::color::Rgba&gt;&gt;::from (3 samples, 0.02%)</title><rect x="98.9251%" y="213" width="0.0198%" height="15" fill="rgb(206,112,54)" fg:x="15001" fg:w="3"/><text x="99.1751%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.01%)</title><rect x="98.9515%" y="213" width="0.0132%" height="15" fill="rgb(216,84,49)" fg:x="15005" fg:w="2"/><text x="99.2015%" y="223.50"></text></g><g><title>benchmark-022a91b58b3cfee0`alloc::raw_vec::finish_grow (2 samples, 0.01%)</title><rect x="98.9515%" y="197" width="0.0132%" height="15" fill="rgb(214,194,35)" fg:x="15005" fg:w="2"/><text x="99.2015%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`realloc (2 samples, 0.01%)</title><rect x="98.9515%" y="181" width="0.0132%" height="15" fill="rgb(249,28,3)" fg:x="15005" fg:w="2"/><text x="99.2015%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (2 samples, 0.01%)</title><rect x="98.9515%" y="165" width="0.0132%" height="15" fill="rgb(222,56,52)" fg:x="15005" fg:w="2"/><text x="99.2015%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (2 samples, 0.01%)</title><rect x="98.9515%" y="149" width="0.0132%" height="15" fill="rgb(245,217,50)" fg:x="15005" fg:w="2"/><text x="99.2015%" y="159.50"></text></g><g><title>libsystem_m.dylib`0x00007fff6b1acc70 (8 samples, 0.05%)</title><rect x="98.9647%" y="213" width="0.0528%" height="15" fill="rgb(213,201,24)" fg:x="15007" fg:w="8"/><text x="99.2147%" y="223.50"></text></g><g><title>libsystem_m.dylib`roundf (2 samples, 0.01%)</title><rect x="99.0174%" y="213" width="0.0132%" height="15" fill="rgb(248,116,28)" fg:x="15015" fg:w="2"/><text x="99.2674%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (2 samples, 0.01%)</title><rect x="99.0636%" y="149" width="0.0132%" height="15" fill="rgb(219,72,43)" fg:x="15022" fg:w="2"/><text x="99.3136%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc (10 samples, 0.07%)</title><rect x="99.0306%" y="213" width="0.0659%" height="15" fill="rgb(209,138,14)" fg:x="15017" fg:w="10"/><text x="99.2806%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (10 samples, 0.07%)</title><rect x="99.0306%" y="197" width="0.0659%" height="15" fill="rgb(222,18,33)" fg:x="15017" fg:w="10"/><text x="99.2806%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.06%)</title><rect x="99.0372%" y="181" width="0.0594%" height="15" fill="rgb(213,199,7)" fg:x="15018" fg:w="9"/><text x="99.2872%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.06%)</title><rect x="99.0372%" y="165" width="0.0594%" height="15" fill="rgb(250,110,10)" fg:x="15018" fg:w="9"/><text x="99.2872%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (3 samples, 0.02%)</title><rect x="99.0768%" y="149" width="0.0198%" height="15" fill="rgb(248,123,6)" fg:x="15024" fg:w="3"/><text x="99.3268%" y="159.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::widgets::plot::Plot::points (32 samples, 0.21%)</title><rect x="98.8987%" y="229" width="0.2110%" height="15" fill="rgb(206,91,31)" fg:x="14997" fg:w="32"/><text x="99.1487%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.01%)</title><rect x="99.0965%" y="213" width="0.0132%" height="15" fill="rgb(211,154,13)" fg:x="15027" fg:w="2"/><text x="99.3465%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc (9 samples, 0.06%)</title><rect x="99.1163%" y="229" width="0.0594%" height="15" fill="rgb(225,148,7)" fg:x="15030" fg:w="9"/><text x="99.3663%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (9 samples, 0.06%)</title><rect x="99.1163%" y="213" width="0.0594%" height="15" fill="rgb(220,160,43)" fg:x="15030" fg:w="9"/><text x="99.3663%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.06%)</title><rect x="99.1163%" y="197" width="0.0594%" height="15" fill="rgb(213,52,39)" fg:x="15030" fg:w="9"/><text x="99.3663%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (9 samples, 0.06%)</title><rect x="99.1163%" y="181" width="0.0594%" height="15" fill="rgb(243,137,7)" fg:x="15030" fg:w="9"/><text x="99.3663%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (4 samples, 0.03%)</title><rect x="99.1493%" y="165" width="0.0264%" height="15" fill="rgb(230,79,13)" fg:x="15035" fg:w="4"/><text x="99.3993%" y="175.50"></text></g><g><title>benchmark-022a91b58b3cfee0`benchmark::criterion_benchmark::points_plot (60 samples, 0.40%)</title><rect x="98.7932%" y="245" width="0.3957%" height="15" fill="rgb(247,105,23)" fg:x="14981" fg:w="60"/><text x="99.0432%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.01%)</title><rect x="99.1757%" y="229" width="0.0132%" height="15" fill="rgb(223,179,41)" fg:x="15039" fg:w="2"/><text x="99.4257%" y="239.50"></text></g><g><title>libsystem_m.dylib`round (2 samples, 0.01%)</title><rect x="99.1955%" y="245" width="0.0132%" height="15" fill="rgb(218,9,34)" fg:x="15042" fg:w="2"/><text x="99.4455%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::containers::frame::Frame::show (1,271 samples, 8.38%)</title><rect x="90.8401%" y="261" width="8.3817%" height="15" fill="rgb(222,106,8)" fg:x="13775" fg:w="1271"/><text x="91.0901%" y="271.50">benchmark-02..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.01%)</title><rect x="99.2087%" y="245" width="0.0132%" height="15" fill="rgb(211,220,0)" fg:x="15044" fg:w="2"/><text x="99.4587%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::containers::panel::CentralPanel::show (1,272 samples, 8.39%)</title><rect x="90.8401%" y="277" width="8.3883%" height="15" fill="rgb(229,52,16)" fg:x="13775" fg:w="1272"/><text x="91.0901%" y="287.50">benchmark-02..</text></g><g><title>benchmark-022a91b58b3cfee0`DYLD-STUB$$memmove (6 samples, 0.04%)</title><rect x="99.2284%" y="261" width="0.0396%" height="15" fill="rgb(212,155,18)" fg:x="15047" fg:w="6"/><text x="99.4784%" y="271.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::layers::GraphicLayers::drain (89 samples, 0.59%)</title><rect x="99.2680%" y="261" width="0.5869%" height="15" fill="rgb(242,21,14)" fg:x="15053" fg:w="89"/><text x="99.5180%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (69 samples, 0.46%)</title><rect x="99.3999%" y="245" width="0.4550%" height="15" fill="rgb(222,19,48)" fg:x="15073" fg:w="69"/><text x="99.6499%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::context::Context::end_frame (105 samples, 0.69%)</title><rect x="99.2284%" y="277" width="0.6924%" height="15" fill="rgb(232,45,27)" fg:x="15047" fg:w="105"/><text x="99.4784%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (9 samples, 0.06%)</title><rect x="99.8615%" y="261" width="0.0594%" height="15" fill="rgb(249,103,42)" fg:x="15143" fg:w="9"/><text x="100.1115%" y="271.50"></text></g><g><title>benchmark-022a91b58b3cfee0`criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (15,155 samples, 99.94%)</title><rect x="0.0132%" y="341" width="99.9406%" height="15" fill="rgb(246,81,33)" fg:x="2" fg:w="15155"/><text x="0.2632%" y="351.50">benchmark-022a91b58b3cfee0`criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>benchmark-022a91b58b3cfee0`criterion::routine::Routine::profile (15,155 samples, 99.94%)</title><rect x="0.0132%" y="325" width="99.9406%" height="15" fill="rgb(252,33,42)" fg:x="2" fg:w="15155"/><text x="0.2632%" y="335.50">benchmark-022a91b58b3cfee0`criterion::routine::Routine::profile</text></g><g><title>benchmark-022a91b58b3cfee0`&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (1,441 samples, 9.50%)</title><rect x="90.4511%" y="309" width="9.5028%" height="15" fill="rgb(209,212,41)" fg:x="13716" fg:w="1441"/><text x="90.7011%" y="319.50">benchmark-022a..</text></g><g><title>benchmark-022a91b58b3cfee0`criterion::bencher::Bencher&lt;M&gt;::iter (1,441 samples, 9.50%)</title><rect x="90.4511%" y="293" width="9.5028%" height="15" fill="rgb(207,154,6)" fg:x="13716" fg:w="1441"/><text x="90.7011%" y="303.50">benchmark-022a..</text></g><g><title>benchmark-022a91b58b3cfee0`egui::context::CtxRef::begin_frame (5 samples, 0.03%)</title><rect x="99.9209%" y="277" width="0.0330%" height="15" fill="rgb(223,64,47)" fg:x="15152" fg:w="5"/><text x="100.1709%" y="287.50"></text></g><g><title>benchmark-022a91b58b3cfee0`egui::context::CtxRef::begin_frame (2 samples, 0.01%)</title><rect x="99.9538%" y="341" width="0.0132%" height="15" fill="rgb(211,161,38)" fg:x="15157" fg:w="2"/><text x="100.2038%" y="351.50"></text></g><g><title>benchmark-022a91b58b3cfee0`epaint::text::fonts::Fonts::from_definitions (2 samples, 0.01%)</title><rect x="99.9538%" y="325" width="0.0132%" height="15" fill="rgb(219,138,40)" fg:x="15157" fg:w="2"/><text x="100.2038%" y="335.50"></text></g><g><title>benchmark-022a91b58b3cfee0`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.01%)</title><rect x="99.9538%" y="309" width="0.0132%" height="15" fill="rgb(241,228,46)" fg:x="15157" fg:w="2"/><text x="100.2038%" y="319.50"></text></g><g><title>benchmark-022a91b58b3cfee0`epaint::text::font::Font::new (2 samples, 0.01%)</title><rect x="99.9538%" y="293" width="0.0132%" height="15" fill="rgb(223,209,38)" fg:x="15157" fg:w="2"/><text x="100.2038%" y="303.50"></text></g><g><title>benchmark-022a91b58b3cfee0`epaint::text::font::Font::glyph_info (2 samples, 0.01%)</title><rect x="99.9538%" y="277" width="0.0132%" height="15" fill="rgb(236,164,45)" fg:x="15157" fg:w="2"/><text x="100.2038%" y="287.50"></text></g><g><title>benchmark-022a91b58b3cfee0`epaint::text::font::Font::glyph_info_no_cache_or_fallback (2 samples, 0.01%)</title><rect x="99.9538%" y="261" width="0.0132%" height="15" fill="rgb(231,15,5)" fg:x="15157" fg:w="2"/><text x="100.2038%" y="271.50"></text></g><g><title>benchmark-022a91b58b3cfee0`epaint::text::font::FontImpl::glyph_info (2 samples, 0.01%)</title><rect x="99.9538%" y="245" width="0.0132%" height="15" fill="rgb(252,35,15)" fg:x="15157" fg:w="2"/><text x="100.2038%" y="255.50"></text></g><g><title>benchmark-022a91b58b3cfee0`rusttype::PositionedGlyph::draw (2 samples, 0.01%)</title><rect x="99.9538%" y="229" width="0.0132%" height="15" fill="rgb(248,181,18)" fg:x="15157" fg:w="2"/><text x="100.2038%" y="239.50"></text></g><g><title>benchmark-022a91b58b3cfee0`main (15,162 samples, 99.99%)</title><rect x="0.0000%" y="421" width="99.9868%" height="15" fill="rgb(233,39,42)" fg:x="0" fg:w="15162"/><text x="0.2500%" y="431.50">benchmark-022a91b58b3cfee0`main</text></g><g><title>benchmark-022a91b58b3cfee0`std::rt::lang_start_internal (15,161 samples, 99.98%)</title><rect x="0.0066%" y="405" width="99.9802%" height="15" fill="rgb(238,110,33)" fg:x="1" fg:w="15161"/><text x="0.2566%" y="415.50">benchmark-022a91b58b3cfee0`std::rt::lang_start_internal</text></g><g><title>benchmark-022a91b58b3cfee0`std::rt::lang_start::_{{closure}} (15,161 samples, 99.98%)</title><rect x="0.0066%" y="389" width="99.9802%" height="15" fill="rgb(233,195,10)" fg:x="1" fg:w="15161"/><text x="0.2566%" y="399.50">benchmark-022a91b58b3cfee0`std::rt::lang_start::_{{closure}}</text></g><g><title>benchmark-022a91b58b3cfee0`std::sys_common::backtrace::__rust_begin_short_backtrace (15,161 samples, 99.98%)</title><rect x="0.0066%" y="373" width="99.9802%" height="15" fill="rgb(254,105,3)" fg:x="1" fg:w="15161"/><text x="0.2566%" y="383.50">benchmark-022a91b58b3cfee0`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>benchmark-022a91b58b3cfee0`benchmark::main (15,161 samples, 99.98%)</title><rect x="0.0066%" y="357" width="99.9802%" height="15" fill="rgb(221,225,9)" fg:x="1" fg:w="15161"/><text x="0.2566%" y="367.50">benchmark-022a91b58b3cfee0`benchmark::main</text></g><g><title>all (15,164 samples, 100%)</title><rect x="0.0000%" y="469" width="100.0000%" height="15" fill="rgb(224,227,45)" fg:x="0" fg:w="15164"/><text x="0.2500%" y="479.50"></text></g><g><title>benchmark-022a91b58b3cfee0`0x5 (15,164 samples, 100.00%)</title><rect x="0.0000%" y="453" width="100.0000%" height="15" fill="rgb(229,198,43)" fg:x="0" fg:w="15164"/><text x="0.2500%" y="463.50">benchmark-022a91b58b3cfee0`0x5</text></g><g><title>libdyld.dylib`start (15,164 samples, 100.00%)</title><rect x="0.0000%" y="437" width="100.0000%" height="15" fill="rgb(206,209,35)" fg:x="0" fg:w="15164"/><text x="0.2500%" y="447.50">libdyld.dylib`start</text></g><g><title>libsystem_kernel.dylib`__exit (2 samples, 0.01%)</title><rect x="99.9868%" y="421" width="0.0132%" height="15" fill="rgb(245,195,53)" fg:x="15162" fg:w="2"/><text x="100.2368%" y="431.50"></text></g></svg></svg>